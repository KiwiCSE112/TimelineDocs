[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "app/actions/authorizeActions.jsx",
    "content": "import { firebaseRef, firebaseAuth } from 'app/firebase/';\r\nimport moment from 'moment';\r\nimport { push } from 'react-router-redux';\r\n\r\n// - Import action types\r\nimport * as types from 'actionTypes';\r\n\r\n// - Import actions\r\nimport * as globalActions from 'globalActions';\r\n\r\n/* _____________ CRUD DB _____________ */\r\n\r\n/**\r\n * Log in user in server\r\n * @param {string} email \r\n * @param {string} password \r\n */\r\nexport var dbLogin = (email, password) => {\r\n    return (dispatch, getState) => {\r\n\r\n        // Encrypt password input to compare with that stored in db\r\n        let bcrypt = require('bcryptjs');\r\n        let ref = firebase.database().ref('/users');;\r\n        ref.once('value', (snapshot) => {\r\n            // find info of user with proper email\r\n            let key;\r\n            for (key in snapshot.val()) {\r\n                let info = snapshot.val()[key]['info'];\r\n                if (email.localeCompare(info.email) === 0) {\r\n                    console.log(info.password);\r\n                    if(info.password) {\r\n                        password = bcrypt.compareSync(password, info.password) ? info.password : password;\r\n                    }\r\n                    break;\r\n                };\r\n            }\r\n            // Log in user if input matches credentials in db\r\n            return firebaseAuth().signInWithEmailAndPassword(email, password).then((result) => {\r\n                dispatch(globalActions.showNotificationSuccess());\r\n                dispatch(login(result.uid));\r\n                dispatch(push('/'));\r\n            }, (error) => dispatch(globalActions.showErrorMessage(error.code)))\r\n        });\r\n    }\r\n}\r\n\r\n// Log out user in server\r\nexport var dbLogout = () => {\r\n    return (dispatch, getState) => {\r\n        return firebaseAuth().signOut().then((result) => {\r\n            dispatch(logout());\r\n            dispatch(push('/login'));\r\n\r\n        }, (error) => dispatch(globalActions.showErrorMessage(error.code)));\r\n    }\r\n}\r\n\r\n/**\r\n * Register user in database\r\n * @param {object} user \r\n */\r\nexport var dbSignup = (user) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(globalActions.showNotificationRequest());\r\n        return firebaseAuth().createUserWithEmailAndPassword(user.email, user.password).then((signupResult) => {\r\n            firebaseRef.child(`users/${signupResult.uid}/info`).set({\r\n                ...user,\r\n                avatar: 'noImage'\r\n            }).then((result) => {\r\n                dispatch(globalActions.showNotificationSuccess())\r\n            }, (error) => dispatch(globalActions.showErrorMessage(error.code)));\r\n\r\n            dispatch(signup({\r\n                uid: signupResult.uid,\r\n                ...user\r\n            }));\r\n\r\n            dispatch(push('/'));\r\n        }, (error) => dispatch(globalActions.showErrorMessage(error.code)))\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Change user's password\r\n * @param {string} newPassword \r\n */\r\nexport const dbUpdatePassword = (newPassword) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(globalActions.showNotificationRequest());\r\n        firebaseAuth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                user.updatePassword(newPassword).then(() => {\r\n                    // Update successful.\r\n                    dispatch(globalActions.showNotificationSuccess());\r\n                    dispatch(updatePassword());\r\n                    dispatch(push('/'));\r\n                }, (error) => {\r\n                    // An error happened.\r\n                    switch (error.code) {\r\n                        case 'auth/requires-recent-login':\r\n                            dispatch(globalActions.showErrorMessage(error.code));\r\n                            dispatch(dbLogout());\r\n                            break;\r\n                        default:\r\n                    }\r\n                })\r\n            }\r\n\r\n        })\r\n    }\r\n}\r\n\r\n/* _____________ CRUD State _____________ */\r\n\r\n/**\r\n * Loing user\r\n * @param {string} uid \r\n */\r\nexport var login = (uid) => {\r\n    return { type: types.LOGIN, authed: true, uid };\r\n}\r\n\r\n/**\r\n * Logout user\r\n */\r\nexport var logout = () => {\r\n    return { type: types.LOGOUT };\r\n}\r\n\r\n/**\r\n *  Register user\r\n * @param {object} user \r\n */\r\nexport var signup = (user) => {\r\n    return {\r\n        type: types.SIGNUP,\r\n        ...user\r\n    };\r\n}\r\n\r\n/**\r\n * Update user's password\r\n */\r\nexport const updatePassword = () => {\r\n    return { type: types.UPDATE_PASSWORD };\r\n}\r\n\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/actions/authorizeActions.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "dbLogin",
    "memberof": "app/actions/authorizeActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/authorizeActions.jsx~dbLogin",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/authorizeActions.jsx",
    "importStyle": "{dbLogin}",
    "description": "Log in user in server",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "dbLogout",
    "memberof": "app/actions/authorizeActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/authorizeActions.jsx~dbLogout",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/authorizeActions.jsx",
    "importStyle": "{dbLogout}",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "dbSignup",
    "memberof": "app/actions/authorizeActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/authorizeActions.jsx~dbSignup",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/authorizeActions.jsx",
    "importStyle": "{dbSignup}",
    "description": "Register user in database",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "dbUpdatePassword",
    "memberof": "app/actions/authorizeActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/authorizeActions.jsx~dbUpdatePassword",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/authorizeActions.jsx",
    "importStyle": "{dbUpdatePassword}",
    "description": "Change user's password",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newPassword",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "function",
    "name": "login",
    "memberof": "app/actions/authorizeActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/authorizeActions.jsx~login",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/authorizeActions.jsx",
    "importStyle": "{login}",
    "description": "Loing user",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"authed\": boolean, \"uid\": *}"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "function",
    "name": "logout",
    "memberof": "app/actions/authorizeActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/authorizeActions.jsx~logout",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/authorizeActions.jsx",
    "importStyle": "{logout}",
    "description": "Logout user",
    "lineNumber": 127,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "function",
    "name": "signup",
    "memberof": "app/actions/authorizeActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/authorizeActions.jsx~signup",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/authorizeActions.jsx",
    "importStyle": "{signup}",
    "description": " Register user",
    "lineNumber": 135,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, ...user: Object}"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "function",
    "name": "updatePassword",
    "memberof": "app/actions/authorizeActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/authorizeActions.jsx~updatePassword",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/authorizeActions.jsx",
    "importStyle": "{updatePassword}",
    "description": "Update user's password",
    "lineNumber": 145,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "app/actions/circleActions.jsx",
    "content": "import firebase, { firebaseRef } from 'app/firebase/';\r\n\r\n// - Import utility components\r\nimport moment from 'moment';\r\n\r\n// - Import action types\r\nimport * as types from 'actionTypes';\r\n\r\n// - Import actions\r\nimport * as globalActions from 'globalActions';\r\nimport * as postActions from 'postActions';\r\nimport * as userActions from 'userActions';\r\nimport * as notifyActions from 'notifyActions';\r\n\r\n/* _____________ CRUD DB _____________ */\r\n\r\n/**\r\n * Add a circle\r\n * @param {string} circleName \r\n */\r\nexport var dbAddCircle = (circleName) => {\r\n    return (dispatch, getState) => {\r\n        let uid = getState().authorize.uid;\r\n        let circle = {\r\n            creationDate: moment().unix(),\r\n            name: circleName,\r\n            users: {}\r\n        };\r\n\r\n        let circleRef = firebaseRef.child(`userCircles/${uid}/circles`).push(circle);\r\n        return circleRef.then(() => {\r\n            dispatch(addCircle(uid, {\r\n                ...circle,\r\n                id: circleRef.key\r\n            }));\r\n\r\n        }, (error) => dispatch(globalActions.showErrorMessage(error.message)));\r\n    }\r\n}\r\n\r\n/**\r\n * Add a user in a circle\r\n * @param {string} cid is circle identifier \r\n * @param {object} userFollowing is the user for following\r\n */\r\nexport var dbAddFollowingUser = (cid, userFollowing) => {\r\n    return (dispatch, getState) => {\r\n        let uid = getState().authorize.uid;\r\n        let user = getState().user.info[uid];\r\n\r\n        let userCircle = {\r\n            creationDate: moment().unix(),\r\n            fullName: userFollowing.fullName,\r\n            avatar: userFollowing.avatar || ''\r\n        };\r\n\r\n        let userFollower = {\r\n            creationDate: moment().unix(),\r\n            fullName: user.fullName,\r\n            avatar: user.avatar || '',\r\n            approved: false\r\n        };\r\n\r\n        let updates = {};\r\n        updates[`userCircles/${uid}/circles/${cid}/users/${userFollowing.userId}`] = userCircle;\r\n        updates[`userCircles/${userFollowing.userId}/circles/-Followers/users/${uid}`] = userFollower;\r\n        return firebaseRef.update(updates).then((result) => {\r\n            dispatch(addFollowingUser(uid, cid, userFollowing.userId, { ...userCircle }));\r\n\r\n            dispatch(notifyActions.dbAddNotify(\r\n                {\r\n                    description: `${user.fullName} follow you.`,\r\n                    url: `/${uid}`,\r\n                    notifyRecieverUserId: userFollowing.userId, notifierUserId: uid\r\n                }));\r\n\r\n        }, (error) => {\r\n            dispatch(globalActions.showErrorMessage(error.message));\r\n        })\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Delete a user from a circle\r\n * @param {string} cid is circle identifier \r\n * @param {string} followingId following user identifier\r\n */\r\nexport var dbDeleteFollowingUser = (cid, followingId) => {\r\n    return (dispatch, getState) => {\r\n        let uid = getState().authorize.uid;\r\n        let updates = {};\r\n        updates[`userCircles/${uid}/circles/${cid}/users/${followingId}`] = null;\r\n        updates[`userCircles/${followingId}/circles/-Followers/users/${uid}`] = null;\r\n        return firebaseRef.update(updates).then((result) => {\r\n            dispatch(deleteFollowingUser(uid, cid, followingId))\r\n        }, (error) => {\r\n            dispatch(globalActions.showErrorMessage(error.message))\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Update a circle from database\r\n * @param  {object} newCircle\r\n */\r\nexport const dbUpdateCircle = (newCircle) => {\r\n    return (dispatch, getState) => {\r\n        // Get current user id\r\n        var uid = getState().authorize.uid;\r\n\r\n        // Write the new data simultaneously in the list\r\n        let updates = {};\r\n        let circle = getState().circle.userCircles[uid][newCircle.id];\r\n        let updatedCircle = {\r\n            name: newCircle.name || circle.name,\r\n            users: newCircle.users ? newCircle.users : (circle.users || [])\r\n        };\r\n\r\n        updates[`userCircles/${uid}/circles/${newCircle.id}`] = updatedCircle;\r\n        return firebaseRef.update(updates).then((result) => {\r\n            dispatch(updateCircle(uid, { id: newCircle.id, ...updatedCircle }))\r\n        }, (error) => {\r\n            dispatch(globalActions.showErrorMessage(error.message))\r\n        });\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Delete a circle from database\r\n * @param  {string} id is circle identifier\r\n */\r\nexport const dbDeleteCircle = (id) => {\r\n    return (dispatch, getState) => {\r\n\r\n        // Get current user id\r\n        var uid = getState().authorize.uid\r\n\r\n        // Write the new data simultaneously in the list\r\n        var updates = {};\r\n        updates[`userCircles/${uid}/circles/${id}`] = null;\r\n\r\n        return firebaseRef.update(updates).then((result) => {\r\n            dispatch(deleteCircle(uid, id))\r\n        }, (error) => {\r\n            dispatch(globalActions.showErrorMessage(error.message))\r\n        });\r\n    }\r\n\r\n}\r\n\r\n//  Get all user circles from data base\r\nexport const dbGetCircles = () => {\r\n    return (dispatch, getState) => {\r\n        let uid = getState().authorize.uid;\r\n        if (uid) {\r\n            var circlesRef = firebaseRef.child(`userCircles/${uid}/circles`);\r\n\r\n            return circlesRef.once('value').then((snapshot) => {\r\n                let circles = snapshot.val() || {};\r\n                let parsedCircles = {};\r\n                Object.keys(circles).forEach((circleId) => {\r\n                    if (circleId !== '-Followers' && circles[circleId].users) {\r\n                        Object.keys(circles[circleId].users).filter((v, i, a) => a.indexOf(v) === i).forEach((userId) => {\r\n                            dispatch(postActions.dbGetPostsByUserId(userId));\r\n                            dispatch(userActions.dbGetUserInfoByUserId(userId));\r\n                        })\r\n                    }\r\n\r\n                    parsedCircles[circleId] = {\r\n                        id: circleId,\r\n                        ...circles[circleId]\r\n                    };\r\n                })\r\n\r\n                dispatch(addCircles(uid, parsedCircles));;\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//  Get all user circles from data base by user id\r\nexport const dbGetCirclesByUserId = (uid) => {\r\n    return (dispatch, getState) => {\r\n        if (uid) {\r\n            let circlesRef = firebaseRef.child(`userCircles/${uid}/circles`);\r\n\r\n            return circlesRef.once('value').then((snapshot) => {\r\n                let circles = snapshot.val() || {};\r\n                let parsedCircles = {};\r\n                Object.keys(circles).forEach((circleId) => {\r\n                    parsedCircles[circleId] = {\r\n                        id: circleId,\r\n                        ...circles[circleId]\r\n                    };\r\n                })\r\n                dispatch(addCircles(uid, parsedCircles));\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n/* _____________ CRUD State _____________ */\r\n\r\n/**\r\n * Add a normal circle\r\n * @param {string} uid is user identifier\r\n * @param {object} circle \r\n */\r\nexport const addCircle = (uid, circle) => {\r\n    return {\r\n        type: types.ADD_CIRCLE,\r\n        payload: { uid, circle }\r\n    };\r\n}\r\n\r\n/**\r\n * Update a circle\r\n * @param {string} uid is user identifier\r\n * @param {object} circle \r\n */\r\nexport const updateCircle = (uid, circle) => {\r\n    return {\r\n        type: types.UPDATE_CIRCLE,\r\n        payload: { uid, circle }\r\n    };\r\n}\r\n\r\n/**\r\n * Delete a circle\r\n * @param {string} uid is user identifier\r\n * @param {string} id is circle identifier\r\n */\r\nexport const deleteCircle = (uid, id) => {\r\n    return {\r\n        type: types.DELETE_CIRCLE,\r\n        payload: { uid, id }\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * Add a list of circle\r\n * @param {string} uid \r\n * @param {[object]} circles \r\n */\r\nexport const addCircles = (uid, circles) => {\r\n    return {\r\n        type: types.ADD_LIST_CIRCLE,\r\n        payload: { uid, circles }\r\n    };\r\n}\r\n\r\n/**\r\n * Clea all data in circle store\r\n */\r\nexport const clearAllCircles = () => {\r\n    return {\r\n        type: types.CLEAR_ALL_CIRCLES\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * Open circle settings\r\n */\r\nexport const openCircleSettings = (uid, id) => {\r\n    return {\r\n        type: types.OPEN_CIRCLE_SETTINGS,\r\n        payload: { uid, id }\r\n    };\r\n}\r\n\r\n/**\r\n * Close open circle settings\r\n */\r\nexport const closeCircleSettings = (uid, id) => {\r\n    return {\r\n        type: types.CLOSE_CIRCLE_SETTINGS,\r\n        payload: { uid, id }\r\n    };\r\n}\r\n\r\n/**\r\n * Add following user in a circle\r\n * @param {string} uid user identifire who want to follow the following user\r\n * @param {string} cid circle identifier that following user should be added in\r\n * @param {string} followingId following user identifier\r\n * @param {object} userCircle information about following user\r\n */\r\nexport const addFollowingUser = (uid, cid, followingId, userCircle) => {\r\n    return {\r\n        type: types.ADD_FOLLOWING_USER,\r\n        payload: { uid, cid, followingId, userCircle }\r\n    };\r\n}\r\n\r\n/**\r\n * Delete following user from a circle\r\n * @param {string} uid user identifire who want to follow the following user\r\n * @param {string} cid circle identifier that following user should be added in\r\n * @param {string} followingId following user identifier\r\n */\r\nexport const deleteFollowingUser = (uid, cid, followingId) => {\r\n    return {\r\n        type: types.DELETE_FOLLOWING_USER,\r\n        payload: { uid, cid, followingId }\r\n    };\r\n}",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/actions/circleActions.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "function",
    "name": "dbAddCircle",
    "memberof": "app/actions/circleActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/circleActions.jsx~dbAddCircle",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/circleActions.jsx",
    "importStyle": "{dbAddCircle}",
    "description": "Add a circle",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "circleName",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "function",
    "name": "dbAddFollowingUser",
    "memberof": "app/actions/circleActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/circleActions.jsx~dbAddFollowingUser",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/circleActions.jsx",
    "importStyle": "{dbAddFollowingUser}",
    "description": "Add a user in a circle",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cid",
        "description": "is circle identifier"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "userFollowing",
        "description": "is the user for following"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "function",
    "name": "dbDeleteFollowingUser",
    "memberof": "app/actions/circleActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/circleActions.jsx~dbDeleteFollowingUser",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/circleActions.jsx",
    "importStyle": "{dbDeleteFollowingUser}",
    "description": "Delete a user from a circle",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cid",
        "description": "is circle identifier"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "followingId",
        "description": "following user identifier"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "function",
    "name": "dbUpdateCircle",
    "memberof": "app/actions/circleActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/circleActions.jsx~dbUpdateCircle",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/circleActions.jsx",
    "importStyle": "{dbUpdateCircle}",
    "description": "Update a circle from database",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "newCircle",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "dbDeleteCircle",
    "memberof": "app/actions/circleActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/circleActions.jsx~dbDeleteCircle",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/circleActions.jsx",
    "importStyle": "{dbDeleteCircle}",
    "description": "Delete a circle from database",
    "lineNumber": 134,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "is circle identifier"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "dbGetCircles",
    "memberof": "app/actions/circleActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/circleActions.jsx~dbGetCircles",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/circleActions.jsx",
    "importStyle": "{dbGetCircles}",
    "description": null,
    "lineNumber": 154,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "function",
    "name": "dbGetCirclesByUserId",
    "memberof": "app/actions/circleActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/circleActions.jsx~dbGetCirclesByUserId",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/circleActions.jsx",
    "importStyle": "{dbGetCirclesByUserId}",
    "description": null,
    "lineNumber": 185,
    "undocument": true,
    "params": [
      {
        "name": "uid",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "function",
    "name": "addCircle",
    "memberof": "app/actions/circleActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/circleActions.jsx~addCircle",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/circleActions.jsx",
    "importStyle": "{addCircle}",
    "description": "Add a normal circle",
    "lineNumber": 212,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "is user identifier"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "circle",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "updateCircle",
    "memberof": "app/actions/circleActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/circleActions.jsx~updateCircle",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/circleActions.jsx",
    "importStyle": "{updateCircle}",
    "description": "Update a circle",
    "lineNumber": 224,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "is user identifier"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "circle",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "deleteCircle",
    "memberof": "app/actions/circleActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/circleActions.jsx~deleteCircle",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/circleActions.jsx",
    "importStyle": "{deleteCircle}",
    "description": "Delete a circle",
    "lineNumber": 236,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "is user identifier"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "is circle identifier"
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "function",
    "name": "addCircles",
    "memberof": "app/actions/circleActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/circleActions.jsx~addCircles",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/circleActions.jsx",
    "importStyle": "{addCircles}",
    "description": "Add a list of circle",
    "lineNumber": 249,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "[object]"
        ],
        "spread": false,
        "optional": false,
        "name": "circles",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "function",
    "name": "clearAllCircles",
    "memberof": "app/actions/circleActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/circleActions.jsx~clearAllCircles",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/circleActions.jsx",
    "importStyle": "{clearAllCircles}",
    "description": "Clea all data in circle store",
    "lineNumber": 259,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "openCircleSettings",
    "memberof": "app/actions/circleActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/circleActions.jsx~openCircleSettings",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/circleActions.jsx",
    "importStyle": "{openCircleSettings}",
    "description": "Open circle settings",
    "lineNumber": 269,
    "params": [
      {
        "name": "uid",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "function",
    "name": "closeCircleSettings",
    "memberof": "app/actions/circleActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/circleActions.jsx~closeCircleSettings",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/circleActions.jsx",
    "importStyle": "{closeCircleSettings}",
    "description": "Close open circle settings",
    "lineNumber": 279,
    "params": [
      {
        "name": "uid",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "addFollowingUser",
    "memberof": "app/actions/circleActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/circleActions.jsx~addFollowingUser",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/circleActions.jsx",
    "importStyle": "{addFollowingUser}",
    "description": "Add following user in a circle",
    "lineNumber": 293,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "user identifire who want to follow the following user"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cid",
        "description": "circle identifier that following user should be added in"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "followingId",
        "description": "following user identifier"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "userCircle",
        "description": "information about following user"
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "function",
    "name": "deleteFollowingUser",
    "memberof": "app/actions/circleActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/circleActions.jsx~deleteFollowingUser",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/circleActions.jsx",
    "importStyle": "{deleteFollowingUser}",
    "description": "Delete following user from a circle",
    "lineNumber": 306,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "user identifire who want to follow the following user"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cid",
        "description": "circle identifier that following user should be added in"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "followingId",
        "description": "following user identifier"
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "app/actions/commentActions.jsx",
    "content": "import moment from 'moment';\r\nimport { firebaseRef } from 'app/firebase/';\r\n\r\n// - Import action types\r\nimport * as types from 'actionTypes';\r\n\r\n// - Import actions\r\nimport * as globalActions from 'globalActions';\r\nimport * as notifyActions from 'notifyActions';\r\n\r\n/* _____________ CRUD DB _____________ */\r\n\r\n/**\r\n *  Add comment to database\r\n * @param  {object} newComment user comment\r\n * @param  {function} callBack  will be fired when server responsed\r\n */\r\nexport const dbAddComment = (newComment, callBack) => {\r\n    return (dispatch, getState) => {\r\n\r\n        dispatch(globalActions.showTopLoading());\r\n\r\n\r\n        let uid = getState().authorize.uid;\r\n        let comment = {\r\n            postId: newComment.postId,\r\n            score: 0,\r\n            text: newComment.text,\r\n            creationDate: moment().unix(),\r\n            userDisplayName: getState().user.info[uid].fullName,\r\n            userAvatar: getState().user.info[uid].avatar,\r\n            userId: uid\r\n        };\r\n\r\n        let commentRef = firebaseRef.child(`postComments/${newComment.postId}`).push(comment);\r\n        return commentRef.then(() => {\r\n            dispatch(addComment(\r\n                {\r\n                    comment,\r\n                    postId: newComment.postId,\r\n                    id: commentRef.key,\r\n                    editorStatus: false\r\n                }));\r\n            callBack();\r\n            dispatch(globalActions.hideTopLoading());\r\n\r\n            if (newComment.ownerPostUserId !== uid)\r\n                dispatch(notifyActions.dbAddNotify(\r\n                    {\r\n                        description: 'Add comment on your post.',\r\n                        url: `/${newComment.ownerPostUserId}/posts/${newComment.postId}`,\r\n                        notifyRecieverUserId: newComment.ownerPostUserId, notifierUserId: uid\r\n                    }));\r\n        }, (error) => {\r\n            dispatch(globalActions.showErrorMessage(error.message));\r\n            dispatch(globalActions.hideTopLoading());\r\n        })\r\n\r\n    }\r\n}\r\n\r\n// Get all comments from database\r\nexport const dbGetComments = () => {\r\n    return (dispatch, getState) => {\r\n        let uid = getState().authorize.uid;\r\n        if (uid) {\r\n            let commentsRef = firebaseRef.child(`postComments`);\r\n\r\n            return commentsRef.on('value', (snapshot) => {\r\n                let comments = snapshot.val() || {};\r\n                dispatch(addCommentList(comments));\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Update a comment from database\r\n * @param  {string} id of comment\r\n * @param {string} postId is the identifier of the post which comment belong to\r\n */\r\nexport const dbUpdateComment = (id, postId, text) => {\r\n    return (dispatch, getState) => {\r\n\r\n        dispatch(globalActions.showTopLoading());\r\n\r\n        // Get current user id\r\n        let uid = getState().authorize.uid;\r\n\r\n        // Write the new data simultaneously in the list\r\n        let updates = {};\r\n        let comment = getState().comment.postComments[postId][id];\r\n\r\n        updates[`postComments/${postId}/${id}`] = {\r\n            postId: postId,\r\n            score: comment.score,\r\n            text: text,\r\n            creationDate: comment.creationDate,\r\n            userDisplayName: comment.userDisplayName,\r\n            userAvatar: comment.userAvatar,\r\n            userId: uid\r\n        };\r\n\r\n        return firebaseRef.update(updates).then((result) => {\r\n            dispatch(updateComment({ id, postId, text, editorStatus: false }));\r\n            dispatch(globalActions.hideTopLoading());\r\n        }, (error) => {\r\n            dispatch(globalActions.showErrorMessage(error.message));\r\n            dispatch(globalActions.hideTopLoading());\r\n        });\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Delete a comment from database\r\n * @param  {string} id of comment\r\n * @param {string} postId is the identifier of the post which comment belong to\r\n */\r\nexport const dbDeleteComment = (id, postId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(globalActions.showTopLoading());\r\n\r\n        // Get current user id\r\n        let uid = getState().authorize.uid;\r\n\r\n        // Write the new data simultaneously in the list\r\n        let updates = {};\r\n        updates[`postComments/${postId}/${id}`] = null;\r\n\r\n        return firebaseRef.update(updates).then((result) => {\r\n            dispatch(deleteComment(id, postId));\r\n            dispatch(globalActions.hideTopLoading());\r\n        }, (error) => {\r\n            dispatch(globalActions.showErrorMessage(error.message));\r\n            dispatch(globalActions.hideTopLoading());\r\n        });\r\n    }\r\n}\r\n\r\n/* _____________ CRUD State _____________ */\r\n\r\n/**\r\n * Add comment \r\n * @param {object} data  \r\n */\r\nexport const addComment = (data) => {\r\n    return {\r\n        type: types.ADD_COMMENT,\r\n        payload: data\r\n    };\r\n}\r\n\r\n/**\r\n * Update comment \r\n * @param {object} data  \r\n */\r\nexport const updateComment = (data) => {\r\n    return {\r\n        type: types.UPDATE_COMMENT,\r\n        payload: data\r\n    };\r\n}\r\n\r\n/**\r\n * Add comment list\r\n * @param {[object]} postComments an array of comments\r\n */\r\nexport const addCommentList = (postComments) => {\r\n    return {\r\n        type: types.ADD_COMMENT_LIST,\r\n        payload: postComments\r\n    };\r\n}\r\n\r\n/**\r\n * Delete a comment\r\n * @param  {string} id of comment\r\n * @param {string} postId is the identifier of the post which comment belong to\r\n */\r\nexport const deleteComment = (id, postId) => {\r\n    return { type: types.DELETE_COMMENT, payload: { id, postId } };\r\n}\r\n\r\n// Clear all data\r\nexport const clearAllData = () => {\r\n    return {\r\n        type: types.CLEAR_ALL_DATA_COMMENT\r\n    };\r\n}\r\n\r\nexport const openCommentEditor = (comment) => {\r\n    return {\r\n        type: types.OPEN_COMMENT_EDITOR,\r\n        payload: comment\r\n    };\r\n}\r\n\r\nexport const closeCommentEditor = (comment) => {\r\n    return {\r\n        type: types.CLOSE_COMMENT_EDITOR,\r\n        payload: comment\r\n    };\r\n}",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/actions/commentActions.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "function",
    "name": "dbAddComment",
    "memberof": "app/actions/commentActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/commentActions.jsx~dbAddComment",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/commentActions.jsx",
    "importStyle": "{dbAddComment}",
    "description": " Add comment to database",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "newComment",
        "description": "user comment"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callBack",
        "description": "will be fired when server responsed"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "function",
    "name": "dbGetComments",
    "memberof": "app/actions/commentActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/commentActions.jsx~dbGetComments",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/commentActions.jsx",
    "importStyle": "{dbGetComments}",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "function",
    "name": "dbUpdateComment",
    "memberof": "app/actions/commentActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/commentActions.jsx~dbUpdateComment",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/commentActions.jsx",
    "importStyle": "{dbUpdateComment}",
    "description": "Update a comment from database",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "of comment"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "postId",
        "description": "is the identifier of the post which comment belong to"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "dbDeleteComment",
    "memberof": "app/actions/commentActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/commentActions.jsx~dbDeleteComment",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/commentActions.jsx",
    "importStyle": "{dbDeleteComment}",
    "description": "Delete a comment from database",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "of comment"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "postId",
        "description": "is the identifier of the post which comment belong to"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "addComment",
    "memberof": "app/actions/commentActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/commentActions.jsx~addComment",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/commentActions.jsx",
    "importStyle": "{addComment}",
    "description": "Add comment ",
    "lineNumber": 147,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "function",
    "name": "updateComment",
    "memberof": "app/actions/commentActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/commentActions.jsx~updateComment",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/commentActions.jsx",
    "importStyle": "{updateComment}",
    "description": "Update comment ",
    "lineNumber": 158,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "addCommentList",
    "memberof": "app/actions/commentActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/commentActions.jsx~addCommentList",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/commentActions.jsx",
    "importStyle": "{addCommentList}",
    "description": "Add comment list",
    "lineNumber": 169,
    "params": [
      {
        "nullable": null,
        "types": [
          "[object]"
        ],
        "spread": false,
        "optional": false,
        "name": "postComments",
        "description": "an array of comments"
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "deleteComment",
    "memberof": "app/actions/commentActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/commentActions.jsx~deleteComment",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/commentActions.jsx",
    "importStyle": "{deleteComment}",
    "description": "Delete a comment",
    "lineNumber": 181,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "of comment"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "postId",
        "description": "is the identifier of the post which comment belong to"
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "function",
    "name": "clearAllData",
    "memberof": "app/actions/commentActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/commentActions.jsx~clearAllData",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/commentActions.jsx",
    "importStyle": "{clearAllData}",
    "description": null,
    "lineNumber": 186,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "openCommentEditor",
    "memberof": "app/actions/commentActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/commentActions.jsx~openCommentEditor",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/commentActions.jsx",
    "importStyle": "{openCommentEditor}",
    "description": null,
    "lineNumber": 192,
    "undocument": true,
    "params": [
      {
        "name": "comment",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "function",
    "name": "closeCommentEditor",
    "memberof": "app/actions/commentActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/commentActions.jsx~closeCommentEditor",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/commentActions.jsx",
    "importStyle": "{closeCommentEditor}",
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "params": [
      {
        "name": "comment",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "file",
    "name": "app/actions/globalActions.jsx",
    "content": "import * as types from 'actionTypes';\r\n\r\n// - Import actions\r\nimport * as postActions from 'postActions';\r\nimport * as commentActions from 'commentActions';\r\nimport * as userActions from 'userActions';\r\n\r\n/**\r\n * Progress change\r\n * @param {string} percent \r\n * @param {boolean} visible \r\n */\r\nexport const progressChange = (percent, visible) => {\r\n    return {\r\n        type: types.PROGRESS_CHANGE,\r\n        payload: { percent, visible }\r\n    };\r\n}\r\n\r\n// Default data loaded status will be true\r\nexport const defaultDataEnable = () => {\r\n    return {\r\n        type: types.DEFAULT_DATA_ENABLE\r\n    };\r\n}\r\n\r\n/**\r\n * Default data loaded status will be false\r\n * @param {boolean} status \r\n */\r\nexport const defaultDataDisable = () => {\r\n    return {\r\n        type: types.DEFAULT_DATA_DISABLE\r\n    };\r\n}\r\n\r\n\r\n// - Show notification of request\r\nexport const showNotificationRequest = () => {\r\n    return {\r\n        type: types.SHOW_SEND_REQUEST_MESSAGE_GLOBAL\r\n    };\r\n}\r\n\r\n// - Show notification of success\r\nexport const showNotificationSuccess = () => {\r\n    return {\r\n        type: types.SHOW_REQUEST_SUCCESS_MESSAGE_GLOBAL\r\n    };\r\n}\r\n\r\n// Hide global message\r\nexport const hideMessage = () => {\r\n    return {\r\n        type: types.HIDE_MESSAGE_GLOBAL\r\n    };\r\n}\r\n\r\n/**\r\n * Show error message\r\n * @param {string} message \r\n */\r\nexport const showErrorMessage = (message) => {\r\n    return {\r\n        type: types.SHOW_ERROR_MESSAGE_GLOBAL,\r\n        payload: message\r\n    }\r\n}\r\n\r\n// Set header title\r\nexport const setHeaderTitleOpt = (opt, payload) => {\r\n    return (dispatch, getState) => {\r\n        switch (opt) {\r\n            case 'profile':\r\n                const userName = getState().user.info && getState().user.info[payload] ? getState().user.info[payload].fullName : '';\r\n                dispatch(setHeaderTitle(userName));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n}\r\n\r\n// Set header title\r\nexport const setHeaderTitle = (text) => {\r\n    return {\r\n        type: types.SET_HEADER_TITLE,\r\n        payload: text\r\n    };\r\n}\r\n\r\n// Open post write\r\nexport const openPostWrite = () => {\r\n    return {\r\n        type: types.OPEN_POST_WRITE\r\n    };\r\n}\r\n\r\n// Close post write\r\nexport const closePostWrite = () => {\r\n    return {\r\n        type: types.CLOSE_POST_WRITE\r\n    };\r\n}\r\n\r\n// Show top loading\r\nexport const showTopLoading = () => {\r\n    return {\r\n        type: types.SHOW_TOP_LOADING\r\n    };\r\n}\r\n\r\n// Hide top loading\r\nexport const hideTopLoading = () => {\r\n    return {\r\n        type: types.HIDE_TOP_LOADING\r\n    };\r\n}\r\n\r\n// Store temp data\r\nexport const temp = (data) => {\r\n    return {\r\n        type: types.TEMP,\r\n        payload: data\r\n    };\r\n}\r\n\r\n// - Load data for guest\r\nexport const loadDataGuest = () => {\r\n    return (dispatch, getState) => {};\r\n}\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/actions/globalActions.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 87,
    "kind": "function",
    "name": "progressChange",
    "memberof": "app/actions/globalActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/globalActions.jsx~progressChange",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/globalActions.jsx",
    "importStyle": "{progressChange}",
    "description": "Progress change",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "percent",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "visible",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "defaultDataEnable",
    "memberof": "app/actions/globalActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/globalActions.jsx~defaultDataEnable",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/globalActions.jsx",
    "importStyle": "{defaultDataEnable}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "function",
    "name": "defaultDataDisable",
    "memberof": "app/actions/globalActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/globalActions.jsx~defaultDataDisable",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/globalActions.jsx",
    "importStyle": "{defaultDataDisable}",
    "description": "Default data loaded status will be false",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "status",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "showNotificationRequest",
    "memberof": "app/actions/globalActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/globalActions.jsx~showNotificationRequest",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/globalActions.jsx",
    "importStyle": "{showNotificationRequest}",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "showNotificationSuccess",
    "memberof": "app/actions/globalActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/globalActions.jsx~showNotificationSuccess",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/globalActions.jsx",
    "importStyle": "{showNotificationSuccess}",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "hideMessage",
    "memberof": "app/actions/globalActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/globalActions.jsx~hideMessage",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/globalActions.jsx",
    "importStyle": "{hideMessage}",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "function",
    "name": "showErrorMessage",
    "memberof": "app/actions/globalActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/globalActions.jsx~showErrorMessage",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/globalActions.jsx",
    "importStyle": "{showErrorMessage}",
    "description": "Show error message",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "setHeaderTitleOpt",
    "memberof": "app/actions/globalActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/globalActions.jsx~setHeaderTitleOpt",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/globalActions.jsx",
    "importStyle": "{setHeaderTitleOpt}",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "params": [
      {
        "name": "opt",
        "types": [
          "*"
        ]
      },
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "setHeaderTitle",
    "memberof": "app/actions/globalActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/globalActions.jsx~setHeaderTitle",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/globalActions.jsx",
    "importStyle": "{setHeaderTitle}",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "openPostWrite",
    "memberof": "app/actions/globalActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/globalActions.jsx~openPostWrite",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/globalActions.jsx",
    "importStyle": "{openPostWrite}",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "closePostWrite",
    "memberof": "app/actions/globalActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/globalActions.jsx~closePostWrite",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/globalActions.jsx",
    "importStyle": "{closePostWrite}",
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "showTopLoading",
    "memberof": "app/actions/globalActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/globalActions.jsx~showTopLoading",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/globalActions.jsx",
    "importStyle": "{showTopLoading}",
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "hideTopLoading",
    "memberof": "app/actions/globalActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/globalActions.jsx~hideTopLoading",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/globalActions.jsx",
    "importStyle": "{hideTopLoading}",
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "function",
    "name": "temp",
    "memberof": "app/actions/globalActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/globalActions.jsx~temp",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/globalActions.jsx",
    "importStyle": "{temp}",
    "description": null,
    "lineNumber": 121,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "loadDataGuest",
    "memberof": "app/actions/globalActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/globalActions.jsx~loadDataGuest",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/globalActions.jsx",
    "importStyle": "{loadDataGuest}",
    "description": null,
    "lineNumber": 129,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "file",
    "name": "app/actions/imageGalleryActions.jsx",
    "content": "import moment from 'moment';\r\nimport { firebaseRef, firebaseAuth, storageRef } from 'app/firebase/';\r\n\r\n// - Import action types\r\nimport * as types from 'actionTypes';\r\n\r\n// - Import actions\r\nimport * as globalActions from 'globalActions';\r\n\r\n// - Import app API\r\nimport FileAPI from 'FileAPI';\r\n\r\n/* _____________ UI Actions _____________ */\r\n\r\n// Clear selected data\r\nexport const clearSelectData = () => {\r\n    return { type: types.CLEARS_SELECT_IMAGE_GALLERY };\r\n};\r\n\r\n// Clear all data in image gallery store\r\nexport const clearAllData = () => {\r\n    return {\r\n        type: types.CLEAT_ALL_DATA_IMAGE_GALLERY\r\n    };\r\n}\r\n\r\n// Download images for image gallery\r\nexport const downloadForImageGallery = () => {\r\n    return (dispatch, getState) => {\r\n        let uid = getState().authorize.uid;\r\n        if (uid) {\r\n            let imagesRef = firebaseRef.child(`userFiles/${uid}/files/images`);\r\n\r\n            return imagesRef.once('value').then((snapshot) => {\r\n                let images = snapshot.val() || {};\r\n                let parsedImages = [];\r\n                Object.keys(images).forEach((imageId) => {\r\n                    parsedImages.push({\r\n                        id: imageId,\r\n                        ...images[imageId]\r\n                    });\r\n                });\r\n\r\n                dispatch(addImageList(parsedImages));\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\n/* _____________ CRUD Database_____________ */\r\n\r\n/**\r\n * Save image URL in the server\r\n * @param  {string} imageURL is the URL of image\r\n */\r\nexport const dbSaveImage = (imageURL, imageFullPath) => {\r\n    return (dispatch, getState) => {\r\n        let uid = getState().authorize.uid;\r\n        let image = {\r\n            creationDate: moment().unix(),\r\n            deletationDate: '',\r\n            URL: imageURL,\r\n            fullPath: imageFullPath,\r\n            ownerUserId: uid,\r\n            lastEditDate: '',\r\n            deleted: false\r\n        };\r\n\r\n        let imageRef = firebaseRef.child(`userFiles/${uid}/files/images`).push(image);\r\n\r\n        return imageRef.then(() => {\r\n            dispatch(addImage({\r\n                ...image,\r\n                id: imageRef.key\r\n            }));\r\n        });\r\n    };\r\n}\r\n\r\n/**\r\n * Delete an image from database\r\n * @param  {string} id of image\r\n */\r\nexport const dbDeleteImage = (id) => {\r\n    return (dispatch, getState) => {\r\n        // Get current user id\r\n        let uid = getState().authorize.uid;\r\n\r\n        // Write the new data simultaneously in the list\r\n        let updates = {};\r\n        updates[`userFiles/${uid}/files/images/${id}`] = null;\r\n\r\n        return firebaseRef.update(updates).then((result) => {\r\n            dispatch(deleteImage(id));\r\n            console.log('image removed: ', id);\r\n        }, (error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Upload image on the server\r\n * @param {file} file \r\n * @param {string} fileName \r\n */\r\nexport const dbUploadImage = (file, fileName) => {\r\n    return (dispatch, getState) => {\r\n        // Create a storage refrence\r\n        let storegeFile = storageRef.child(`images/${fileName}`);\r\n\r\n        // Upload file\r\n        let task = storegeFile.put(file);\r\n        dispatch(globalActions.showTopLoading());\r\n\r\n        // Upload storage bar\r\n        task.on('state_changed', (snapshot) => {\r\n            let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n            dispatch(globalActions.progressChange(percentage, true));\r\n        }, (error) => {\r\n            dispatch(globalActions.showErrorMessage(error.code));\r\n            dispatch(globalActions.hideTopLoading());\r\n        }, (complete) => {\r\n            dispatch(globalActions.progressChange(100, false));\r\n            dispatch(dbSaveImage(fileName));\r\n            dispatch(globalActions.hideTopLoading());\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Download image from server\r\n * @param {string} fileName \r\n */\r\nexport const dbDownloadImage = (fileName) => {\r\n\r\n    return (dispatch, getState) => {\r\n        if (fileName == 'noImage')\r\n            return {};\r\n        if (getState().imageGallery.imageURLList[fileName] && fileName !== '')\r\n            return;\r\n\r\n        if (getState().imageGallery.imageRequests.indexOf(fileName) > -1)\r\n            return;\r\n\r\n        dispatch(sendImageRequest(fileName));\r\n\r\n        // Create a reference to the file we want to download    \r\n        let starsRef = storageRef.child(`images/${fileName}`);\r\n\r\n        // Get the download URL\r\n        starsRef.getDownloadURL().then((url) => {\r\n            // Insert url into an <img> tag to \"download\"\r\n            if (!getState().imageGallery.imageURLList[fileName] || fileName === '')\r\n                dispatch(setImageURL(fileName, url));\r\n        }).catch((error) => {\r\n            // A full list of error codes is available at\r\n            // https://firebase.google.com/docs/storage/web/handle-errors\r\n            switch (error.code) {\r\n                case 'storage/object_not_found':\r\n                    // File doesn't exist\r\n                    dispatch(globalActions.showErrorMessage('storage/object_not_found'));\r\n                    break;\r\n\r\n                case 'storage/unauthorized':\r\n                    // User doesn't have permission to access the object\r\n                    dispatch(globalActions.showErrorMessage('storage/unauthorized'));\r\n                    break;\r\n\r\n                case 'storage/canceled':\r\n                    // User canceled the upload\r\n                    dispatch(globalActions.showErrorMessage('storage/canceled'));\r\n                    break;\r\n\r\n                case 'storage/unknown':\r\n                    // Unknown error occurred, inspect the server response\r\n                    dispatch(globalActions.showErrorMessage('storage/unknown'));\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n/* _____________ CRUD State _____________ */\r\n\r\n/**\r\n * Add image list to image gallery\r\n * @param {[object]} images is an array of images\r\n */\r\nexport const addImageList = (images) => {\r\n    return { type: types.ADD_IMAGE_LIST_GALLERY, images };\r\n}\r\n\r\n/**\r\n * Add image to image gallery\r\n * @param {object} image\r\n */\r\nexport const addImage = (image) => {\r\n    return { type: types.ADD_IMAGE_GALLERY, image };\r\n}\r\n\r\n/**\r\n * Delete an image\r\n * @param  {string} id is an image identifier\r\n */\r\nexport const deleteImage = (id) => {\r\n    return { type: types.DELETE_IMAGE, id };\r\n}\r\n\r\n// Delete an image\r\nexport const setImageURL = (name, url) => {\r\n    return {\r\n        type: types.SET_IMAGE_URL,\r\n        payload: { name, url }\r\n    };\r\n}\r\n\r\n// Send image request\r\nexport const sendImageRequest = (name) => {\r\n    return {\r\n        type: types.SEND_IMAGE_REQUEST,\r\n        payload: name\r\n    };\r\n}",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/actions/imageGalleryActions.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "clearSelectData",
    "memberof": "app/actions/imageGalleryActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/imageGalleryActions.jsx~clearSelectData",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/imageGalleryActions.jsx",
    "importStyle": "{clearSelectData}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "clearAllData",
    "memberof": "app/actions/imageGalleryActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/imageGalleryActions.jsx~clearAllData",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/imageGalleryActions.jsx",
    "importStyle": "{clearAllData}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "downloadForImageGallery",
    "memberof": "app/actions/imageGalleryActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/imageGalleryActions.jsx~downloadForImageGallery",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/imageGalleryActions.jsx",
    "importStyle": "{downloadForImageGallery}",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "dbSaveImage",
    "memberof": "app/actions/imageGalleryActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/imageGalleryActions.jsx~dbSaveImage",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/imageGalleryActions.jsx",
    "importStyle": "{dbSaveImage}",
    "description": "Save image URL in the server",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "imageURL",
        "description": "is the URL of image"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "dbDeleteImage",
    "memberof": "app/actions/imageGalleryActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/imageGalleryActions.jsx~dbDeleteImage",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/imageGalleryActions.jsx",
    "importStyle": "{dbDeleteImage}",
    "description": "Delete an image from database",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "of image"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "dbUploadImage",
    "memberof": "app/actions/imageGalleryActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/imageGalleryActions.jsx~dbUploadImage",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/imageGalleryActions.jsx",
    "importStyle": "{dbUploadImage}",
    "description": "Upload image on the server",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "file"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fileName",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "dbDownloadImage",
    "memberof": "app/actions/imageGalleryActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/imageGalleryActions.jsx~dbDownloadImage",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/imageGalleryActions.jsx",
    "importStyle": "{dbDownloadImage}",
    "description": "Download image from server",
    "lineNumber": 135,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fileName",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "addImageList",
    "memberof": "app/actions/imageGalleryActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/imageGalleryActions.jsx~addImageList",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/imageGalleryActions.jsx",
    "importStyle": "{addImageList}",
    "description": "Add image list to image gallery",
    "lineNumber": 190,
    "params": [
      {
        "nullable": null,
        "types": [
          "[object]"
        ],
        "spread": false,
        "optional": false,
        "name": "images",
        "description": "is an array of images"
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"images\": *}"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "addImage",
    "memberof": "app/actions/imageGalleryActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/imageGalleryActions.jsx~addImage",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/imageGalleryActions.jsx",
    "importStyle": "{addImage}",
    "description": "Add image to image gallery",
    "lineNumber": 198,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "image",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"image\": *}"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "deleteImage",
    "memberof": "app/actions/imageGalleryActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/imageGalleryActions.jsx~deleteImage",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/imageGalleryActions.jsx",
    "importStyle": "{deleteImage}",
    "description": "Delete an image",
    "lineNumber": 206,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "is an image identifier"
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"id\": *}"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "function",
    "name": "setImageURL",
    "memberof": "app/actions/imageGalleryActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/imageGalleryActions.jsx~setImageURL",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/imageGalleryActions.jsx",
    "importStyle": "{setImageURL}",
    "description": null,
    "lineNumber": 211,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "url",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "function",
    "name": "sendImageRequest",
    "memberof": "app/actions/imageGalleryActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/imageGalleryActions.jsx~sendImageRequest",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/imageGalleryActions.jsx",
    "importStyle": "{sendImageRequest}",
    "description": null,
    "lineNumber": 219,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "file",
    "name": "app/actions/notifyActions.jsx",
    "content": "import moment from 'moment';\r\nimport { firebaseRef } from 'app/firebase/';\r\n\r\n// - Import action types\r\nimport * as types from 'actionTypes';\r\n\r\n// - Import actions\r\nimport * as globalActions from 'globalActions';\r\nimport * as userActions from 'userActions';\r\n\r\n/* _____________ CRUD DB _____________ */\r\n\r\n/**\r\n *  Add notificaition to database\r\n * @param  {object} newNotify user notificaition\r\n */\r\nexport const dbAddNotify = (newNotify) => {\r\n    return (dispatch, getState) => {\r\n        let uid = getState().authorize.uid;\r\n        let notify = {\r\n            description: newNotify.description,\r\n            url: newNotify.url,\r\n            notifierUserId: newNotify.notifierUserId,\r\n            isSeen: false\r\n        };\r\n\r\n        let notifyRef = firebaseRef.child(`userNotifies/${newNotify.notifyRecieverUserId}`).push(notify);\r\n        return notifyRef.then(() => {\r\n            dispatch(addNotify())\r\n        }, (error) => dispatch(globalActions.showErrorMessage(error.message)));\r\n    };\r\n}\r\n\r\n// Get all notificaitions from database\r\nexport const dbGetNotifies = () => {\r\n    return (dispatch, getState) => {\r\n        let uid = getState().authorize.uid;\r\n        if (uid) {\r\n            let notifiesRef = firebaseRef.child(`userNotifies/${uid}`);\r\n\r\n            return notifiesRef.on('value', (snapshot) => {\r\n                let notifies = snapshot.val() || {};\r\n\r\n                Object.keys(notifies).forEach((key => {\r\n                    if (!getState().user.info[notifies[key].notifierUserId]) {\r\n                        dispatch(userActions.dbGetUserInfoByUserId(notifies[key].notifierUserId));\r\n                    }\r\n                }));\r\n\r\n                dispatch(addNotifyList(notifies));\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Delete a notificaition from database\r\n * @param  {string} id of notificaition\r\n */\r\nexport const dbDeleteNotify = (id) => {\r\n    return (dispatch, getState) => {\r\n\r\n        // Get current user id\r\n        let uid = getState().authorize.uid;\r\n\r\n        // Write the new data simultaneously in the list\r\n        let updates = {};\r\n        updates[`userNotifies/${uid}/${id}`] = null;\r\n\r\n        return firebaseRef.update(updates).then((result) => {\r\n            dispatch(deleteNotify(id))\r\n        }, (error) => dispatch(globalActions.showErrorMessage(error.message)));\r\n    };\r\n}\r\n\r\n/**\r\n * Make seen a notificaition from database\r\n * @param  {string} id of notificaition\r\n */\r\nexport const dbSeenNotify = (id) => {\r\n    return (dispatch, getState) => {\r\n        // Get current user id\r\n        let uid = getState().authorize.uid;\r\n        let notify = getState().notify.userNotifies[id];\r\n        let updatedNotify = {\r\n            description: notify.description,\r\n            url: notify.url,\r\n            notifierUserId: notify.notifierUserId,\r\n            isSeen: true\r\n        };\r\n\r\n        // Write the new data simultaneously in the list\r\n        let updates = {};\r\n        updates[`userNotifies/${uid}/${id}`] = updatedNotify;\r\n\r\n        return firebaseRef.update(updates).then((result) => {\r\n            dispatch(seenNotify(id))\r\n        }, (error) => dispatch(globalActions.showErrorMessage(error.message)));\r\n    };\r\n}\r\n\r\n/* _____________ CRUD State _____________ */\r\n\r\n/**\r\n * Add notificaition \r\n * @param {object} data  \r\n */\r\nexport const addNotify = () => {\r\n    return {\r\n        type: types.ADD_NOTIFY\r\n    };\r\n}\r\n\r\n/**\r\n * Add notificaition list\r\n * @param {[object]} userNotifies an array of notificaitions\r\n */\r\nexport const addNotifyList = (userNotifies) => {\r\n    return {\r\n        type: types.ADD_NOTIFY_LIST,\r\n        payload: userNotifies\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * Delete a notificaition\r\n * @param  {string} id of notificaition\r\n */\r\nexport const deleteNotify = (id) => {\r\n    return { type: types.DELETE_NOTIFY, payload: id };\r\n}\r\n\r\n/**\r\n * Change notificaition to has seen status\r\n * @param  {string} id of notificaition\r\n */\r\nexport const seenNotify = (id) => {\r\n    return { type: types.SEEN_NOTIFY, payload: id };\r\n}\r\n\r\n// Clear all data\r\nexport const clearAllNotifications = () => {\r\n    return {\r\n        type: types.CLEAR_ALL_DATA_NOTIFY\r\n    };\r\n}",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/actions/notifyActions.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 116,
    "kind": "function",
    "name": "dbAddNotify",
    "memberof": "app/actions/notifyActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/notifyActions.jsx~dbAddNotify",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/notifyActions.jsx",
    "importStyle": "{dbAddNotify}",
    "description": " Add notificaition to database",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "newNotify",
        "description": "user notificaition"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "function",
    "name": "dbGetNotifies",
    "memberof": "app/actions/notifyActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/notifyActions.jsx~dbGetNotifies",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/notifyActions.jsx",
    "importStyle": "{dbGetNotifies}",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "function",
    "name": "dbDeleteNotify",
    "memberof": "app/actions/notifyActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/notifyActions.jsx~dbDeleteNotify",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/notifyActions.jsx",
    "importStyle": "{dbDeleteNotify}",
    "description": "Delete a notificaition from database",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "of notificaition"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "dbSeenNotify",
    "memberof": "app/actions/notifyActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/notifyActions.jsx~dbSeenNotify",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/notifyActions.jsx",
    "importStyle": "{dbSeenNotify}",
    "description": "Make seen a notificaition from database",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "of notificaition"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "addNotify",
    "memberof": "app/actions/notifyActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/notifyActions.jsx~addNotify",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/notifyActions.jsx",
    "importStyle": "{addNotify}",
    "description": "Add notificaition ",
    "lineNumber": 108,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "function",
    "name": "addNotifyList",
    "memberof": "app/actions/notifyActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/notifyActions.jsx~addNotifyList",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/notifyActions.jsx",
    "importStyle": "{addNotifyList}",
    "description": "Add notificaition list",
    "lineNumber": 118,
    "params": [
      {
        "nullable": null,
        "types": [
          "[object]"
        ],
        "spread": false,
        "optional": false,
        "name": "userNotifies",
        "description": "an array of notificaitions"
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "function",
    "name": "deleteNotify",
    "memberof": "app/actions/notifyActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/notifyActions.jsx~deleteNotify",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/notifyActions.jsx",
    "importStyle": "{deleteNotify}",
    "description": "Delete a notificaition",
    "lineNumber": 130,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "of notificaition"
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "function",
    "name": "seenNotify",
    "memberof": "app/actions/notifyActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/notifyActions.jsx~seenNotify",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/notifyActions.jsx",
    "importStyle": "{seenNotify}",
    "description": "Change notificaition to has seen status",
    "lineNumber": 138,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "of notificaition"
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "function",
    "name": "clearAllNotifications",
    "memberof": "app/actions/notifyActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/notifyActions.jsx~clearAllNotifications",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/notifyActions.jsx",
    "importStyle": "{clearAllNotifications}",
    "description": null,
    "lineNumber": 143,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "file",
    "name": "app/actions/postActions.jsx",
    "content": "import firebase, { firebaseRef } from 'app/firebase/';\r\n\r\n// - Import utility components\r\nimport moment from 'moment';\r\n\r\n// - Import action types\r\nimport * as types from 'actionTypes';\r\n\r\n// - Import actions\r\nimport * as globalActions from 'globalActions';\r\n\r\n/* _____________ CRUD DB _____________ */\r\n\r\n/**\r\n * Add a normal post\r\n * @param {object} newPost \r\n * @param {function} callBack \r\n */\r\nexport var dbAddPost = (newPost, callBack) => {\r\n    return (dispatch, getState) => {\r\n\r\n        let uid = getState().authorize.uid;\r\n        let post = {\r\n            postTypeId: 0,\r\n            creationDate: moment().unix(),\r\n            deletationDate: '',\r\n            score: 0,\r\n            viewCount: 0,\r\n            body: newPost.body,\r\n            ownerUserId: uid,\r\n            ownerDisplayName: newPost.name,\r\n            ownerAvatar: newPost.avatar,\r\n            lastEditDate: '',\r\n            tags: newPost.tags || [],\r\n            commentCounter: 0,\r\n            image: '',\r\n            video: '',\r\n            disableComments: newPost.disableComments,\r\n            disableSharing: newPost.disableSharing,\r\n            deleted: false\r\n        };\r\n\r\n        let postRef = firebaseRef.child(`userPosts/${uid}/posts`).push(post);\r\n        return postRef.then(() => {\r\n            dispatch(addPost(uid, {\r\n                ...post,\r\n                id: postRef.key\r\n            }));\r\n            callBack();\r\n        }, (error) => dispatch(globalActions.showErrorMessage(error.message)));\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * Add a post with image\r\n * @param {object} newPost \r\n * @param {function} callBack \r\n */\r\nexport const dbAddImagePost = (newPost, callBack) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(globalActions.showTopLoading());\r\n\r\n        let uid = getState().authorize.uid;\r\n        let post = {\r\n            postTypeId: 1,\r\n            creationDate: moment().unix(),\r\n            deletationDate: '',\r\n            score: 0,\r\n            viewCount: 0,\r\n            body: newPost.body,\r\n            ownerUserId: uid,\r\n            ownerDisplayName: newPost.name,\r\n            ownerAvatar: newPost.avatar,\r\n            lastEditDate: '',\r\n            tags: newPost.tags || [],\r\n            commentCounter: 0,\r\n            image: newPost.image || '',\r\n            imageFullPath: newPost.imageFullPath || '',\r\n            video: '',\r\n            disableComments: newPost.disableComments ? newPost.disableComments : false,\r\n            disableSharing: newPost.disableSharing ? newPost.disableSharing : false,\r\n            deleted: false\r\n        };\r\n\r\n        let postRef = firebaseRef.child(`userPosts/${uid}/posts`).push(post);\r\n        return postRef.then(() => {\r\n            dispatch(addPost(uid, {\r\n                ...post,\r\n                id: postRef.key\r\n            }));\r\n            callBack();\r\n            dispatch(globalActions.hideTopLoading());\r\n        });\r\n    };\r\n}\r\n\r\n/**\r\n * Update a post from database\r\n * @param  {object} newPost \r\n * @param {func} callBack //TODO: anti pattern should change to parent state or move state to redux\r\n */\r\nexport const dbUpdatePost = (newPost, callBack) => {\r\n    console.log(newPost);\r\n    return (dispatch, getState) => {\r\n        dispatch(globalActions.showTopLoading());\r\n\r\n        // Get current user id\r\n        let uid = getState().authorize.uid;\r\n\r\n        // Write the new data simultaneously in the list\r\n        let updates = {};\r\n        let post = getState().post.userPosts[uid][newPost.id];\r\n        let updatedPost = {\r\n            postTypeId: post.postTypeId,\r\n            creationDate: post.creationDate,\r\n            deletationDate: '',\r\n            score: post.score,\r\n            viewCount: post.viewCount,\r\n            body: newPost.body ? newPost.body : post.body || '',\r\n            ownerUserId: uid,\r\n            ownerDisplayName: post.ownerDisplayName,\r\n            ownerAvatar: post.ownerAvatar,\r\n            lastEditDate: moment().unix(),\r\n            tags: newPost.tags ? newPost.tags : (post.tags || []),\r\n            commentCounter: post.commentCounter,\r\n            image: newPost.image ? newPost.image : post.image,\r\n            video: '',\r\n            disableComments: newPost.disableComments !== undefined ? newPost.disableComments : (post.disableComments ? post.disableComments : false),\r\n            disableSharing: newPost.disableSharing !== undefined ? newPost.disableSharing : (post.disableSharing ? post.disableSharing : false),\r\n            deleted: false\r\n        };\r\n\r\n        updates[`userPosts/${uid}/posts/${newPost.id}`] = updatedPost;\r\n\r\n        return firebaseRef.update(updates).then((result) => {\r\n            dispatch(updatePost(uid, { id: newPost.id, ...updatedPost }));\r\n            callBack();\r\n            dispatch(globalActions.hideTopLoading());\r\n        }, (error) => {\r\n            dispatch(globalActions.showErrorMessage(error.message));\r\n            dispatch(globalActions.hideTopLoading());\r\n        });\r\n    };\r\n}\r\n\r\n/**\r\n * Delete a post from database\r\n * @param  {string} id is post identifier\r\n */\r\nexport const dbDeletePost = (id) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(globalActions.showTopLoading());\r\n\r\n        // Get current user id\r\n        let uid = getState().authorize.uid;\r\n\r\n        // Write the new data simultaneously in the list\r\n        let updates = {};\r\n        updates[`userPosts/${uid}/posts/${id}`] = null;\r\n\r\n        return firebaseRef.update(updates).then((result) => {\r\n            dispatch(deletePost(uid, id));\r\n            dispatch(globalActions.hideTopLoading());\r\n        }, (error) => {\r\n            dispatch(globalActions.showErrorMessage(error.message));\r\n            dispatch(globalActions.hideTopLoading());\r\n        });\r\n    };\r\n}\r\n\r\n//  Get all user posts from data base\r\nexport const dbGetPosts = () => {\r\n    return (dispatch, getState) => {\r\n        let uid = getState().authorize.uid;\r\n        if (uid) {\r\n            let postsRef = firebaseRef.child(`userPosts/${uid}/posts`);\r\n\r\n            return postsRef.once('value').then((snapshot) => {\r\n                let posts = snapshot.val() || {};\r\n                let parsedPosts = {};\r\n                Object.keys(posts).forEach((postId) => {\r\n                    parsedPosts[postId] = {\r\n                        id: postId,\r\n                        ...posts[postId]\r\n                    };\r\n                });\r\n\r\n                dispatch(addPosts(uid, parsedPosts));\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\n//  Get all user posts from data base\r\nexport const dbGetPostById = (uid, postId) => {\r\n    return (dispatch, getState) => {\r\n        if (uid) {\r\n            let postsRef = firebaseRef.child(`userPosts/${uid}/posts/${postId}`);\r\n\r\n            return postsRef.once('value').then((snapshot) => {\r\n                const newPost = snapshot.val() || {};\r\n                const post = {\r\n                    id: postId,\r\n                    ...newPost\r\n                };\r\n                dispatch(addPost(uid, post));\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\n//  Get all user posts from data base by user id\r\nexport const dbGetPostsByUserId = (uid) => {\r\n    return (dispatch, getState) => {\r\n        if (uid) {\r\n            let postsRef = firebaseRef.child(`userPosts/${uid}/posts`);\r\n\r\n            return postsRef.once('value').then((snapshot) => {\r\n                let posts = snapshot.val() || {};\r\n                let parsedPosts = {};\r\n                Object.keys(posts).forEach((postId) => {\r\n                    parsedPosts[postId] = {\r\n                        id: postId,\r\n                        ...posts[postId]\r\n                    };\r\n                });\r\n\r\n                dispatch(addPosts(uid, parsedPosts));\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\n/* _____________ CRUD State _____________ */\r\n\r\n/**\r\n * Add a normal post\r\n * @param {string} uid is user identifier\r\n * @param {object} post \r\n */\r\nexport const addPost = (uid, post) => {\r\n    return {\r\n        type: types.ADD_POST,\r\n        payload: { uid, post }\r\n    };\r\n}\r\n\r\n/**\r\n * Update a post\r\n * @param {string} uid is user identifier\r\n * @param {object} post \r\n */\r\nexport const updatePost = (uid, post) => {\r\n    return {\r\n        type: types.UPDATE_POST,\r\n        payload: { uid, post }\r\n    };\r\n}\r\n\r\n/**\r\n * Delete a post\r\n * @param {string} uid is user identifier\r\n * @param {string} id is post identifier\r\n */\r\nexport const deletePost = (uid, id) => {\r\n    return {\r\n        type: types.DELETE_POST,\r\n        payload: { uid, id }\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * Add a list of post\r\n * @param {string} uid \r\n * @param {[object]} posts \r\n */\r\nexport const addPosts = (uid, posts) => {\r\n    return {\r\n        type: types.ADD_LIST_POST,\r\n        payload: { uid, posts }\r\n    };\r\n}\r\n\r\n/**\r\n * Clea all data in post store\r\n */\r\nexport const clearAllData = () => {\r\n    return {\r\n        type: types.CLEAR_ALL_DATA_POST\r\n    };\r\n}\r\n\r\n/**\r\n * Add a post with image\r\n * @param {object} post \r\n */\r\nexport const addImagePost = (uid, post) => {\r\n    return {\r\n        type: types.ADD_IMAGE_POST,\r\n        payload: { uid, post }\r\n    };\r\n}",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/actions/postActions.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 126,
    "kind": "function",
    "name": "dbAddPost",
    "memberof": "app/actions/postActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/postActions.jsx~dbAddPost",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/postActions.jsx",
    "importStyle": "{dbAddPost}",
    "description": "Add a normal post",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "newPost",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callBack",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "function",
    "name": "dbAddImagePost",
    "memberof": "app/actions/postActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/postActions.jsx~dbAddImagePost",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/postActions.jsx",
    "importStyle": "{dbAddImagePost}",
    "description": "Add a post with image",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "newPost",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callBack",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "function",
    "name": "dbUpdatePost",
    "memberof": "app/actions/postActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/postActions.jsx~dbUpdatePost",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/postActions.jsx",
    "importStyle": "{dbUpdatePost}",
    "description": "Update a post from database",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "newPost",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "callBack",
        "description": "//TODO: anti pattern should change to parent state or move state to redux"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "function",
    "name": "dbDeletePost",
    "memberof": "app/actions/postActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/postActions.jsx~dbDeletePost",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/postActions.jsx",
    "importStyle": "{dbDeletePost}",
    "description": "Delete a post from database",
    "lineNumber": 151,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "is post identifier"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "function",
    "name": "dbGetPosts",
    "memberof": "app/actions/postActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/postActions.jsx~dbGetPosts",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/postActions.jsx",
    "importStyle": "{dbGetPosts}",
    "description": null,
    "lineNumber": 173,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "function",
    "name": "dbGetPostById",
    "memberof": "app/actions/postActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/postActions.jsx~dbGetPostById",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/postActions.jsx",
    "importStyle": "{dbGetPostById}",
    "description": null,
    "lineNumber": 196,
    "undocument": true,
    "params": [
      {
        "name": "uid",
        "types": [
          "*"
        ]
      },
      {
        "name": "postId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "function",
    "name": "dbGetPostsByUserId",
    "memberof": "app/actions/postActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/postActions.jsx~dbGetPostsByUserId",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/postActions.jsx",
    "importStyle": "{dbGetPostsByUserId}",
    "description": null,
    "lineNumber": 214,
    "undocument": true,
    "params": [
      {
        "name": "uid",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "function",
    "name": "addPost",
    "memberof": "app/actions/postActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/postActions.jsx~addPost",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/postActions.jsx",
    "importStyle": "{addPost}",
    "description": "Add a normal post",
    "lineNumber": 242,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "is user identifier"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "post",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "function",
    "name": "updatePost",
    "memberof": "app/actions/postActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/postActions.jsx~updatePost",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/postActions.jsx",
    "importStyle": "{updatePost}",
    "description": "Update a post",
    "lineNumber": 254,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "is user identifier"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "post",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "function",
    "name": "deletePost",
    "memberof": "app/actions/postActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/postActions.jsx~deletePost",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/postActions.jsx",
    "importStyle": "{deletePost}",
    "description": "Delete a post",
    "lineNumber": 266,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "is user identifier"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "is post identifier"
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "function",
    "name": "addPosts",
    "memberof": "app/actions/postActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/postActions.jsx~addPosts",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/postActions.jsx",
    "importStyle": "{addPosts}",
    "description": "Add a list of post",
    "lineNumber": 279,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "[object]"
        ],
        "spread": false,
        "optional": false,
        "name": "posts",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "function",
    "name": "clearAllData",
    "memberof": "app/actions/postActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/postActions.jsx~clearAllData",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/postActions.jsx",
    "importStyle": "{clearAllData}",
    "description": "Clea all data in post store",
    "lineNumber": 289,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "function",
    "name": "addImagePost",
    "memberof": "app/actions/postActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/postActions.jsx~addImagePost",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/postActions.jsx",
    "importStyle": "{addImagePost}",
    "description": "Add a post with image",
    "lineNumber": 299,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "post",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "file",
    "name": "app/actions/userActions.jsx",
    "content": "import { firebaseRef } from 'app/firebase/';\r\n\r\n// - Import action types\r\nimport * as types from 'actionTypes';\r\n\r\n// - Import actions \r\nimport *  as globalActions from 'globalActions';\r\nimport * as userActions from 'userActions';\r\n\r\n/* _____________ CRUD DB _____________ */\r\n\r\n// Get user info from database\r\nexport const dbGetUserInfo = () => {\r\n    console.log(\"OUTPUT: in dbGetUserInfo\");\r\n    return (dispatch, getState) => {\r\n        let uid = getState().authorize.uid;\r\n        if (uid) {\r\n            let userInfoRef = firebaseRef.child(`users/${uid}/info`);\r\n\r\n            return userInfoRef.once('value').then((snapshot) => {\r\n                let userInfo = snapshot.val() || {};\r\n                dispatch(addUserInfo(uid, {\r\n                    avatar: userInfo.avatar,\r\n                    email: userInfo.email,\r\n                    fullName: userInfo.fullName,\r\n                    banner: userInfo.banner,\r\n                    tagLine: userInfo.tagLine,\r\n                    password: userInfo.password\r\n                }));\r\n            }, error => console.log(error));\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n *  Get user info from database\r\n * @param {string} uid \r\n */\r\nexport const dbGetUserInfoByUserId = (uid, sw) => {\r\n    console.log(\"OUTPUT: in dbGetUserInfoByUserId\");\r\n    return (dispatch, getState) => {\r\n        if (uid) {\r\n            let userInfoRef = firebaseRef.child(`users/${uid}/info`);\r\n\r\n            return userInfoRef.once('value').then((snapshot) => {\r\n                let userInfo = snapshot.val() || {};\r\n                dispatch(addUserInfo(uid, {\r\n                    avatar: userInfo.avatar,\r\n                    email: userInfo.email,\r\n                    fullName: userInfo.fullName,\r\n                    banner: userInfo.banner,\r\n                    tagLine: userInfo.tagLine,\r\n                    password: userInfo.password\r\n                }));\r\n                switch (sw) {\r\n                    case 'header':\r\n                        dispatch(globalActions.setHeaderTitle(userInfo.fullName));\r\n                        break;\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n            }, error => console.log(error));\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * Updata user information\r\n * @param {object} newInfo \r\n */\r\nexport const dbUpdateUserInfo = (newInfo) => {\r\n    console.log(\"OUTPUT: in dbUpdateUserInfo\");\r\n    return (dispatch, getState) => {\r\n        // Get current user id\r\n        let uid = getState().authorize.uid;\r\n\r\n        // Write the new data simultaneously in the list\r\n        let updates = {};\r\n        let info = getState().user.info[uid];\r\n        let updatedInfo = {\r\n            avatar: newInfo.avatar || info.avatar || '',\r\n            banner: newInfo.banner || info.banner || 'https://firebasestorage.googleapis.com/v0/b/open-social-33d92.appspot.com/o/images%2F751145a1-9488-46fd-a97e-04018665a6d3.JPG?alt=media&token=1a1d5e21-5101-450e-9054-ea4a20e06c57',\r\n            email: newInfo.email || info.email || '',\r\n            fullName: newInfo.fullName || info.fullName || '',\r\n            tagLine: newInfo.tagLine || info.tagLine || '',\r\n            password: info.password || ''\r\n        };\r\n\r\n        updates[`users/${uid}/info`] = updatedInfo;\r\n        return firebaseRef.update(updates).then((result) => {\r\n            dispatch(updateUserInfo(uid, updatedInfo));\r\n            dispatch(closeEditProfile());\r\n        }, (error) => {\r\n            dispatch(globalActions.showErrorMessage(error.message));\r\n        });\r\n    };\r\n}\r\n\r\n// - Get people info from database\r\nexport const dbGetPeopleInfo = () => {\r\n    console.log(\"OUTPUT: in dbGetPeopleInfo\");\r\n\r\n    return (dispatch, getState) => {\r\n        let uid = getState().authorize.uid;\r\n        if (uid) {\r\n            let peopleRef = firebaseRef.child(`users`);\r\n\r\n            return peopleRef.once('value').then((snapshot) => {\r\n                let people = snapshot.val() || {};\r\n\r\n                let parsedPeople = {};\r\n                Object.keys(people).forEach((userId) => {\r\n                    if (userId !== uid) {\r\n                        let userInfo = people[userId].info;\r\n\r\n                        parsedPeople[userId] = {\r\n                            avatar: userInfo.avatar,\r\n                            email: userInfo.email,\r\n                            fullName: userInfo.fullName,\r\n                            banner: userInfo.banner,\r\n                            tagLine: userInfo.tagLine,\r\n                            password: userInfo.password\r\n                        };\r\n                    }\r\n                });\r\n\r\n                dispatch(addPeopleInfo(parsedPeople));\r\n            }, error => console.log(error));\r\n        }\r\n    };\r\n}\r\n\r\n/* _____________ CRUD State _____________ */\r\n\r\n/**\r\n * Add user information\r\n * @param {string} uid is the user identifier\r\n * @param {object} info is the information about user\r\n */\r\nexport const addUserInfo = (uid, info) => {\r\n    return {\r\n        type: types.ADD_USER_INFO,\r\n        payload: { uid, info }\r\n    };\r\n}\r\n\r\n/**\r\n * Add people information\r\n * @param {[object]} infoList is the lst of information about users\r\n */\r\nexport const addPeopleInfo = (infoList) => {\r\n    return {\r\n        type: types.ADD_PEOPLE_INFO,\r\n        payload: infoList\r\n    };\r\n}\r\n\r\n/**\r\n * Update user information\r\n * @param {string} uid is the user identifier\r\n * @param {object} info is the information about user\r\n */\r\nexport const updateUserInfo = (uid, info) => {\r\n    return {\r\n        type: types.UPDATE_USER_INFO,\r\n        payload: { uid, info }\r\n    };\r\n}\r\n\r\n/**\r\n *  User info\r\n * @param {object} info \r\n */\r\nexport const userInfo = (info) => {\r\n    return {\r\n        type: types.USER_INFO,\r\n        info\r\n    };\r\n}\r\n\r\nexport const clearAllData = () => {\r\n    return {\r\n        type: types.CLEAR_ALL_DATA_USER\r\n    };\r\n}\r\n\r\n// Open edit profile\r\nexport const openEditProfile = () => {\r\n    return {\r\n        type: types.OPEN_EDIT_PROFILE\r\n    };\r\n\r\n}\r\n\r\n// Close edit profile\r\nexport const closeEditProfile = () => {\r\n    return {\r\n        type: types.CLOSE_EDIT_PROFILE\r\n    };\r\n}",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/actions/userActions.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 140,
    "kind": "function",
    "name": "dbGetUserInfo",
    "memberof": "app/actions/userActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/userActions.jsx~dbGetUserInfo",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/userActions.jsx",
    "importStyle": "{dbGetUserInfo}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "function",
    "name": "dbGetUserInfoByUserId",
    "memberof": "app/actions/userActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/userActions.jsx~dbGetUserInfoByUserId",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/userActions.jsx",
    "importStyle": "{dbGetUserInfoByUserId}",
    "description": " Get user info from database",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "dbUpdateUserInfo",
    "memberof": "app/actions/userActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/userActions.jsx~dbUpdateUserInfo",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/userActions.jsx",
    "importStyle": "{dbUpdateUserInfo}",
    "description": "Updata user information",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "newInfo",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "function",
    "name": "dbGetPeopleInfo",
    "memberof": "app/actions/userActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/userActions.jsx~dbGetPeopleInfo",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/userActions.jsx",
    "importStyle": "{dbGetPeopleInfo}",
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "function",
    "name": "addUserInfo",
    "memberof": "app/actions/userActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/userActions.jsx~addUserInfo",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/userActions.jsx",
    "importStyle": "{addUserInfo}",
    "description": "Add user information",
    "lineNumber": 141,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "is the user identifier"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "info",
        "description": "is the information about user"
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "function",
    "name": "addPeopleInfo",
    "memberof": "app/actions/userActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/userActions.jsx~addPeopleInfo",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/userActions.jsx",
    "importStyle": "{addPeopleInfo}",
    "description": "Add people information",
    "lineNumber": 152,
    "params": [
      {
        "nullable": null,
        "types": [
          "[object]"
        ],
        "spread": false,
        "optional": false,
        "name": "infoList",
        "description": "is the lst of information about users"
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "function",
    "name": "updateUserInfo",
    "memberof": "app/actions/userActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/userActions.jsx~updateUserInfo",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/userActions.jsx",
    "importStyle": "{updateUserInfo}",
    "description": "Update user information",
    "lineNumber": 164,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "is the user identifier"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "info",
        "description": "is the information about user"
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "function",
    "name": "userInfo",
    "memberof": "app/actions/userActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/userActions.jsx~userInfo",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/userActions.jsx",
    "importStyle": "{userInfo}",
    "description": " User info",
    "lineNumber": 175,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "info",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"info\": *}"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "function",
    "name": "clearAllData",
    "memberof": "app/actions/userActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/userActions.jsx~clearAllData",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/userActions.jsx",
    "importStyle": "{clearAllData}",
    "description": null,
    "lineNumber": 182,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 149,
    "kind": "function",
    "name": "openEditProfile",
    "memberof": "app/actions/userActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/userActions.jsx~openEditProfile",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/userActions.jsx",
    "importStyle": "{openEditProfile}",
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 150,
    "kind": "function",
    "name": "closeEditProfile",
    "memberof": "app/actions/userActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/userActions.jsx~closeEditProfile",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/userActions.jsx",
    "importStyle": "{closeEditProfile}",
    "description": null,
    "lineNumber": 197,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "file",
    "name": "app/actions/voteActions.jsx",
    "content": "import { createAction as action } from 'redux-actions';\r\nimport moment from 'moment';\r\nimport { firebaseRef } from 'app/firebase/';\r\n\r\n// - Import action types\r\nimport * as types from 'actionTypes';\r\n\r\n// - Import actions\r\nimport * as globalActions from 'globalActions';\r\nimport * as notifyActions from 'notifyActions';\r\n\r\n/* _____________ CRUD DB _____________ */\r\n\r\n/**\r\n *  Add vote to database\r\n * @param  {string} postId is the identifier of the post which user vote\r\n */\r\nexport const dbAddVote = (postId, ownerPostUserId) => {\r\n    return (dispatch, getState) => {\r\n        let uid = getState().authorize.uid;\r\n        let vote = {\r\n            postId: postId,\r\n            creationDate: moment().unix(),\r\n            userDisplayName: getState().user.info[uid].fullName,\r\n            userAvatar: getState().user.info[uid].avatar,\r\n            userId: uid\r\n        };\r\n\r\n        let voteRef = firebaseRef.child(`postVotes/${postId}`).push(vote);\r\n        return voteRef.then(() => {\r\n            dispatch(addVote({\r\n                vote,\r\n                postId: postId,\r\n                id: voteRef.key\r\n            }));\r\n            if (uid !== ownerPostUserId)\r\n                dispatch(notifyActions.dbAddNotify({\r\n                    description: 'Vote on your post.',\r\n                    url: `/${ownerPostUserId}/posts/${postId}`,\r\n                    notifyRecieverUserId: ownerPostUserId, notifierUserId: uid\r\n                }));\r\n        }, (error) => dispatch(globalActions.showErrorMessage(error.message)));\r\n    };\r\n}\r\n\r\n// Get all votes from database\r\nexport const dbGetVotes = () => {\r\n    return (dispatch, getState) => {\r\n        let uid = getState().authorize.uid;\r\n        if (uid) {\r\n            let votesRef = firebaseRef.child(`postVotes`);\r\n\r\n            return votesRef.on('value', (snapshot) => {\r\n                let votes = snapshot.val() || {};\r\n                dispatch(addVoteList(votes));\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * Delete a vote from database\r\n * @param  {string} id of vote\r\n * @param {string} postId is the identifier of the post which vote belong to\r\n */\r\nexport const dbDeleteVote = (postId) => {\r\n    return (dispatch, getState) => {\r\n\r\n        // Get current user id\r\n        let uid = getState().authorize.uid;\r\n\r\n        // Write the new data simultaneously in the list\r\n        let updates = {};\r\n        let votes = getState().vote.postVotes[postId];\r\n        let id = Object.keys(votes).filter((key) => votes[key].userId === uid)[0];\r\n        console.log(' Id :  ', id);\r\n\r\n        updates[`postVotes/${postId}/${id}`] = null;\r\n\r\n        return firebaseRef.update(updates).then((result) => {\r\n            dispatch(deleteVote({ id, postId }));\r\n        }, (error) => dispatch(globalActions.showErrorMessage(error.message)));\r\n    };\r\n}\r\n\r\n/**\r\n * Add a vote\r\n * @param {object} data \r\n */\r\nexport const addVote = (data) => {\r\n    return { type: types.ADD_VOTE, payload: data };\r\n}\r\n\r\n/**\r\n * delete a vote\r\n * @param {object} data \r\n */\r\nexport const deleteVote = (data) => {\r\n    return { type: types.DELETE_VOTE, payload: data };\r\n}\r\n\r\n/**\r\n * Ad a list of vote\r\n * @param {object} data \r\n */\r\nexport const addVoteList = (data) => {\r\n    return { type: types.ADD_VOTE_LIST, payload: data };\r\n}\r\n\r\n// Clear all data\r\nexport const clearAllvotes = () => {\r\n    return { type: types.CLEAR_ALL_DATA_VOTE };\r\n}",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/actions/voteActions.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 152,
    "kind": "function",
    "name": "dbAddVote",
    "memberof": "app/actions/voteActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/voteActions.jsx~dbAddVote",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/voteActions.jsx",
    "importStyle": "{dbAddVote}",
    "description": " Add vote to database",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "postId",
        "description": "is the identifier of the post which user vote"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "function",
    "name": "dbGetVotes",
    "memberof": "app/actions/voteActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/voteActions.jsx~dbGetVotes",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/voteActions.jsx",
    "importStyle": "{dbGetVotes}",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "function",
    "name": "dbDeleteVote",
    "memberof": "app/actions/voteActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/voteActions.jsx~dbDeleteVote",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/voteActions.jsx",
    "importStyle": "{dbDeleteVote}",
    "description": "Delete a vote from database",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "of vote"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "postId",
        "description": "is the identifier of the post which vote belong to"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "function",
    "name": "addVote",
    "memberof": "app/actions/voteActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/voteActions.jsx~addVote",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/voteActions.jsx",
    "importStyle": "{addVote}",
    "description": "Add a vote",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "function",
    "name": "deleteVote",
    "memberof": "app/actions/voteActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/voteActions.jsx~deleteVote",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/voteActions.jsx",
    "importStyle": "{deleteVote}",
    "description": "delete a vote",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "function",
    "name": "addVoteList",
    "memberof": "app/actions/voteActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/voteActions.jsx~addVoteList",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/voteActions.jsx",
    "importStyle": "{addVoteList}",
    "description": "Ad a list of vote",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "function",
    "name": "clearAllvotes",
    "memberof": "app/actions/voteActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/actions/voteActions.jsx~clearAllvotes",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/actions/voteActions.jsx",
    "importStyle": "{clearAllvotes}",
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": *}"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "file",
    "name": "app/api/AuthAPI.jsx",
    "content": "import { firebaseAuth, firebaseRef } from 'app/firebase/';\r\nimport store from 'configureStore';\r\n\r\n// - Check user if is authorized\r\nexport let isAuthorized = () => {\r\n    let state = store.getState();\r\n    return state.authorize.authed;\r\n}\r\n\r\nexport var isAdmin = () => {\r\n    return true;\r\n}",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/api/AuthAPI.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 160,
    "kind": "function",
    "name": "isAuthorized",
    "memberof": "app/api/AuthAPI.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/api/AuthAPI.jsx~isAuthorized",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/api/AuthAPI.jsx",
    "importStyle": "{isAuthorized}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "isAdmin",
    "memberof": "app/api/AuthAPI.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/api/AuthAPI.jsx~isAdmin",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/api/AuthAPI.jsx",
    "importStyle": "{isAdmin}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "file",
    "name": "app/api/AuthRouterAPI.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n// - Import API\r\nimport * as AuthAPI from 'AuthAPI';\r\n\r\nexport let PrivateRoute = ({ component: Component, ...rest }) => {\r\n    console.log('is auth ; ', AuthAPI.isAuthorized());\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => AuthAPI.isAuthorized()\r\n                ? <Component {...props} />\r\n                : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\r\n        />\r\n    );\r\n}\r\n\r\nexport let PublicRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => !(AuthRouterAPI.isAuthorized())\r\n                ? <Component {...props} />\r\n                : <Redirect to='/' />}\r\n        />\r\n    );\r\n}",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/api/AuthRouterAPI.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 163,
    "kind": "function",
    "name": "PrivateRoute",
    "memberof": "app/api/AuthRouterAPI.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/api/AuthRouterAPI.jsx~PrivateRoute",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/api/AuthRouterAPI.jsx",
    "importStyle": "{PrivateRoute}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"component\": *, ...rest: Object}"
        ],
        "defaultRaw": {
          "component": null,
          "rest": {}
        },
        "defaultValue": "{\"component\":null,\"rest\":{}}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "function",
    "name": "PublicRoute",
    "memberof": "app/api/AuthRouterAPI.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/api/AuthRouterAPI.jsx~PublicRoute",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/api/AuthRouterAPI.jsx",
    "importStyle": "{PublicRoute}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"component\": *, ...rest: Object}"
        ],
        "defaultRaw": {
          "component": null,
          "rest": {}
        },
        "defaultValue": "{\"component\":null,\"rest\":{}}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "file",
    "name": "app/api/CircleAPI.jsx",
    "content": "/**\r\n * Get the circles which the specify users is in that circle \r\n * @param {object} circles \r\n * @param {string} followingId \r\n */\r\nexport const getUserBelongCircles = (circles, followingId) => {\r\n    let userBelongCircles = [];\r\n    Object.keys(circles).forEach((cid) => {\r\n        if (cid.trim() !== '-Followers' && circles[cid].users) {\r\n            let isExist = Object.keys(circles[cid].users).indexOf(followingId) > -1;\r\n            if (isExist) {\r\n                userBelongCircles.push(cid);\r\n            }\r\n        }\r\n    });\r\n\r\n    return userBelongCircles;\r\n}\r\n\r\n/**\r\n * Get the following users\r\n * @param {object} circles \r\n */\r\nexport const getFollowingUsers = (circles) => {\r\n    let followingUsers = {};\r\n    Object.keys(circles).forEach((cid) => {\r\n        if (cid.trim() !== '-Followers' && circles[cid].users) {\r\n            Object.keys(circles[cid].users).forEach((userId) => {\r\n                let isExist = Object.keys(followingUsers).indexOf(userId) > -1;\r\n                if (!isExist) {\r\n                    followingUsers[userId] = {\r\n                        ...circles[cid].users[userId]\r\n                    };\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    return followingUsers;\r\n}\r\n\r\nexport default {\r\n    getUserBelongCircles,\r\n    getFollowingUsers\r\n};",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/api/CircleAPI.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 166,
    "kind": "function",
    "name": "getUserBelongCircles",
    "memberof": "app/api/CircleAPI.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/api/CircleAPI.jsx~getUserBelongCircles",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/api/CircleAPI.jsx",
    "importStyle": "{getUserBelongCircles}",
    "description": "Get the circles which the specify users is in that circle ",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "circles",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "followingId",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 167,
    "kind": "function",
    "name": "getFollowingUsers",
    "memberof": "app/api/CircleAPI.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/api/CircleAPI.jsx~getFollowingUsers",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/api/CircleAPI.jsx",
    "importStyle": "{getFollowingUsers}",
    "description": "Get the following users",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "circles",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "file",
    "name": "app/api/FileAPI.jsx",
    "content": "import { storageRef } from 'app/firebase/';\r\n\r\n// - Get file Extension\r\nconst getExtension = (fileName) => {\r\n    let re = /(?:\\.([^.]+))?$/;\r\n    return re.exec(fileName)[1];\r\n}\r\n\r\n// Converts image to canvas; returns new canvas element\r\nconst convertImageToCanvas = (image) => {\r\n    let canvas = document.createElement(\"canvas\");\r\n    canvas.width = image.width;\r\n    canvas.height = image.height;\r\n    canvas.getContext(\"2d\").drawImage(image, 0, 0);\r\n\r\n    return canvas;\r\n}\r\n\r\n/**\r\n * Upload image on the server\r\n * @param {file} file \r\n * @param {string} fileName \r\n */\r\nconst uploadImage = (file, fileName, progress) => {\r\n    return new Promise((resolve, reject) => {\r\n        // Create a storage refrence\r\n        let storegeFile = storageRef.child(`images/${fileName}`);\r\n\r\n        // Upload file\r\n        let task = storegeFile.put(file);\r\n        task.then((result) => {\r\n            resolve(result);\r\n        }).catch((error) => {\r\n            reject(error);\r\n        });\r\n\r\n        // Upload storage bar\r\n        task.on('state_changed', (snapshot) => {\r\n            let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n            progress(percentage, true);\r\n        }, (error) => {\r\n            console.log('========== Upload Image ============');\r\n            console.log(error);\r\n            console.log('====================================');\r\n        }, (complete) => {\r\n            progress(100, false);\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Constraint image size\r\n * @param {file} file \r\n * @param {number} maxWidth \r\n * @param {number} maxHeight \r\n */\r\nconst constraintImage = (file, fileName, maxWidth, maxHeight) => {\r\n    // Ensure it's an image\r\n    if (file.type.match(/image.*/)) {\r\n        // Load the image\r\n        let reader = new FileReader();\r\n        reader.onload = function (readerEvent) {\r\n            let image = new Image();\r\n            image.onload = function (imageEvent) {\r\n                // Resize the image\r\n                let canvas = document.createElement('canvas'),\r\n                    max_size = 986,// TODO : pull max size from a site config\r\n                    width = image.width,\r\n                    height = image.height;\r\n                if (width > height) {\r\n                    if (width > max_size) {\r\n                        height *= max_size / width;\r\n                        width = max_size;\r\n                    }\r\n                } else {\r\n                    if (height > max_size) {\r\n                        width *= max_size / height;\r\n                        height = max_size;\r\n                    }\r\n                }\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                canvas.getContext('2d').drawImage(image, 0, 0, width, height);\r\n                let dataUrl = canvas.toDataURL();\r\n                let resizedImage = dataURLToBlob(dataUrl);\r\n                let evt = new CustomEvent('onSendResizedImage', { detail: { resizedImage, fileName } });\r\n                window.dispatchEvent(evt);\r\n            };\r\n\r\n            image.src = readerEvent.target.result;\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n    }\r\n}\r\n\r\n/**\r\n * Convert data URL to blob\r\n * @param {object} dataURL \r\n */\r\nconst dataURLToBlob = (dataURL) => {\r\n    let BASE64_MARKER = ';base64,';\r\n\r\n    if (dataURL.indexOf(BASE64_MARKER) == -1) {\r\n        let parts = dataURL.split(',');\r\n        let contentType = parts[0].split(':')[1];\r\n        let raw = parts[1];\r\n\r\n        return new Blob([raw], { type: contentType });\r\n    }\r\n\r\n    let parts = dataURL.split(BASE64_MARKER);\r\n    let contentType = parts[0].split(':')[1];\r\n    let raw = window.atob(parts[1]);\r\n    let rawLength = raw.length;\r\n\r\n    let uInt8Array = new Uint8Array(rawLength);\r\n\r\n    for (let i = 0; i < rawLength; ++i) {\r\n        uInt8Array[i] = raw.charCodeAt(i);\r\n    }\r\n\r\n    return new Blob([uInt8Array], { type: contentType });\r\n}\r\n\r\nexport default {\r\n    dataURLToBlob,\r\n    convertImageToCanvas,\r\n    getExtension,\r\n    constraintImage,\r\n    uploadImage\r\n};",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/api/FileAPI.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "getExtension",
    "memberof": "app/api/FileAPI.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/api/FileAPI.jsx~getExtension",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/api/FileAPI.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "fileName",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 170,
    "kind": "function",
    "name": "convertImageToCanvas",
    "memberof": "app/api/FileAPI.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/api/FileAPI.jsx~convertImageToCanvas",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/api/FileAPI.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "image",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 171,
    "kind": "function",
    "name": "uploadImage",
    "memberof": "app/api/FileAPI.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/api/FileAPI.jsx~uploadImage",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/api/FileAPI.jsx",
    "importStyle": null,
    "description": "Upload image on the server",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "file"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fileName",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 172,
    "kind": "function",
    "name": "constraintImage",
    "memberof": "app/api/FileAPI.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/api/FileAPI.jsx~constraintImage",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/api/FileAPI.jsx",
    "importStyle": null,
    "description": "Constraint image size",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "file"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxWidth",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxHeight",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 173,
    "kind": "function",
    "name": "dataURLToBlob",
    "memberof": "app/api/FileAPI.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/api/FileAPI.jsx~dataURLToBlob",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/api/FileAPI.jsx",
    "importStyle": null,
    "description": "Convert data URL to blob",
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "dataURL",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 174,
    "kind": "file",
    "name": "app/api/PostAPI.jsx",
    "content": "// Get tags from post content\r\nexport const detectTags = (content, character) => {\r\n    return content.split(\" \").filter((word) => {\r\n        return (word.slice(0, 1) === character);\r\n    });\r\n}\r\n\r\nexport const getContentTags = (content) => {\r\n    let newTags = [];\r\n    let tags = detectTags(content, '#');\r\n\r\n    tags.forEach((tag) => {\r\n        newTags.push(tag.slice(1))\r\n    });\r\n\r\n    return newTags;\r\n}\r\n\r\nexport const sortObjectsDate = (objects) => {\r\n    let sortedObjects = objects;\r\n\r\n    // Sort posts with creation date\r\n    sortedObjects.sort((a, b) => {\r\n        return parseInt(b.creationDate) - parseInt(a.creationDate);\r\n    });\r\n\r\n    return sortedObjects;\r\n}",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/api/PostAPI.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 175,
    "kind": "function",
    "name": "detectTags",
    "memberof": "app/api/PostAPI.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/api/PostAPI.jsx~detectTags",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/api/PostAPI.jsx",
    "importStyle": "{detectTags}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "content",
        "types": [
          "*"
        ]
      },
      {
        "name": "character",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "function",
    "name": "getContentTags",
    "memberof": "app/api/PostAPI.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/api/PostAPI.jsx~getContentTags",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/api/PostAPI.jsx",
    "importStyle": "{getContentTags}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "content",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "function",
    "name": "sortObjectsDate",
    "memberof": "app/api/PostAPI.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/api/PostAPI.jsx~sortObjectsDate",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/api/PostAPI.jsx",
    "importStyle": "{sortObjectsDate}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "objects",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "file",
    "name": "app/api/StringAPI.jsx",
    "content": "import { storageRef } from 'app/firebase/';\r\n\r\nconst isValidEmail = (email) => {\r\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n}\r\n\r\nexport default {\r\n    isValidEmail\r\n}",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/api/StringAPI.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 179,
    "kind": "function",
    "name": "isValidEmail",
    "memberof": "app/api/StringAPI.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/api/StringAPI.jsx~isValidEmail",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/api/StringAPI.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "email",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 180,
    "kind": "file",
    "name": "app/app.jsx",
    "content": "// Import external components refrence\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport injectTapEventPlugin from 'react-tap-event-plugin';\r\nimport lightBaseTheme from 'material-ui/styles/baseThemes/lightBaseTheme';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store, { history } from 'configureStore';\r\nimport { ConnectedRouter } from 'react-router-redux';\r\n\r\n// - Import app components\r\nimport Master from 'Master';\r\n\r\n// Needed for onTouchTap\r\n// http://stackoverflow.com/a/34015469/988941\r\ninjectTapEventPlugin();\r\n\r\n// App css\r\nrequire('applicationStyles');\r\nconst supportsHistory = 'pushState' in window.history;\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<ConnectedRouter history={history}>\r\n\t\t\t<MuiThemeProvider muiTheme={getMuiTheme(lightBaseTheme)}>\r\n\t\t\t\t<Master />\r\n\t\t\t</MuiThemeProvider>\r\n\t\t</ConnectedRouter>\r\n\t</Provider>,\r\n\tdocument.getElementById('app')\r\n);\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/app.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 181,
    "kind": "variable",
    "name": "supportsHistory",
    "memberof": "app/app.jsx",
    "static": true,
    "longname": "app/app.jsx~supportsHistory",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/app.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 182,
    "kind": "file",
    "name": "app/components/Blog.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nimport { grey400, grey800, darkBlack, lightBlack } from 'material-ui/styles/colors';\r\nimport SvgCamera from 'material-ui/svg-icons/image/photo-camera';\r\nimport { List, ListItem } from 'material-ui/List';\r\n\r\n// - Import app components\r\nimport Post from 'Post';\r\nimport PostWrite from 'PostWrite';\r\nimport UserAvatar from 'UserAvatar';\r\n\r\n// - Import API\r\nimport * as AuthAPI from 'AuthAPI';\r\nimport * as PostAPI from 'PostAPI';\r\n\r\n// - Import actions\r\nimport * as globalActions from 'globalActions';\r\n\r\nexport class Blog extends Component {\r\n    /**\r\n     * Component constructor\r\n     * @param  {object} props is an object properties of component\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // It's true if we want to have two column of posts.\r\n            divided: false,\r\n            \r\n            // If it's true comment will be disabled on post.\r\n            disableComments: this.props.disableComments,\r\n\r\n            // If it's true share will be disabled on post.\r\n            disableSharing: this.props.disableSharing,\r\n\r\n            // If it's true, post write will be open.\r\n            openPostWrite: false,\r\n\r\n            // The title of home header.\r\n            homeTitle: ''\r\n        };\r\n\r\n        // Binding functions to `this`\r\n        this.postLoad = this.postLoad.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Open post write\r\n     * \r\n     * \r\n     * @memberof Blog\r\n     */\r\n    handleOpenPostWrite = () => {\r\n        this.setState({ openPostWrite: true });\r\n    }\r\n\r\n    /**\r\n     * Close post write\r\n     * \r\n     * \r\n     * @memberof Blog\r\n     */\r\n    handleClosePostWrite = () => {\r\n        this.setState({ openPostWrite: false });\r\n    }\r\n\r\n    /**\r\n     * Create a list of posts\r\n     * @return {DOM} posts\r\n     */\r\n    postLoad = () => {\r\n        let { posts, match } = this.props;\r\n        let { tag } = match.params;\r\n\r\n        if (posts === undefined || !Object.keys(posts).length > 0) {\r\n            return (\r\n                <h1>\r\n                    'Nothing has shared.'\r\n                </h1>\r\n            );\r\n        }\r\n\r\n        else {\r\n            var postBack = { oddPostList: [], evenPostList: [] };\r\n            var parsedPosts = [];\r\n\r\n            Object.keys(posts).forEach((postId) => {\r\n                if (tag) {\r\n                    let regex = new RegExp(\"#\" + tag, 'g')\r\n                    let postMatch = posts[postId].body.match(regex)\r\n                    if (postMatch !== null)\r\n                        parsedPosts.push({ ...posts[postId] })\r\n                } else {\r\n                    parsedPosts.push({ ...posts[postId] })\r\n\r\n                }\r\n            })\r\n\r\n            const sortedPosts = PostAPI.sortObjectsDate(parsedPosts);\r\n\r\n            if (sortedPosts.length > 6) {\r\n                postBack.divided = true;\r\n\r\n            } \r\n            \r\n            else {\r\n                postBack.divided = false;\r\n            }\r\n\r\n            sortedPosts.forEach((post, index) => {\r\n                let newPost = (\r\n                    <div key={post.id}>\r\n\r\n                        {index > 1 || (!postBack.divided && index > 0) ? <div style={{ height: \"16px\" }}></div> : ''}\r\n                        <Post\r\n                            body={post.body}\r\n                            commentCounter={post.commentCounter}\r\n                            creationDate={post.creationDate}\r\n                            id={post.id}\r\n                            image={post.image}\r\n                            lastEditDate={post.lastEditDate}\r\n                            ownerDisplayName={post.ownerDisplayName}\r\n                            ownerUserId={post.ownerUserId}\r\n                            ownerAvatar={post.ownerAvatar}\r\n                            postTypeId={post.postTypeId}\r\n                            score={post.score}\r\n                            tags={post.tags}\r\n                            video={post.video}\r\n                            disableComments={post.disableComments}\r\n                            disableSharing={post.disableSharing}\r\n                            viewCount={posts.viewCount}\r\n                            pictureState={true} />\r\n\r\n                    </div>\r\n                )\r\n\r\n                if ((index % 2) === 1 && postBack.divided) {\r\n                    postBack.oddPostList.push(newPost);\r\n                }\r\n\r\n                else {\r\n                    postBack.evenPostList.push(newPost);\r\n                }\r\n            })\r\n\r\n            return postBack;\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.setHomeTitle();\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n\r\n        let postList = this.postLoad();\r\n\r\n        const { tag, displayWriting, } = this.props;\r\n\r\n        return (\r\n            <div >\r\n                <div className='grid grid__gutters grid__1of2 grid__space-around animate-top'>\r\n                    <div className='grid-cell animate-top' style={{ maxWidth: '530px', minWidth: '280px' }}>\r\n                        {displayWriting && !tag\r\n                            ? (<PostWrite open={this.state.openPostWrite} onRequestClose={this.handleClosePostWrite} edit={false} >\r\n                                <div style={{ height: \"68px\", width: \"100%\", backgroundColor: 'white', border: '1px solid #dddfe2', borderRadius: '5px' }}>\r\n                                    <ListItem\r\n                                        primaryText={<span style={{ color: grey400, cursor: \"text\" }}> What's new with you? </span>}\r\n                                        leftAvatar={<UserAvatar fullName={this.props.fullName} fileName={this.props.avatar} size={36} />}\r\n                                        rightIcon={\r\n                                            <svg width=\"24\" height=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.133 15.239H3.84L8.533 9.92l2.995 3.393 3.939-5.438 5.226 7.364h-10.56zM1.742 0h20.516c.606 0 .826.063 1.047.181.221.119.395.293.514.514.118.221.181.441.181 1.047v14.516c0 .606-.063.826-.181 1.047a1.234 1.234 0 0 1-.514.514c-.221.118-.441.181-1.047.181H1.742c-.606 0-.826-.063-1.047-.181a1.234 1.234 0 0 1-.514-.514C.063 17.084 0 16.864 0 16.258V1.742C0 1.136.063.916.181.695.3.474.474.3.695.181.916.063 1.136 0 1.742 0zm.391 2.25v13.5h19.734V2.25H2.133zM6.72 7.875c-1.084 0-1.92-.801-1.92-1.739 0-1.04.836-1.84 1.92-1.84.978 0 1.813.8 1.813 1.84 0 .938-.835 1.739-1.813 1.739z\" fill=\"#585858\"/></svg>\r\n                                        }\r\n                                        style={{ padding: \"7px 0px\", fontWeight: \"200\" }}\r\n                                        onTouchTap={this.handleOpenPostWrite}\r\n                                    />\r\n                                </div>\r\n                                <div style={{ height: \"16px\" }}></div>\r\n                            </PostWrite>)\r\n                            : ''}\r\n\r\n                        {postList.evenPostList}\r\n                        <div style={{ height: \"16px\" }}></div>\r\n                    </div>\r\n                    {postList.divided\r\n                        ? (<div className='grid-cell animate-top' style={{ maxWidth: '530px', minWidth: '280px' }}>\r\n                            <div className=\"blog__right-list\">\r\n                                {postList.oddPostList}\r\n                                <div style={{ height: \"16px\" }}></div>\r\n                            </div>\r\n                        </div>)\r\n                        : ''}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        setHomeTitle: () => dispatch(globalActions.setHeaderTitle(ownProps.homeTitle || '')),\r\n        showTopLoading: () => dispatch(globalActions.showTopLoading()),\r\n        hideTopLoading: () => dispatch(globalActions.hideTopLoading())\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        avatar: state.user.info && state.user.info[state.authorize.uid] ? state.user.info[state.authorize.uid].avatar : '',\r\n        fullName: state.user.info && state.user.info[state.authorize.uid] ? state.user.info[state.authorize.uid].fullName : ''\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Blog))\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/Blog.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 183,
    "kind": "class",
    "name": "Blog",
    "memberof": "app/components/Blog.jsx",
    "static": true,
    "longname": "app/components/Blog.jsx~Blog",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/Blog.jsx",
    "importStyle": "{Blog}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 184,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/components/Blog.jsx~Blog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Blog.jsx~Blog#constructor",
    "access": "public",
    "description": "Component constructor",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "is an object properties of component"
      }
    ]
  },
  {
    "__docId__": 185,
    "kind": "member",
    "name": "state",
    "memberof": "app/components/Blog.jsx~Blog",
    "static": false,
    "longname": "app/components/Blog.jsx~Blog#state",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "{\"divided\": *, \"disableComments\": *, \"disableSharing\": *, \"openPostWrite\": *, \"homeTitle\": *}"
      ]
    }
  },
  {
    "__docId__": 186,
    "kind": "member",
    "name": "postLoad",
    "memberof": "app/components/Blog.jsx~Blog",
    "static": false,
    "longname": "app/components/Blog.jsx~Blog#postLoad",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 187,
    "kind": "member",
    "name": "handleOpenPostWrite",
    "memberof": "app/components/Blog.jsx~Blog",
    "static": false,
    "longname": "app/components/Blog.jsx~Blog#handleOpenPostWrite",
    "access": "public",
    "description": "Open post write",
    "lineNumber": 56,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 188,
    "kind": "member",
    "name": "handleClosePostWrite",
    "memberof": "app/components/Blog.jsx~Blog",
    "static": false,
    "longname": "app/components/Blog.jsx~Blog#handleClosePostWrite",
    "access": "public",
    "description": "Close post write",
    "lineNumber": 66,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "method",
    "name": "componentWillMount",
    "memberof": "app/components/Blog.jsx~Blog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Blog.jsx~Blog#componentWillMount",
    "access": "public",
    "description": null,
    "lineNumber": 153,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 191,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/Blog.jsx~Blog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Blog.jsx~Blog#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 161,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 192,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/Blog.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Blog.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Blog.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 212,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 193,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/Blog.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Blog.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Blog.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 227,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 194,
    "kind": "file",
    "name": "app/components/Circle.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { push } from 'react-router-redux';\r\nimport { grey400, darkBlack, lightBlack } from 'material-ui/styles/colors';\r\nimport { ListItem } from 'material-ui/List';\r\nimport SvgGroup from 'material-ui/svg-icons/action/group-work';\r\nimport IconMenu from 'material-ui/IconMenu';\r\nimport TextField from 'material-ui/TextField';\r\nimport MenuItem from 'material-ui/MenuItem';\r\nimport IconButtonElement from 'IconButtonElement';\r\nimport Dialog from 'material-ui/Dialog';\r\nimport Divider from 'material-ui/Divider';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nimport SvgClose from 'material-ui/svg-icons/navigation/close';\r\n\r\n// - Import app components\r\nimport UserAvatar from 'UserAvatar';\r\n\r\n// - Import actions\r\nimport * as circleActions from 'circleActions';\r\n\r\nexport class Circle extends Component {\r\n\r\n    /**\r\n     * Component constructor\r\n     * @param  {object} props is an object properties of component\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // If is true circle is open to show users in circle list.\r\n            open: false,\r\n\r\n            // Circle name on change.\r\n            circleName: this.props.circle.name,\r\n\r\n            // Save operation will be disable if user doesn't meet requirement.\r\n            disabledSave: false\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Handle chage circle name\r\n     * \r\n     * @memberof Circle\r\n     */\r\n    handleChangeCircleName = (evt) => {\r\n        const { value } = evt.target;\r\n\r\n        this.setState({\r\n            circleName: value,\r\n            disabledSave: (!value || value.trim() === '')\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update user's circle\r\n     * \r\n     * @memberof Circle\r\n     */\r\n    handleUpdateCircle = () => {\r\n        const { circleName } = this.state;\r\n\r\n        if (circleName && circleName.trim() !== '') {\r\n            this.props.updateCircle({ name: circleName, id: this.props.id });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle delete circle\r\n     * \r\n     * @memberof Circle\r\n     */\r\n    handleDeleteCircle = () => {\r\n        this.props.deleteCircle(this.props.id);\r\n    }\r\n\r\n    /**\r\n     * Toggle circle to close/open\r\n     * \r\n     * @memberof Circle\r\n     */\r\n    handleToggleCircle = () => {\r\n        this.setState({ open: !this.state.open });\r\n    }\r\n\r\n    userList = () => {\r\n        const { users } = this.props.circle;\r\n        const { userInfo } = this.props;\r\n        let usersParsed = [];\r\n\r\n        if (users) {\r\n            Object.keys(users).forEach((key, index) => {\r\n                const { fullName } = users[key];\r\n                let avatar = userInfo && userInfo[key] ? userInfo[key].avatar || '' : '';\r\n\r\n                usersParsed.push(<ListItem\r\n                    key={`${this.props.id}.${key}`}\r\n                    style={{ backgroundColor: '#e2e2e2' }}\r\n                    value={2}\r\n                    primaryText={fullName}\r\n                    leftAvatar={<UserAvatar fullName={fullName} fileName={avatar} />}\r\n                    onClick={() => this.props.goTo(`/${key}`)}\r\n                />)\r\n            });\r\n\r\n            return usersParsed;\r\n        }\r\n    }\r\n    /**\r\n     * Right icon menue of circle\r\n     * \r\n     * @memberof Circle\r\n     */\r\n    rightIconMenu = (\r\n        <IconMenu iconButtonElement={IconButtonElement} style={{ display: \"block\", position: \"absolute\", top: \"0px\", right: \"12px\" }}>\r\n            <MenuItem primaryText=\"Delete circle\" onClick={this.handleDeleteCircle} />\r\n            <MenuItem primaryText=\"Circle settings\" onClick={this.props.openCircleSettings} />\r\n        </IconMenu>\r\n    )\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        const circleTitle = (\r\n            <div>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: \"space-between\" }}>\r\n                    <div style={{ paddingRight: '10px' }}>\r\n                        <SvgClose onClick={this.props.closeCircleSettings} hoverColor={grey400} style={{ cursor: 'pointer' }} />\r\n                    </div>\r\n                    <div style={{\r\n                        color: 'rgba(0,0,0,0.87)',\r\n                        flex: '1 1',\r\n                        font: '500 20px Roboto,RobotoDraft,Helvetica,Arial,sans-serif'\r\n                    }}>\r\n                        Circle settings\r\n                    </div>\r\n                    <div style={{ marginTop: '-9px' }}>\r\n                        <FlatButton label=\"SAVE\" primary={true} disabled={this.state.disabledSave} onClick={this.handleUpdateCircle} />\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <ListItem\r\n                    key={this.props.id}\r\n                    style={{ backgroundColor: '#fff', borderBottom: '1px solid rgba(0,0,0,0.12)', height: '72px', padding: '12px 0' }}\r\n                    primaryText={<span style={{ color: 'rgba(0,0,0,0.87)', fontSize: '16px', marginRight: '8px', whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden' }}>{this.props.circle.name}</span>}\r\n                    leftIcon={<SvgGroup style={{ width: '40px', height: '40px', transform: 'translate(0px, -9px)', fill: '#bdbdbd' }} />}\r\n                    rightIconButton={this.rightIconMenu}\r\n                    initiallyOpen={false}\r\n                    onClick={this.handleToggleCircle}\r\n                    open={this.state.open}\r\n                    nestedItems={this.userList()}\r\n                >\r\n                    <Dialog\r\n                        id={this.props.id}\r\n                        title={circleTitle}\r\n                        modal={false}\r\n                        open={this.props.openSetting}\r\n                        onRequestClose={this.props.closeCircleSettings}\r\n                        overlayStyle={{ background: \"rgba(0,0,0,0.12)\" }}\r\n                        contentStyle={{ maxWidth: '400px' }}\r\n                    >\r\n                        <div>\r\n                            <TextField\r\n                                hintText=\"Circle name\"\r\n                                floatingLabelText=\"Circle name\"\r\n                                onChange={this.handleChangeCircleName}\r\n                                value={this.state.circleName}\r\n                            />\r\n                        </div>\r\n                    </Dialog>\r\n                </ListItem>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    const { uid } = ownProps;\r\n\r\n    return {\r\n        deleteCircle: (id) => dispatch(circleActions.dbDeleteCircle(id)),\r\n        updateCircle: (circle) => dispatch(circleActions.dbUpdateCircle(circle)),\r\n        closeCircleSettings: () => dispatch(circleActions.closeCircleSettings(uid, ownProps.id)),\r\n        openCircleSettings: () => dispatch(circleActions.openCircleSettings(uid, ownProps.id)),\r\n        goTo: (url) => dispatch(push(url))\r\n    };\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { uid } = state.authorize;\r\n\r\n    return {\r\n        openSetting: state.circle ? (state.circle.userCircles[uid] ? (state.circle.userCircles[uid][ownProps.id].openCircleSettings || false) : false) : false,\r\n        userInfo: state.user.info\r\n    };\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Circle)",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/Circle.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 195,
    "kind": "class",
    "name": "Circle",
    "memberof": "app/components/Circle.jsx",
    "static": true,
    "longname": "app/components/Circle.jsx~Circle",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/Circle.jsx",
    "importStyle": "{Circle}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 196,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/components/Circle.jsx~Circle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Circle.jsx~Circle#constructor",
    "access": "public",
    "description": "Component constructor",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "is an object properties of component"
      }
    ]
  },
  {
    "__docId__": 197,
    "kind": "member",
    "name": "state",
    "memberof": "app/components/Circle.jsx~Circle",
    "static": false,
    "longname": "app/components/Circle.jsx~Circle#state",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "{\"open\": *, \"circleName\": *, \"disabledSave\": *}"
      ]
    }
  },
  {
    "__docId__": 198,
    "kind": "member",
    "name": "handleChangeCircleName",
    "memberof": "app/components/Circle.jsx~Circle",
    "static": false,
    "longname": "app/components/Circle.jsx~Circle#handleChangeCircleName",
    "access": "public",
    "description": "Handle chage circle name",
    "lineNumber": 48,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "member",
    "name": "handleUpdateCircle",
    "memberof": "app/components/Circle.jsx~Circle",
    "static": false,
    "longname": "app/components/Circle.jsx~Circle#handleUpdateCircle",
    "access": "public",
    "description": "Update user's circle",
    "lineNumber": 62,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "member",
    "name": "handleDeleteCircle",
    "memberof": "app/components/Circle.jsx~Circle",
    "static": false,
    "longname": "app/components/Circle.jsx~Circle#handleDeleteCircle",
    "access": "public",
    "description": "Handle delete circle",
    "lineNumber": 75,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 201,
    "kind": "member",
    "name": "handleToggleCircle",
    "memberof": "app/components/Circle.jsx~Circle",
    "static": false,
    "longname": "app/components/Circle.jsx~Circle#handleToggleCircle",
    "access": "public",
    "description": "Toggle circle to close/open",
    "lineNumber": 84,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 202,
    "kind": "member",
    "name": "userList",
    "memberof": "app/components/Circle.jsx~Circle",
    "static": false,
    "longname": "app/components/Circle.jsx~Circle#userList",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 203,
    "kind": "member",
    "name": "rightIconMenu",
    "memberof": "app/components/Circle.jsx~Circle",
    "static": false,
    "longname": "app/components/Circle.jsx~Circle#rightIconMenu",
    "access": "public",
    "description": "Right icon menue of circle",
    "lineNumber": 116,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/Circle.jsx~Circle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Circle.jsx~Circle#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 127,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 205,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/Circle.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Circle.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Circle.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 193,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 206,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/Circle.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Circle.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Circle.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 211,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 207,
    "kind": "file",
    "name": "app/components/Comment.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { createAction as action } from 'redux-actions';\r\nimport moment from 'moment';\r\nimport Linkify from 'react-linkify';\r\n\r\n// - Import material UI libraries\r\nimport Paper from 'material-ui/Paper';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nimport { grey400 } from 'material-ui/styles/colors';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\r\nimport IconMenu from 'material-ui/IconMenu';\r\nimport MenuItem from 'material-ui/MenuItem';\r\n\r\n// - Import app components\r\nimport UserAvatar from 'UserAvatar';\r\n\r\n// - Import action types\r\nimport * as types from 'actionTypes';\r\n\r\n// - Import actions\r\nimport * as commentActions from 'commentActions';\r\nimport * as userActions from 'userActions';\r\n\r\nexport class Comment extends Component {\r\n\r\n    /**\r\n     * Component constructor\r\n     * @param  {object} props is an object properties of component\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.textareaRef = (i) => { this.inputText = i };\r\n        this.divCommentRef = (i) => { this.divComment = i };\r\n\r\n        this.state = {\r\n            // Comment text\r\n            text: this.props.comment.text,\r\n\r\n            // Comment text to match edit with new comment that is edited\r\n            initialText: this.props.comment.text,\r\n\r\n            // If comment text dosn't take any change it will be true\r\n            editDisabled: true,\r\n\r\n            // If it's true the post owner is the logged in user which this post be long to the comment\r\n            isPostOwner: ''\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * Handle show edit comment\r\n     * @param  {event} evt is an event passed by clicking on edit button\r\n     */\r\n    handleEditComment = (evt) => {\r\n        this.inputText.style.height = this.divComment.clientHeight + 'px';\r\n        this.props.openEditor();\r\n    }\r\n\r\n    /**\r\n     * Handle cancel edit\r\n     * @param  {event} evt is an event passed by clicking on cancel button\r\n     */\r\n    handleCancelEdit = (evt) => {\r\n        this.setState({ text: this.state.initialText });\r\n        this.props.closeEditor();\r\n    }\r\n\r\n    /**\r\n     * Handle edit comment\r\n     * @param  {event} evt is an event passed by clicking on post button\r\n     */\r\n    handleUpdateComment = (evt) => {\r\n        this.props.update(this.props.comment.id, this.props.comment.postId, this.state.text);\r\n        this.setState({ initialText: this.state.text });\r\n    }\r\n\r\n    /**\r\n     * When comment text changed\r\n     * @param  {event} evt is an event passed by change comment text callback funciton\r\n     * @param  {string} data is the comment text which user writes\r\n     */\r\n    handleOnChange = (evt) => {\r\n        const data = evt.target.value;\r\n        this.inputText.style.height = evt.target.scrollHeight + 'px';\r\n\r\n        if (data.length === 0 || data.trim() === '' || data.trim() === this.state.initialText) {\r\n            this.setState({\r\n                text: data,\r\n                editDisabled: true\r\n            });\r\n        }\r\n\r\n        else {\r\n            this.setState({\r\n                text: data,\r\n                editDisabled: false\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Delete a comment\r\n     * @param  {event} evt    an event passed by click on delete comment\r\n     * @param  {string} id     comment identifire\r\n     * @param  {string} postId post identifier which comment belong to\r\n     */\r\n    handleDelete = (evt, id, postId) => {\r\n        this.props.delete(id, postId);\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { userId } = this.props.comment;\r\n\r\n        if (!this.props.isCommentOwner && !this.props.info[userId]) {\r\n            this.props.getUserInfo();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        /**\r\n         * DOM styles\r\n         * \r\n         * @memberof Comment\r\n         */\r\n        const styles = {\r\n            comment: {\r\n                marginBottom: '12px'\r\n            },\r\n            iconButton: {\r\n                width: 16,\r\n                height: 16\r\n            },\r\n            author: {\r\n                fontSize: \"13px\",\r\n                paddingRight: \"10px\",\r\n                fontWeight: 400,\r\n                color: \"rgba(0,0,0,0.87)\",\r\n                textOverflow: \"ellipsis\",\r\n                overflow: \"hidden\"\r\n\r\n            },\r\n            commentBody: {\r\n                fontSize: \"13px\",\r\n                lineHeight: \"20px\",\r\n                color: \"rgba(0,0,0,0.87)\",\r\n                fontWeight: 300,\r\n                height: \"\",\r\n                display: \"block\"\r\n            }\r\n        }\r\n\r\n        // Comment object from props\r\n        const { comment } = this.props;\r\n\r\n        const iconButtonElement = (\r\n            <IconButton style={styles.iconButton} iconStyle={styles.iconButton} touch={true}>\r\n                <MoreVertIcon color={grey400} viewBox='9 0 24 24' />\r\n            </IconButton>\r\n        );\r\n\r\n        const RightIconMenu = () => (\r\n            <IconMenu iconButtonElement={iconButtonElement} style={{ display: \"block\", position: \"absolute\", top: \"0px\", right: \"4px\", transform: 'rotate(90deg)' }}>\r\n                <MenuItem style={{ fontSize: \"14px\" }}>Reply</MenuItem>\r\n                {this.props.isCommentOwner ? (<MenuItem style={{ fontSize: \"14px\" }} onClick={this.handleEditComment}>Edit</MenuItem>) : ''}\r\n                {(this.props.isCommentOwner || this.props.isPostOwner) ? (<MenuItem style={{ fontSize: \"14px\" }} onClick={(evt) => this.handleDelete(evt, comment.id, comment.postId)}>Delete</MenuItem>) : ''}\r\n            </IconMenu>\r\n        );\r\n\r\n        const Author = () => (\r\n            <div style={{ marginTop: \"-11px\" }}>\r\n                <span style={styles.author}>{comment.userDisplayName}</span><span style={{fontSize: \"10px\", color: '#757575'}}>{moment.unix(comment.creationDate).fromNow()}</span>\r\n            </div>\r\n        );\r\n\r\n        const commentBody = (\r\n            <p style={styles.commentBody}>{comment.text}</p>\r\n        );\r\n\r\n        const { userId } = comment;\r\n\r\n        return (\r\n            <div className=\"animate-top\" style={styles.comment} key={comment.id}>\r\n                <Paper zDepth={0} className=\"animate2-top10\" style={{ position: \"relative\", padding: \"\", display: (!this.state.display ? \"block\" : \"none\") }}>\r\n                    <div style={{ marginLeft: \"0px\", padding: \"16px 56px 0px 72px\", position: \"relative\" }}>\r\n                        <NavLink to={`/${userId}`}><UserAvatar fullName={this.props.fullName} fileName={this.props.avatar} style={{ display: \"inline-flex\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", top: \"8px\", left: \"16px\" }} size={36} /></NavLink>\r\n                        <NavLink to={`/${userId}`}> <Author /></NavLink>\r\n                        {(!this.props.isCommentOwner && !this.props.isPostOwner && this.props.disableComments) ? '' : (<RightIconMenu />)}\r\n                        <div style={{ outline: \"none\", flex: \"auto\", flexGrow: 1 }}>\r\n                            <textarea ref={this.textareaRef} className=\"animate2-top10\" style={{ fontWeight: 100, fontSize: \"14px\", border: \"none\", width: \"100%\", outline: \"none\", resize: \"none\", display: (this.props.comment.editorStatus ? 'block' : 'none') }} onChange={this.handleOnChange} value={this.state.text}></textarea>\r\n                            <Linkify properties={{ target: '_blank', style: { color: 'blue' } }}>\r\n                                <div ref={this.divCommentRef} className=\"animate2-top10\" style={{ fontWeight: 100, fontSize: \"14px\", height: \"100%\", border: \"none\", width: \"100%\", outline: \"none\", resize: \"none\", display: (!this.props.comment.editorStatus ? 'block' : 'none') }}>{this.state.text}</div>\r\n                            </Linkify>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ display: (this.props.comment.editorStatus ? \"flex\" : \"none\"), flexDirection: \"row-reverse\" }}>\r\n                        <FlatButton primary={true} disabled={this.state.editDisabled} label=\"Update\" style={{ float: \"right\", clear: \"both\", zIndex: 5, margin: \"0px 5px 5px 0px\", fontWeight: 400 }} onClick={this.handleUpdateComment} />\r\n                        <FlatButton primary={true} label=\"Cancel\" style={{ float: \"right\", clear: \"both\", zIndex: 5, margin: \"0px 5px 5px 0px\", fontWeight: 400 }} onClick={this.handleCancelEdit} />\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        delete: (id, postId) => dispatch(commentActions.dbDeleteComment(id, postId)),\r\n        update: (id, postId, comment) => dispatch(commentActions.dbUpdateComment(id, postId, comment)),\r\n        openEditor: () => dispatch(commentActions.openCommentEditor({ id: ownProps.comment.id, postId: ownProps.comment.postId })),\r\n        closeEditor: () => dispatch(commentActions.closeCommentEditor({ id: ownProps.comment.id, postId: ownProps.comment.postId })),\r\n        getUserInfo: () => dispatch(userActions.dbGetUserInfoByUserId(ownProps.comment.userId))\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { uid } = state.authorize;\r\n    const avatar = state.user.info && state.user.info[ownProps.comment.userId] ? state.user.info[ownProps.comment.userId].avatar || '' : '';\r\n    const fullName = state.user.info && state.user.info[ownProps.comment.userId] ? state.user.info[ownProps.comment.userId].fullName || '' : '';\r\n\r\n    return {\r\n        uid: uid,\r\n        isCommentOwner: (uid === ownProps.comment.userId),\r\n        info: state.user.info,\r\n        avatar,\r\n        fullName\r\n    };\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment)\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/Comment.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 208,
    "kind": "class",
    "name": "Comment",
    "memberof": "app/components/Comment.jsx",
    "static": true,
    "longname": "app/components/Comment.jsx~Comment",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/Comment.jsx",
    "importStyle": "{Comment}",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 209,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/components/Comment.jsx~Comment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Comment.jsx~Comment#constructor",
    "access": "public",
    "description": "Component constructor",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "is an object properties of component"
      }
    ]
  },
  {
    "__docId__": 210,
    "kind": "member",
    "name": "textareaRef",
    "memberof": "app/components/Comment.jsx~Comment",
    "static": false,
    "longname": "app/components/Comment.jsx~Comment#textareaRef",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "member",
    "name": "inputText",
    "memberof": "app/components/Comment.jsx~Comment",
    "static": false,
    "longname": "app/components/Comment.jsx~Comment#inputText",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 212,
    "kind": "member",
    "name": "divCommentRef",
    "memberof": "app/components/Comment.jsx~Comment",
    "static": false,
    "longname": "app/components/Comment.jsx~Comment#divCommentRef",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 213,
    "kind": "member",
    "name": "divComment",
    "memberof": "app/components/Comment.jsx~Comment",
    "static": false,
    "longname": "app/components/Comment.jsx~Comment#divComment",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 214,
    "kind": "member",
    "name": "state",
    "memberof": "app/components/Comment.jsx~Comment",
    "static": false,
    "longname": "app/components/Comment.jsx~Comment#state",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "{\"text\": *, \"initialText\": *, \"editDisabled\": boolean, \"isPostOwner\": *}"
      ]
    }
  },
  {
    "__docId__": 215,
    "kind": "member",
    "name": "handleEditComment",
    "memberof": "app/components/Comment.jsx~Comment",
    "static": false,
    "longname": "app/components/Comment.jsx~Comment#handleEditComment",
    "access": "public",
    "description": "Handle show edit comment",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "is an event passed by clicking on edit button"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 216,
    "kind": "member",
    "name": "handleCancelEdit",
    "memberof": "app/components/Comment.jsx~Comment",
    "static": false,
    "longname": "app/components/Comment.jsx~Comment#handleCancelEdit",
    "access": "public",
    "description": "Handle cancel edit",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "is an event passed by clicking on cancel button"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 217,
    "kind": "member",
    "name": "handleUpdateComment",
    "memberof": "app/components/Comment.jsx~Comment",
    "static": false,
    "longname": "app/components/Comment.jsx~Comment#handleUpdateComment",
    "access": "public",
    "description": "Handle edit comment",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "is an event passed by clicking on post button"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 218,
    "kind": "member",
    "name": "handleOnChange",
    "memberof": "app/components/Comment.jsx~Comment",
    "static": false,
    "longname": "app/components/Comment.jsx~Comment#handleOnChange",
    "access": "public",
    "description": "When comment text changed",
    "lineNumber": 87,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "is an event passed by change comment text callback funciton"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "is the comment text which user writes"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "member",
    "name": "handleDelete",
    "memberof": "app/components/Comment.jsx~Comment",
    "static": false,
    "longname": "app/components/Comment.jsx~Comment#handleDelete",
    "access": "public",
    "description": "Delete a comment",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "an event passed by click on delete comment"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "comment identifire"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "postId",
        "description": "post identifier which comment belong to"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "componentWillMount",
    "memberof": "app/components/Comment.jsx~Comment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Comment.jsx~Comment#componentWillMount",
    "access": "public",
    "description": null,
    "lineNumber": 117,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/Comment.jsx~Comment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Comment.jsx~Comment#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 129,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 222,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/Comment.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Comment.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Comment.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 222,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 223,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/Comment.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Comment.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Comment.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 238,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 224,
    "kind": "file",
    "name": "app/components/CommentGroup.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Paper from 'material-ui/Paper';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nimport TextField from 'material-ui/TextField';\r\nimport Divider from 'material-ui/Divider';\r\nimport { ListItem } from 'material-ui/List';\r\n\r\n// - Import actions\r\nimport * as commentActions from 'commentActions';\r\n\r\n// - Import app components\r\nimport CommentList from 'CommentList';\r\nimport CommentWrite from 'CommentWrite';\r\nimport UserAvatar from 'UserAvatar';\r\n\r\nexport class CommentGroup extends Component {\r\n    /**\r\n     * Component constructor\r\n     * @param  {object} props is an object properties of component\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            commentText: \"\",\r\n            postDisable: true\r\n        };\r\n    }\r\n\r\n    // Clear comment text field\r\n    clearCommentWrite = () => {\r\n        this.setState({\r\n            commentText: '',\r\n            postDisable: false\r\n        });\r\n    }\r\n\r\n    // Post comment\r\n    handlePostComment = () => {\r\n        this.props.send(this.state.commentText, this.props.postId, this.clearCommentWrite);\r\n    }\r\n\r\n    /**\r\n     * When comment text changed\r\n     * @param  {event} evt is an event passed by change comment text callback funciton\r\n     * @param  {string} data is the comment text which user writes\r\n     */\r\n    handleOnChange = (evt, data) => {\r\n        this.setState({ commentText: data });\r\n\r\n        if (data.length === 0 || data.trim() === '') {\r\n            this.setState({\r\n                commentText: '',\r\n                postDisable: true\r\n            });\r\n        }\r\n\r\n        else {\r\n            this.setState({\r\n                commentText: data,\r\n                postDisable: false\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get comments' DOM\r\n     * @return {DOM} list of comments' DOM\r\n     */\r\n    commentList = () => {\r\n        let comments = this.props.comments;\r\n\r\n        if (comments) {\r\n            let parsedComments = [];\r\n\r\n            Object.keys(comments).slice(0, 3).forEach((commentId) => {\r\n                parsedComments.push({\r\n                    id: commentId,\r\n                    ...comments[commentId]\r\n                });\r\n            });\r\n\r\n            if (parsedComments.length === 2) {\r\n                parsedComments.push(parsedComments[0]);\r\n            }\r\n\r\n            else if (parsedComments.length === 1) {\r\n                parsedComments.push(parsedComments[0]);\r\n                parsedComments.push(parsedComments[0]);\r\n            }\r\n\r\n            return parsedComments.map((comment, index) => {\r\n                const { userInfo } = this.props;\r\n\r\n                const commentAvatar = userInfo && userInfo[comment.userId] ? userInfo[comment.userId].avatar || '' : '';\r\n                const commentFullName = userInfo && userInfo[comment.userId] ? userInfo[comment.userId].fullName || '' : '';\r\n\r\n                return (<div style={{borderRadius: \"0 0 7px 7px\"}}><ListItem key={index} style={{ position: \"\", zIndex: \"\" }} innerDivStyle={{ padding: \"6px 16px 16px 72px\" }}\r\n                    leftAvatar={<UserAvatar fullName={commentFullName} fileName={commentAvatar} style={{ top: \"8px\" }} size={36} />}\r\n                    secondaryText={<div>\r\n                        <span style={{ fontSize: \"13px\", color: \"rgba(0,0,0,0.87)\", textOverflow: \"ellipsis\", overflow: \"hidden\", display: 'block' }}>\r\n                            {comment.userDisplayName}\r\n                        </span>\r\n\r\n                        <span style={{ fontSize: \"13px\", color: \"rgba(0,0,0,0.87)\", fontWeight: 300, whiteSpace: \"pre-wrap\", display: 'block' }}>\r\n                            {comment.text}\r\n                        </span>\r\n                    </div>}\r\n                    secondaryTextLines={2} /></div>\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={this.props.comments && Object.keys(this.props.comments).length > 0 ? { display: \"block\" } : { display: \"none\" }}>\r\n                    <Divider />\r\n                    <div style={!this.props.open ? { display: \"block\" } : { display: \"none\" }}>\r\n                    {/* <Paper zDepth={0} className=\"animate-top\" style={!this.props.open ? { display: \"block\" } : { display: \"none\" }}> */}\r\n                        <div style={{ position: \"relative\", height: \"60px\", borderRadius: '0 0 7px 7px' }} >\r\n                            {/* <FlatButton label=\" \" style={{ height: \"60px\", zIndex: 5, borderRadius: '0 0 7px 7px' }} fullWidth={true} onClick={this.props.onToggleRequest} /> */}\r\n\r\n                            <div className=\"comment__list-show\">\r\n                                {this.commentList()}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* </Paper> */}\r\n                    {(this.props.comments && Object.keys(this.props.comments).length > 0)\r\n                        ? (<Paper zDepth={0} style={this.props.open ? { display: \"block\", padding: \"0px 0px\" } : { display: \"none\", padding: \"12px 16px\" }}>\r\n                            <CommentList comments={this.props.comments} isPostOwner={this.props.isPostOwner} disableComments={this.props.disableComments} />\r\n                        </Paper>) : ''}\r\n                </div>\r\n\r\n                {!this.props.disableComments ? (<div>\r\n                    <Divider />\r\n                    <Paper zDepth={0} className=\"animate2-top10\" style={{ position: \"relative\", overflowY: \"auto\", padding: \"12px 16px\", display: (this.props.open ? \"block\" : \"none\"), borderRadius: \"0 0 7px 7px\" }}>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <UserAvatar fullName={this.props.fullName} fileName={this.props.avatar} style={{ flex: \"none\", margin: \"4px 0px\" }} size={36} />\r\n                            <div style={{ outline: \"none\", marginLeft: \"16px\", flex: \"auto\", flexGrow: 1 }}>\r\n                                <TextField\r\n                                    value={this.state.commentText}\r\n                                    onChange={this.handleOnChange}\r\n                                    hintText=\"Add a comment...\"\r\n                                    underlineShow={false}\r\n                                    multiLine={true}\r\n                                    rows={1}\r\n                                    hintStyle={{ fontWeight: 100, fontSize: \"14px\" }}\r\n                                    rowsMax={4}\r\n                                    textareaStyle={{ fontWeight: 100, fontSize: \"14px\" }}\r\n                                    style={{ width: '100%' }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <FlatButton primary={true} disabled={this.state.postDisable} label=\"Post\" style={{ float: \"right\", clear: \"both\", zIndex: 5, margin: \"0px 5px 5px 0px\", fontWeight: 400 }} onClick={this.handlePostComment} />\r\n                    </Paper>\r\n                </div>) : ''}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        send: (text, postId, callBack) => {\r\n            dispatch(commentActions.dbAddComment({\r\n                postId: postId,\r\n                text: text,\r\n                ownerPostUserId: ownProps.ownerPostUserId\r\n            }, callBack))\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        comments: state.comment.postComments[ownProps.postId],\r\n        avatar: state.user.info && state.user.info[state.authorize.uid] ? state.user.info[state.authorize.uid].avatar || '' : '',\r\n        fullName: state.user.info && state.user.info[state.authorize.uid] ? state.user.info[state.authorize.uid].fullName || '' : '',\r\n        userInfo: state.user.info\r\n\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentGroup)",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/CommentGroup.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 225,
    "kind": "class",
    "name": "CommentGroup",
    "memberof": "app/components/CommentGroup.jsx",
    "static": true,
    "longname": "app/components/CommentGroup.jsx~CommentGroup",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/CommentGroup.jsx",
    "importStyle": "{CommentGroup}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 226,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/components/CommentGroup.jsx~CommentGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/CommentGroup.jsx~CommentGroup#constructor",
    "access": "public",
    "description": "Component constructor",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "is an object properties of component"
      }
    ]
  },
  {
    "__docId__": 227,
    "kind": "member",
    "name": "state",
    "memberof": "app/components/CommentGroup.jsx~CommentGroup",
    "static": false,
    "longname": "app/components/CommentGroup.jsx~CommentGroup#state",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "{\"commentText\": *, \"postDisable\": boolean}"
      ]
    }
  },
  {
    "__docId__": 228,
    "kind": "member",
    "name": "clearCommentWrite",
    "memberof": "app/components/CommentGroup.jsx~CommentGroup",
    "static": false,
    "longname": "app/components/CommentGroup.jsx~CommentGroup#clearCommentWrite",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 229,
    "kind": "member",
    "name": "handlePostComment",
    "memberof": "app/components/CommentGroup.jsx~CommentGroup",
    "static": false,
    "longname": "app/components/CommentGroup.jsx~CommentGroup#handlePostComment",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 230,
    "kind": "member",
    "name": "handleOnChange",
    "memberof": "app/components/CommentGroup.jsx~CommentGroup",
    "static": false,
    "longname": "app/components/CommentGroup.jsx~CommentGroup#handleOnChange",
    "access": "public",
    "description": "When comment text changed",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "is an event passed by change comment text callback funciton"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "is the comment text which user writes"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 231,
    "kind": "member",
    "name": "commentList",
    "memberof": "app/components/CommentGroup.jsx~CommentGroup",
    "static": false,
    "longname": "app/components/CommentGroup.jsx~CommentGroup#commentList",
    "access": "public",
    "description": "Get comments' DOM",
    "lineNumber": 71,
    "return": {
      "nullable": null,
      "types": [
        "DOM"
      ],
      "spread": false,
      "description": "list of comments' DOM"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 232,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/CommentGroup.jsx~CommentGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/CommentGroup.jsx~CommentGroup#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 120,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 233,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/CommentGroup.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/CommentGroup.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/CommentGroup.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 176,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 234,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/CommentGroup.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/CommentGroup.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/CommentGroup.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 194,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 235,
    "kind": "file",
    "name": "app/components/CommentList.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { List } from 'material-ui/List';\r\n\r\n// - Import app components\r\nimport Comment from 'Comment';\r\nimport * as PostAPI from 'PostAPI';\r\n\r\nexport class CommentList extends Component {\r\n\r\n    /**\r\n     * Get comments' DOM\r\n     * @return {DOM} list of comments' DOM\r\n     */\r\n    commentList = () => {\r\n        const comments = this.props.comments;\r\n\r\n        if (comments) {\r\n            let parsedComments = [];\r\n\r\n            Object.keys(comments).forEach((commentId) => {\r\n                parsedComments.push({\r\n                    id: commentId,\r\n                    ...comments[commentId]\r\n                });\r\n            });\r\n\r\n            const sortedComments = PostAPI.sortObjectsDate(parsedComments);\r\n\r\n            return sortedComments.map((comment, index, array) => {\r\n                return <Comment key={comment.id} comment={comment} isPostOwner={this.props.isPostOwner} disableComments={this.props.disableComments} />\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        return (\r\n            <List style={{width: \"100%\", maxHeight: '450px', overflowY: 'auto'}}>\r\n                {this.commentList()}\r\n            </List>\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentList)\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/CommentList.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 236,
    "kind": "class",
    "name": "CommentList",
    "memberof": "app/components/CommentList.jsx",
    "static": true,
    "longname": "app/components/CommentList.jsx~CommentList",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/CommentList.jsx",
    "importStyle": "{CommentList}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 237,
    "kind": "member",
    "name": "commentList",
    "memberof": "app/components/CommentList.jsx~CommentList",
    "static": false,
    "longname": "app/components/CommentList.jsx~CommentList#commentList",
    "access": "public",
    "description": "Get comments' DOM",
    "lineNumber": 15,
    "return": {
      "nullable": null,
      "types": [
        "DOM"
      ],
      "spread": false,
      "description": "list of comments' DOM"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 238,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/CommentList.jsx~CommentList",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/CommentList.jsx~CommentList#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 40,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 239,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/CommentList.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/CommentList.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/CommentList.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 240,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/CommentList.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/CommentList.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/CommentList.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 241,
    "kind": "file",
    "name": "app/components/CommentWrite.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// - Import actions\r\nimport * as commentActions from 'commentActions';\r\n\r\nexport class CommentWrite extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            inputValue: ''\r\n        };\r\n\r\n        // Binding functions to `this`\r\n        this.handleRef = this.handleRef.bind(this);\r\n        this.focus = this.focus.bind(this);\r\n    }\r\n\r\n    handleOnChange = (evt) => {\r\n        this.setState({ inputValue: evt.target.value });\r\n    }\r\n\r\n    handleRef = (ref) => {\r\n        this.inputRef = ref;\r\n    }\r\n\r\n    focus = () => {\r\n        this.inputRef.focus();\r\n    };\r\n\r\n    handleAddComment = (evt) => {\r\n        this.props.send(this.state.inputValue, this.props.postId, this.props.close);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <textarea autoFocus defaultValue={this.props.commentText} onChange={this.handleOnChange} />\r\n                <Button basic style={{marginTop: '5px'}} onClick={this.handleAddComment} color='teal'>Add Comment</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// - Map dispatch to props\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        send: (text, postId, callBack) => {\r\n            dispatch(commentActions.dbAddComment({\r\n                postId: postId,\r\n                text: text\r\n            }, callBack))\r\n\r\n        }\r\n    }\r\n}\r\n\r\n// - Map state to props\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n// - Connect component to store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentWrite)\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/CommentWrite.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 242,
    "kind": "class",
    "name": "CommentWrite",
    "memberof": "app/components/CommentWrite.jsx",
    "static": true,
    "longname": "app/components/CommentWrite.jsx~CommentWrite",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/CommentWrite.jsx",
    "importStyle": "{CommentWrite}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 243,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/components/CommentWrite.jsx~CommentWrite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/CommentWrite.jsx~CommentWrite#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 244,
    "kind": "member",
    "name": "state",
    "memberof": "app/components/CommentWrite.jsx~CommentWrite",
    "static": false,
    "longname": "app/components/CommentWrite.jsx~CommentWrite#state",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "{\"inputValue\": *}"
      ]
    }
  },
  {
    "__docId__": 245,
    "kind": "member",
    "name": "handleRef",
    "memberof": "app/components/CommentWrite.jsx~CommentWrite",
    "static": false,
    "longname": "app/components/CommentWrite.jsx~CommentWrite#handleRef",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "member",
    "name": "focus",
    "memberof": "app/components/CommentWrite.jsx~CommentWrite",
    "static": false,
    "longname": "app/components/CommentWrite.jsx~CommentWrite#focus",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "member",
    "name": "handleOnChange",
    "memberof": "app/components/CommentWrite.jsx~CommentWrite",
    "static": false,
    "longname": "app/components/CommentWrite.jsx~CommentWrite#handleOnChange",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 249,
    "kind": "member",
    "name": "inputRef",
    "memberof": "app/components/CommentWrite.jsx~CommentWrite",
    "longname": "app/components/CommentWrite.jsx~CommentWrite#inputRef",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 251,
    "kind": "member",
    "name": "handleAddComment",
    "memberof": "app/components/CommentWrite.jsx~CommentWrite",
    "static": false,
    "longname": "app/components/CommentWrite.jsx~CommentWrite#handleAddComment",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 252,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/CommentWrite.jsx~CommentWrite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/CommentWrite.jsx~CommentWrite#render",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 253,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/CommentWrite.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/CommentWrite.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/CommentWrite.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      },
      {
        "name": "ownProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"send\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 254,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/CommentWrite.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/CommentWrite.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/CommentWrite.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 255,
    "kind": "file",
    "name": "app/components/EditProfile.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { grey400 } from 'material-ui/styles/colors';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\r\nimport SvgCamera from 'material-ui/svg-icons/image/photo-camera';\r\nimport IconMenu from 'material-ui/IconMenu';\r\nimport MenuItem from 'material-ui/MenuItem';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\nimport EventListener, { withOptions } from 'react-event-listener';\r\nimport Dialog from 'material-ui/Dialog';\r\nimport Paper from 'material-ui/Paper';\r\nimport TextField from 'material-ui/TextField';\r\n\r\n// - Import app components\r\nimport ImgCover from 'ImgCover';\r\nimport DialogTitle from 'DialogTitle';\r\nimport ImageGallery from 'ImageGallery';\r\nimport FileAPI from 'FileAPI';\r\nimport UserAvatar from 'UserAvatar';\r\n\r\n// - Import actions\r\nimport * as userActions from 'userActions';\r\nimport * as globalActions from 'globalActions';\r\nimport * as imageGalleryActions from 'imageGalleryActions';\r\n\r\nexport class EditProfile extends Component {\r\n\r\n    /**\r\n     * Component constructor\r\n     * @param  {object} props is an object properties of component\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // If it's true the winow is in small size\r\n            isSmall: false,\r\n\r\n            // User tag line input value\r\n            tagLineInput: props.info.tagLine || '',\r\n            \r\n            // User full name input value\r\n            fullNameInput: props.info.fullName || '',\r\n            \r\n            // Error message of full name input\r\n            fullNameInputError: '',\r\n            \r\n            // User banner address\r\n            banner: this.props.banner || 'https://firebasestorage.googleapis.com/v0/b/open-social-33d92.appspot.com/o/images%2F751145a1-9488-46fd-a97e-04018665a6d3.JPG?alt=media&token=1a1d5e21-5101-450e-9054-ea4a20e06c57',\r\n            \r\n            // User avatar address\r\n            avatar: this.props.avatar || '',\r\n            \r\n            // It's true if the image galley for banner is open\r\n            openBanner: false,\r\n\r\n            // It's true if the image gallery for avatar is open\r\n            openAvatar: false\r\n        };\r\n    }\r\n\r\n    // Close image gallery of banner\r\n    handleCloseBannerGallery = () => {\r\n        this.setState({ openBanner: false });\r\n    }\r\n\r\n    // Open image gallery of banner\r\n    handleOpenBannerGallery = () => {\r\n        this.setState({ openBanner: true });\r\n    }\r\n\r\n    // Close image gallery of avatar\r\n    handleCloseAvatarGallery = () => {\r\n        this.setState({ openAvatar: false });\r\n    }\r\n\r\n    // Open image gallery of avatar\r\n    handleOpenAvatarGallery = () => {\r\n        this.setState({ openAvatar: true });\r\n    }\r\n\r\n    // Set banner image url\r\n    handleRequestSetBanner = (url) => {\r\n        this.setState({ banner: url });\r\n    }\r\n\r\n    // Set avatar image url\r\n    handleRequestSetAvatar = (fileName) => {\r\n        this.setState({ avatar: fileName });\r\n    }\r\n\r\n    // Handle change date\r\n    handleChangeDate = (evt, date) => {\r\n        this.setState({ birthdayInput: date });\r\n    }\r\n\r\n    /**\r\n     * Update profile on the server\r\n     * \r\n     * @memberof EditProfile\r\n     */\r\n    handleUpdate = () => {\r\n        const {fullNameInput, tagLineInput, avatar, banner} = this.state;\r\n        \r\n        if (this.state.fullNameInput.trim() === '') {\r\n            this.setState({ fullNameInputError: 'This field is required' });\r\n        }\r\n\r\n        else {\r\n            this.setState({ fullNameInputError: '' });\r\n\r\n            this.props.update({\r\n                fullName: fullNameInput,\r\n                tagLine: tagLineInput,\r\n                avatar: avatar,\r\n                banner: banner\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle data on input change\r\n     * @param  {event} evt is an event of inputs of element on change\r\n     */\r\n    handleInputChange = (evt) => {\r\n        const target = evt.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n\r\n        this.setState({ [target.name]: value });\r\n    }\r\n\r\n    /**\r\n      * Handle resize event for window to change sidebar status\r\n      * @param  {event} evt is the event is passed by winodw resize event\r\n      */\r\n    handleResize = (evt) => {\r\n        const width = window.innerWidth;\r\n\r\n        if (width > 900) {\r\n            this.setState({ isSmall: false });\r\n        }\r\n\r\n        else {\r\n            this.setState({ isSmall: true });\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        this.handleResize();\r\n    }\r\n\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n\r\n        const styles = {\r\n            avatar: {\r\n                border: '2px solid rgb(255, 255, 255)'\r\n            },\r\n            paper: {\r\n                width: '90%',\r\n                height: '100%',\r\n                margin: '0 auto',\r\n                display: 'block',\r\n            },\r\n            title: {\r\n                padding: '24px 24px 20px 24px',\r\n                font: '500 20px Roboto,RobotoDraft,Helvetica,Arial,sans-serif',\r\n                display: 'flex',\r\n                wordWrap: 'break-word',\r\n                textOverflow: 'ellipsis',\r\n                whiteSpace: 'nowrap',\r\n                overflow: 'hidden',\r\n                flexGrow: 1\r\n            },\r\n            actions: {\r\n                display: 'flex',\r\n                justifyContent: \"flex-end\",\r\n                padding: '24px 24px 20px'\r\n            },\r\n            updateButton: {\r\n                marginLeft: '10px'\r\n            },\r\n            box: {\r\n                padding: '0px 24px 20px 24px',\r\n                display: 'flex'\r\n\r\n            },\r\n            dialogGallery: {\r\n                width: '',\r\n                maxWidth: '530px',\r\n                borderRadius: \"4px\"\r\n            }\r\n        };\r\n\r\n        const iconButtonElement = (\r\n            <IconButton style={this.state.isSmall ? styles.iconButtonSmall : styles.iconButton} iconStyle={this.state.isSmall ? styles.iconButtonSmall : styles.iconButton} touch={true}>\r\n                <MoreVertIcon color={grey400} viewBox='10 0 24 24' />\r\n            </IconButton>\r\n        );\r\n\r\n        const RightIconMenu = () => (\r\n            <IconMenu iconButtonElement={iconButtonElement}>\r\n                <MenuItem style={{ fontSize: \"14px\" }}>Reply</MenuItem>\r\n                <MenuItem style={{ fontSize: \"14px\" }}>Edit</MenuItem>\r\n                <MenuItem style={{ fontSize: \"14px\" }}>Delete</MenuItem>\r\n            </IconMenu>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                {/* Edit profile dialog */}\r\n                <Dialog\r\n                    id='Edit-Profile'\r\n                    modal={false}\r\n                    open={this.props.open}\r\n                    onRequestClose={this.props.onRequestClose}\r\n                    autoScrollBodyContent={true}\r\n                    bodyStyle={{ backgroundColor: \"none\", padding: 'none', borderTop: 'none', borderBottom: 'none' }}\r\n                    overlayStyle={{ background: \"rgba(0,0,0,0.12)\" }}\r\n                    contentStyle={{ backgroundColor: \"none\", maxWidth: '450px', maxHeight: 'none', height: '100%' }}\r\n                    style={{ backgroundColor: \"none\", maxHeight: 'none', height: '100%' }}\r\n                >\r\n                    {/* Banner */}\r\n                    <div style={{ position: 'relative' }}>\r\n                        <ImgCover width='100%' height='250px' borderRadius='2px' fileName={this.state.banner} />\r\n                        <div className='g__circle-black' onClick={this.handleOpenBannerGallery} style={{ position: 'absolute', right: '10px', top: '10px' }}>\r\n                            <SvgCamera style={{ fill: 'rgba(255, 255, 255, 0.88)', transform: 'translate(6px, 6px)' }} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='profile__edit'>\r\n                        <EventListener\r\n                            target=\"window\"\r\n                            onResize={this.handleResize}\r\n                        />\r\n                        <div className='left'>\r\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                {/* Avatar */}\r\n                                <div className='g__circle-black' onClick={this.handleOpenAvatarGallery} style={{ position: 'absolute', left: '50%', display: 'inline-block', top: '52px', margin: '-18px' }}>\r\n                                    <SvgCamera style={{ fill: 'rgba(255, 255, 255, 0.88)', transform: 'translate(6px, 6px)' }} />\r\n                                </div>\r\n                                <UserAvatar fullName={(this.props.info ? this.props.info.fullName : '')} fileName={this.state.avatar} size={90} style={styles.avatar} />\r\n                            </div>\r\n                            <div className='info'>\r\n                                <div className='fullName'>\r\n                                    {this.props.fullName}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Edit user information box*/}\r\n                    <Paper style={styles.paper} zDepth={1}>\r\n                        <div style={styles.title}>Personal Information</div>\r\n                        <div style={styles.box}>\r\n                            <TextField\r\n                                floatingLabelText=\"Full name\"\r\n                                onChange={this.handleInputChange}\r\n                                name='fullNameInput'\r\n                                errorText={this.state.fullNameInputError}\r\n                                value={this.state.fullNameInput}\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                        <div style={styles.box}>\r\n                            <TextField\r\n                                floatingLabelText=\"Tag Line\"\r\n                                onChange={this.handleInputChange}\r\n                                name='tagLineInput'\r\n                                value={this.state.tagLineInput}\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                        <div style={styles.actions}>\r\n                            <FlatButton label=\"CANCEL\" onClick={this.props.onRequestClose} />\r\n                            <RaisedButton label=\"UPDATE\" primary={true} onClick={this.handleUpdate} style={styles.updateButton} />\r\n                        </div>\r\n                    </Paper>\r\n                    <div style={{ height: '16px' }}></div>\r\n                </Dialog>\r\n\r\n                {/* Image gallery for banner*/}\r\n                <Dialog\r\n                    title={<DialogTitle title='Choose an banner image' onRequestClose={this.handleCloseBannerGallery} />}\r\n                    modal={false}\r\n                    open={this.state.openBanner}\r\n                    contentStyle={styles.dialogGallery}\r\n                    onRequestClose={this.handleCloseBannerGallery}\r\n                    overlayStyle={{ background: \"rgba(0,0,0,0.12)\" }}\r\n                    autoDetectWindowHeight={false}\r\n\r\n                >\r\n                    <ImageGallery set={this.handleRequestSetBanner} close={this.handleCloseBannerGallery} />\r\n                </Dialog>\r\n\r\n                {/* Image gallery for avatar */}\r\n                <Dialog\r\n                    title={<DialogTitle title='Choose an avatar image' onRequestClose={this.handleCloseAvatarGallery} />}\r\n                    modal={false}\r\n                    open={this.state.openAvatar}\r\n                    contentStyle={styles.dialogGallery}\r\n                    onRequestClose={this.handleCloseAvatarGallery}\r\n                    overlayStyle={{ background: \"rgba(0,0,0,0.12)\" }}\r\n                    autoDetectWindowHeight={false}\r\n                >\r\n                    <ImageGallery set={this.handleRequestSetAvatar} close={this.handleCloseAvatarGallery} />\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        update: (info) => dispatch(userActions.dbUpdateUserInfo(info)),\r\n        onRequestClose: () => dispatch(userActions.closeEditProfile())\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        open: state.user.openEditProfile,\r\n        info: state.user.info[state.authorize.uid],\r\n        avatarURL: state.imageGallery.imageURLList\r\n\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile)",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/EditProfile.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 256,
    "kind": "class",
    "name": "EditProfile",
    "memberof": "app/components/EditProfile.jsx",
    "static": true,
    "longname": "app/components/EditProfile.jsx~EditProfile",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/EditProfile.jsx",
    "importStyle": "{EditProfile}",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 257,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/components/EditProfile.jsx~EditProfile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/EditProfile.jsx~EditProfile#constructor",
    "access": "public",
    "description": "Component constructor",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "is an object properties of component"
      }
    ]
  },
  {
    "__docId__": 258,
    "kind": "member",
    "name": "state",
    "memberof": "app/components/EditProfile.jsx~EditProfile",
    "static": false,
    "longname": "app/components/EditProfile.jsx~EditProfile#state",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "{\"isSmall\": *, \"tagLineInput\": *, \"fullNameInput\": *, \"fullNameInputError\": *, \"banner\": *, \"avatar\": *, \"openBanner\": *, \"openAvatar\": *}"
      ]
    }
  },
  {
    "__docId__": 259,
    "kind": "member",
    "name": "handleCloseBannerGallery",
    "memberof": "app/components/EditProfile.jsx~EditProfile",
    "static": false,
    "longname": "app/components/EditProfile.jsx~EditProfile#handleCloseBannerGallery",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 260,
    "kind": "member",
    "name": "handleOpenBannerGallery",
    "memberof": "app/components/EditProfile.jsx~EditProfile",
    "static": false,
    "longname": "app/components/EditProfile.jsx~EditProfile#handleOpenBannerGallery",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 261,
    "kind": "member",
    "name": "handleCloseAvatarGallery",
    "memberof": "app/components/EditProfile.jsx~EditProfile",
    "static": false,
    "longname": "app/components/EditProfile.jsx~EditProfile#handleCloseAvatarGallery",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 262,
    "kind": "member",
    "name": "handleOpenAvatarGallery",
    "memberof": "app/components/EditProfile.jsx~EditProfile",
    "static": false,
    "longname": "app/components/EditProfile.jsx~EditProfile#handleOpenAvatarGallery",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 263,
    "kind": "member",
    "name": "handleRequestSetBanner",
    "memberof": "app/components/EditProfile.jsx~EditProfile",
    "static": false,
    "longname": "app/components/EditProfile.jsx~EditProfile#handleRequestSetBanner",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 264,
    "kind": "member",
    "name": "handleRequestSetAvatar",
    "memberof": "app/components/EditProfile.jsx~EditProfile",
    "static": false,
    "longname": "app/components/EditProfile.jsx~EditProfile#handleRequestSetAvatar",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 265,
    "kind": "member",
    "name": "handleChangeDate",
    "memberof": "app/components/EditProfile.jsx~EditProfile",
    "static": false,
    "longname": "app/components/EditProfile.jsx~EditProfile#handleChangeDate",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 266,
    "kind": "member",
    "name": "handleUpdate",
    "memberof": "app/components/EditProfile.jsx~EditProfile",
    "static": false,
    "longname": "app/components/EditProfile.jsx~EditProfile#handleUpdate",
    "access": "public",
    "description": "Update profile on the server",
    "lineNumber": 104,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 267,
    "kind": "member",
    "name": "handleInputChange",
    "memberof": "app/components/EditProfile.jsx~EditProfile",
    "static": false,
    "longname": "app/components/EditProfile.jsx~EditProfile#handleInputChange",
    "access": "public",
    "description": "Handle data on input change",
    "lineNumber": 127,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "is an event of inputs of element on change"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "member",
    "name": "handleResize",
    "memberof": "app/components/EditProfile.jsx~EditProfile",
    "static": false,
    "longname": "app/components/EditProfile.jsx~EditProfile#handleResize",
    "access": "public",
    "description": "Handle resize event for window to change sidebar status",
    "lineNumber": 138,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "is the event is passed by winodw resize event"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 269,
    "kind": "member",
    "name": "componentDidMount",
    "memberof": "app/components/EditProfile.jsx~EditProfile",
    "static": false,
    "longname": "app/components/EditProfile.jsx~EditProfile#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 151,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 270,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/EditProfile.jsx~EditProfile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/EditProfile.jsx~EditProfile#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 160,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 271,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/EditProfile.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/EditProfile.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/EditProfile.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 327,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 272,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/EditProfile.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/EditProfile.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/EditProfile.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 341,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 273,
    "kind": "file",
    "name": "app/components/FindPeople.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// - Import app components\r\nimport UserBoxList from 'UserBoxList';\r\n\r\n// - Import actions\r\nimport * as userActions from 'userActions';\r\n\r\nexport class FindPeople extends Component {\r\n    componentWillMount() {\r\n        this.props.loadPeople();\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.peopleInfo && Object.keys(this.props.peopleInfo).length !== 0 ?  \r\n                    (<div>\r\n                        <div className='profile__title'>\r\n                            Suggestions for you\r\n                        </div>\r\n                        <UserBoxList users={this.props.peopleInfo}/>\r\n                        <div style={{ height: '24px' }}></div>\r\n                    </div>) :\r\n                    \r\n                    (<div className='g__title-center'>\r\n                        Nothing to show! :(\r\n                    </div>)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        loadPeople: () => dispatch(userActions.dbGetPeopleInfo())\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        peopleInfo: state.user.info\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FindPeople)",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/FindPeople.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 274,
    "kind": "class",
    "name": "FindPeople",
    "memberof": "app/components/FindPeople.jsx",
    "static": true,
    "longname": "app/components/FindPeople.jsx~FindPeople",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/FindPeople.jsx",
    "importStyle": "{FindPeople}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 275,
    "kind": "method",
    "name": "componentWillMount",
    "memberof": "app/components/FindPeople.jsx~FindPeople",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/FindPeople.jsx~FindPeople#componentWillMount",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 276,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/FindPeople.jsx~FindPeople",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/FindPeople.jsx~FindPeople#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 19,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 277,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/FindPeople.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/FindPeople.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/FindPeople.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 278,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/FindPeople.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/FindPeople.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/FindPeople.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 279,
    "kind": "file",
    "name": "app/components/Followers.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// - Import app components\r\nimport UserBoxList from 'UserBoxList';\r\n\r\nexport class Followers extends Component {\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        return (\r\n            <div>\r\n                {(this.props.followers && Object.keys(this.props.followers).length !== 0) ?\r\n                    (<div>\r\n                        <div className='profile__title'>\r\n                            Followers\r\n                        </div>\r\n                        <UserBoxList users={this.props.followers} />\r\n                        <div style={{ height: '24px' }}></div>\r\n                    </div>) :\r\n                    \r\n                    (<div className='g__title-center'>\r\n                        No followers!\r\n                    </div>)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { uid } = state.authorize\r\n    const circles = state.circle ? state.circle.userCircles[uid] : {}\r\n    return {\r\n        followers: circles ? (circles['-Followers'] ? circles['-Followers'].users || {} : {}) : {}\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Followers)",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/Followers.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 280,
    "kind": "class",
    "name": "Followers",
    "memberof": "app/components/Followers.jsx",
    "static": true,
    "longname": "app/components/Followers.jsx~Followers",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/Followers.jsx",
    "importStyle": "{Followers}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 281,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/Followers.jsx~Followers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Followers.jsx~Followers#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 12,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 282,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/Followers.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Followers.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Followers.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 283,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/Followers.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Followers.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Followers.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 284,
    "kind": "file",
    "name": "app/components/Following.jsx",
    "content": "// - Import react components\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// - Import app components\r\nimport UserBoxList from 'UserBoxList';\r\n\r\n// - Import API\r\nimport CircleAPI from 'CircleAPI';\r\n\r\nexport class Following extends Component {\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        return (\r\n            <div>\r\n                {(this.props.followingUsers && Object.keys(this.props.followingUsers).length !== 0) ? \r\n                    (<div>\r\n                        <div className='profile__title'>\r\n                            Following\r\n                        </div>\r\n                        <UserBoxList users={this.props.followingUsers} />\r\n                        <div style={{ height: '24px' }}></div>\r\n                    </div>) : \r\n                    \r\n                    (<div className='g__title-center'>\r\n                        No following user!\r\n                    </div>)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { uid } = state.authorize\r\n    const circles = state.circle ? state.circle.userCircles[uid] : {}\r\n    const followingUsers = CircleAPI.getFollowingUsers(circles)\r\n    return {\r\n        uid,\r\n        circles,\r\n        followingUsers,\r\n\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Following)",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/Following.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 285,
    "kind": "class",
    "name": "Following",
    "memberof": "app/components/Following.jsx",
    "static": true,
    "longname": "app/components/Following.jsx~Following",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/Following.jsx",
    "importStyle": "{Following}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 286,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/Following.jsx~Following",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Following.jsx~Following#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 17,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 287,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/Following.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Following.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Following.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 288,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/Following.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Following.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Following.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 289,
    "kind": "file",
    "name": "app/components/Home.jsx",
    "content": "import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport { Route, Switch, withRouter, Redirect, NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Menu from 'material-ui/Menu';\r\nimport MenuItem from 'material-ui/MenuItem';\r\nimport Divider from 'material-ui/Divider';\r\nimport SvgArrowLeft from 'material-ui/svg-icons/hardware/keyboard-arrow-left';\r\n\r\n// - Import app components\r\nimport Sidebar from 'Sidebar';\r\nimport Blog from 'Blog';\r\nimport HomeHeader from 'HomeHeader';\r\nimport SidebarContent from 'SidebarContent';\r\nimport SidebarMain from 'SidebarMain';\r\nimport Profile from 'Profile';\r\nimport PostPage from 'PostPage';\r\nimport People from 'People';\r\n\r\n// - Import API\r\nimport CircleAPI from 'CircleAPI';\r\n\r\n// - Import actions\r\nimport * as globalActions from 'globalActions';\r\n\r\nexport class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            sidebarOpen: () => _,\r\n            sidebarStatus: true,\r\n            sidebaOverlay: false\r\n        };\r\n    }\r\n\r\n    // handle close sidebar\r\n    handleCloseSidebar = () => {\r\n        this.state.sidebarOpen(false, 'overlay');\r\n    }\r\n\r\n    /**\r\n     * Change sidebar overlay status\r\n     * @param  {boolean} status if is true, the sidebar is on overlay status\r\n     */\r\n    sidebarOverlay = (status) => {\r\n        this.setState({ sidebarOverlay: status });\r\n    }\r\n\r\n\r\n    /**\r\n     * Pass function to change sidebar status\r\n     * @param  {boolean} open  is a function callback to change sidebar status out of sidebar component\r\n     */\r\n    sidebar = (open) => {\r\n        this.setState({ sidebarOpen: open });\r\n    }\r\n\r\n\r\n    /**\r\n     * Change sidebar status if is open or not\r\n     * @param  {boolean} status is true, if the sidebar is open\r\n     */\r\n    sidebarStatus = (status) => {\r\n        this.setState({ sidebarStatus: status });\r\n    }\r\n\r\n    /**\r\n     * Render DOM component\r\n     * \r\n     * @returns DOM\r\n     * \r\n     * @memberof Home\r\n     */\r\n    render() {\r\n        return (\r\n            <div id=\"home\">\r\n                <HomeHeader sidebar={this.state.sidebarOpen} sidebarStatus={this.state.sidebarStatus} uid={this.props.uid} />\r\n                <Sidebar overlay={this.sidebarOverlay} open={this.sidebar} status={this.sidebarStatus}>\r\n                    {/* <SidebarContent>\r\n                        <Menu style={{ color: \"rgb(117, 117, 117)\", width: '210px' }}>\r\n                            {this.state.sidebarOverlay\r\n                                ? <div><MenuItem onClick={this.handleCloseSidebar} primaryText={<span style={{ color: \"rgb(117, 117, 117)\" }} className=\"sidebar__title\">Green</span>} rightIcon={<SvgArrowLeft viewBox=\"0 3 24 24\" style={{ color: \"#fff\", marginLeft: \"15px\", width: \"32px\", height: \"32px\", cursor: \"pointer\" }} />} /><Divider /></div>\r\n                                : \"\"\r\n                            }\r\n                        </Menu>\r\n                    </SidebarContent> */}\r\n\r\n                    <SidebarMain>\r\n                        <Switch>\r\n                            <Route path=\"/people/:tab?\" render={() => {\r\n                                return (\r\n                                    this.props.authed\r\n                                        ? <People />\r\n                                        : <Redirect to=\"/login\" />\r\n                                )\r\n                            }} />\r\n                            <Route path=\"/tag/:tag\" render={({ match }) => {\r\n\r\n                                return (\r\n                                    this.props.authed\r\n                                        ? <div className=\"blog\"><Blog displayWriting={false} homeTitle={`#${match.params.tag}`} posts={this.props.mergedPosts} /></div>\r\n                                        : <Redirect to=\"/login\" />\r\n                                )\r\n                            }} />\r\n                            <Route path=\"/:userId/posts/:postId/:tag?\" component={PostPage} />\r\n                            <Route path=\"/:userId\" component={Profile} />\r\n\r\n                            <Route path=\"/\" render={() => {\r\n\r\n                                return (\r\n                                    this.props.authed\r\n                                        ? <div className=\"blog\"><Blog homeTitle='Home' posts={this.props.mergedPosts} displayWriting={true} /></div>\r\n                                        : <Redirect to=\"/login\" />\r\n                                )\r\n                            }} />\r\n                        </Switch>\r\n                    </SidebarMain>\r\n                </Sidebar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { uid } = state.authorize\r\n    let mergedPosts = {}\r\n    const circles = state.circle ? (state.circle.userCircles[uid] || {}) : {}\r\n    const followingUsers = CircleAPI.getFollowingUsers(circles)\r\n    const posts = state.post.userPosts ? state.post.userPosts[state.authorize.uid] : {}\r\n    Object.keys(followingUsers).forEach((userId) => {\r\n        let newPosts = state.post.userPosts ? state.post.userPosts[userId] : {}\r\n        _.merge(mergedPosts, newPosts)\r\n    })\r\n    _.merge(mergedPosts, posts)\r\n    return {\r\n        authed: state.authorize.authed,\r\n        mainStyle: state.global.sidebarMainStyle,\r\n        mergedPosts\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home))\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/Home.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 290,
    "kind": "class",
    "name": "Home",
    "memberof": "app/components/Home.jsx",
    "static": true,
    "longname": "app/components/Home.jsx~Home",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/Home.jsx",
    "importStyle": "{Home}",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 291,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/components/Home.jsx~Home",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Home.jsx~Home#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 292,
    "kind": "member",
    "name": "state",
    "memberof": "app/components/Home.jsx~Home",
    "static": false,
    "longname": "app/components/Home.jsx~Home#state",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "{\"sidebarOpen\": *, \"sidebarStatus\": boolean, \"sidebaOverlay\": *}"
      ]
    }
  },
  {
    "__docId__": 293,
    "kind": "member",
    "name": "handleCloseSidebar",
    "memberof": "app/components/Home.jsx~Home",
    "static": false,
    "longname": "app/components/Home.jsx~Home#handleCloseSidebar",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 294,
    "kind": "member",
    "name": "sidebarOverlay",
    "memberof": "app/components/Home.jsx~Home",
    "static": false,
    "longname": "app/components/Home.jsx~Home#sidebarOverlay",
    "access": "public",
    "description": "Change sidebar overlay status",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "status",
        "description": "if is true, the sidebar is on overlay status"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 295,
    "kind": "member",
    "name": "sidebar",
    "memberof": "app/components/Home.jsx~Home",
    "static": false,
    "longname": "app/components/Home.jsx~Home#sidebar",
    "access": "public",
    "description": "Pass function to change sidebar status",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "open",
        "description": "is a function callback to change sidebar status out of sidebar component"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 296,
    "kind": "member",
    "name": "sidebarStatus",
    "memberof": "app/components/Home.jsx~Home",
    "static": false,
    "longname": "app/components/Home.jsx~Home#sidebarStatus",
    "access": "public",
    "description": "Change sidebar status if is open or not",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "status",
        "description": "is true, if the sidebar is open"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 297,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/Home.jsx~Home",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Home.jsx~Home#render",
    "access": "public",
    "description": "Render DOM component",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "DOM"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "DOM"
    },
    "params": []
  },
  {
    "__docId__": 298,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/Home.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Home.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Home.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 131,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 299,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/Home.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Home.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Home.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 144,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 300,
    "kind": "file",
    "name": "app/components/HomeHeader.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { push } from 'react-router-redux';\r\nimport SvgDehaze from 'material-ui/svg-icons/image/dehaze';\r\nimport { blue500 } from 'material-ui/styles/colors';\r\nimport { Toolbar, ToolbarGroup, ToolbarTitle } from 'material-ui/Toolbar';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nimport Popover, { PopoverAnimationVertical } from 'material-ui/Popover';\r\nimport Menu from 'material-ui/Menu';\r\nimport MenuItem from 'material-ui/MenuItem';\r\nimport NotificationsIcon from 'material-ui/svg-icons/social/notifications';\r\nimport SvgHome from 'material-ui/svg-icons/action/home';\r\nimport SvgPeople from 'material-ui/svg-icons/social/people';\r\nimport EventListener, { withOptions } from 'react-event-listener';\r\n\r\n// - Import components\r\nimport UserAvatar from 'UserAvatar';\r\nimport Notify from 'Notify';\r\n\r\n// - Import actions\r\nimport * as globalActions from 'globalActions';\r\nimport * as authorizeActions from 'authorizeActions';\r\n\r\nexport class HomeHeader extends Component {\r\n\r\n    /**\r\n     * Component constructor\r\n     * @param  {object} props is an object properties of component\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // User avatar popover is open if true\r\n            openAvatarMenu: false,\r\n\r\n            // Show header title or not (true/false)\r\n            showTitle: true,\r\n            \r\n            // If true notification menu will be open\r\n            openNotifyMenu: false\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Handle close notification menu \r\n     * \r\n     * @memberof HomeHeader\r\n     */\r\n    handleCloseNotify = () => {\r\n        this.setState({ openNotifyMenu: false });\r\n    }\r\n\r\n\r\n    // On click toggle sidebar\r\n    onToggleSidebar = () => {\r\n        if (this.props.sidebarStatus) {\r\n            this.props.sidebar(false);\r\n        } \r\n        \r\n        else {\r\n            this.props.sidebar(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle notification touch \r\n     * \r\n     * @memberof HomeHeader\r\n     */\r\n    handleNotifyTouchTap = (event) => {\r\n        // This prevents ghost click.\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            openNotifyMenu: true,\r\n            anchorEl: event.currentTarget\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handle touch on user avatar for popover\r\n     * \r\n     * @memberof HomeHeader\r\n     */\r\n    handleAvatarTouchTap = (event) => {\r\n        // This prevents ghost click.\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            openAvatarMenu: true,\r\n            anchorEl: event.currentTarget\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handle logout user\r\n     * \r\n     * @memberof HomeHeader\r\n     */\r\n    handleLogout = () => {\r\n        this.props.logout();\r\n    }\r\n\r\n    /**\r\n     * Handle close popover\r\n     * \r\n     * @memberof HomeHeader\r\n     */\r\n    handleRequestClose = () => {\r\n        this.setState({ openAvatarMenu: false });\r\n    };\r\n\r\n\r\n    /**\r\n     * Handle resize event for window to manipulate home header status\r\n     * @param  {event} evt is the event is passed by winodw resize event\r\n     */\r\n    handleResize = (evt) => {\r\n        const width = window.innerWidth;\r\n\r\n        if (width >= 600 && !this.state.showTitle) {\r\n            this.setState({ showTitle: true });\r\n        }\r\n\r\n        else if (width < 600 && this.state.showTitle) {\r\n            this.setState({ showTitle: false });\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.handleResize();\r\n    }\r\n\r\n    render() {\r\n        const styles = {\r\n            toolbarStyle: {\r\n                backgroundColor: \"#5574F7\",\r\n                transition: \"all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms\",\r\n                boxSizing: \"border-box\",\r\n                fontFamily: \"Roboto, sans-serif\",\r\n                position: \"fixed\",\r\n                zIndex: \"1101\",\r\n                width: \"100%\",\r\n                top: \"0px\",\r\n                boxShadow: '0 1px 8px rgba(0,0,0,.3)'\r\n            },\r\n            avatarStyle: {\r\n                margin: 5,\r\n                cursor: 'pointer'\r\n            }\r\n        };\r\n\r\n        return (\r\n            <Toolbar style={styles.toolbarStyle}>\r\n                <EventListener\r\n                    target=\"window\"\r\n                    onResize={this.handleResize}\r\n                    onKeyUp={this.handleKeyUp}\r\n                />\r\n\r\n                {/* Left side */}\r\n                <ToolbarGroup firstChild={true}>\r\n\r\n                    {/* <IconButton iconStyle={{ color: \"#fff\" }} onClick={this.onToggleSidebar} >\r\n                        <SvgDehaze style={{ color: \"#fff\", marginLeft: \"15px\", cursor: \"pointer\" }} />\r\n                    </IconButton> */}\r\n\r\n                    <div style={{ marginLeft: '30px' }}>\r\n                        <FlatButton onClick={this.props.homePage} style={{color: \"#fff\"}}>\r\n                            <SvgHome  style={{color: \"#fff\", position: \"absolute\", top: \"4px\", left: \"0px\"}}/>\r\n                            <div style={{display: \"inline-block\", textTransform: \"uppercase\", fontWeight: \"500\", fontSize: \"14px\", paddingLeft: \"24px\"}}>home</div>\r\n                        </FlatButton>\r\n                    </div>\r\n\r\n                    {/* <div style={{ marginLeft: '15px' }}>\r\n                        <svg width=\"21\" height=\"17\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.97 11.151L1.017 8.117c-.308-.184-.292-.437.048-.57L19.547.16c.334-.132.72-.301.647.043l-3.42 16.618s.513.304.204.12l-6.272-3.034-2.797 2.417-1.94-5.173zm1.293-.878l1.145 3.64c.078.25.198.251.26-.02l.534-2.327 8.357-8.74c.384-.4.333-.457-.113-.125L7.263 10.273z\" fill=\"#FFF\" /></svg>\r\n                    </div>\r\n                    <ToolbarTitle style={{ color: \"#fff\", marginLeft: \"15px\" }} text=\"Oasis\" /> */}\r\n                </ToolbarGroup>\r\n                {/* <ToolbarGroup>\r\n                    <div>\r\n                        <FlatButton onClick={this.props.homePage} style={{color: \"#fff\"}}>\r\n                            <SvgHome  style={{color: \"#fff\", position: \"absolute\", top: \"4px\", left: \"0px\"}}/>\r\n                            <div style={{display: \"inline-block\", textTransform: \"uppercase\", fontWeight: \"500\", fontSize: \"14px\", paddingLeft: \"24px\"}}>home</div>\r\n                        </FlatButton>\r\n                    </div>\r\n                </ToolbarGroup> */}\r\n                <ToolbarGroup>\r\n                    <div>\r\n                        <FlatButton onClick={this.props.people} style={{color: \"#fff\"}}>\r\n                            <SvgPeople  style={{color: \"#fff\", position: \"absolute\", top: \"4px\", left: \"0px\"}}/>\r\n                            <div style={{display: \"inline-block\", textTransform: \"uppercase\", fontWeight: \"500\", fontSize: \"14px\", paddingLeft: \"36px\"}}>people</div>\r\n                        </FlatButton>\r\n                    </div>\r\n                </ToolbarGroup>\r\n\r\n                <ToolbarGroup lastChild={true}>\r\n                    <div className=\"homeHeader__right\">\r\n                        {this.props.notifyCount > 0 ? (<IconButton tooltip=\"Notifications\" onTouchTap={this.handleNotifyTouchTap}>\r\n                            <div className=\"homeHeader__notify\">\r\n                                <div className='title'>{this.props.notifyCount}</div>\r\n                            </div>\r\n                        </IconButton>)\r\n\r\n                            : (<IconButton tooltip=\"Notifications\" onTouchTap={this.handleNotifyTouchTap}>\r\n                                <NotificationsIcon color='rgba(255, 255, 255, 0.87)' />\r\n                            </IconButton>)}\r\n                        <Notify open={this.state.openNotifyMenu} anchorEl={this.state.anchorEl} onRequestClose={this.handleCloseNotify} />\r\n\r\n                        {/* User avatar*/}\r\n                        <UserAvatar\r\n                            onTouchTap={this.handleAvatarTouchTap}\r\n                            fullName={this.props.fullName}\r\n                            fileName={this.props.avatar}\r\n                            size={32}\r\n                            style={styles.avatarStyle}\r\n                        />\r\n                        <Popover\r\n                            open={this.state.openAvatarMenu}\r\n                            anchorEl={this.state.anchorEl}\r\n                            anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\r\n                            targetOrigin={{ horizontal: 'left', vertical: 'top' }}\r\n                            onRequestClose={this.handleRequestClose}\r\n                        >\r\n                            <Menu>\r\n                                <NavLink to={`/${this.props.uid}`}><MenuItem primaryText=\"Profile\" style={{ color: blue500 }} /></NavLink>\r\n                                <NavLink to='/settings'><MenuItem primaryText=\"Settings\" style={{ color: \"rgb(117, 117, 117)\" }} /></NavLink>\r\n                                <MenuItem primaryText=\"Log Out\" style={{ color: 'red' }} onClick={this.handleLogout.bind(this)} />\r\n                            </Menu>\r\n                        </Popover>\r\n                    </div>\r\n                </ToolbarGroup>\r\n            </Toolbar>\r\n        )\r\n    }\r\n}\r\n\r\n// - Map dispatch to props\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        logout: () => {\r\n            dispatch(authorizeActions.dbLogout());\r\n        },\r\n        homePage: () => {\r\n            dispatch(push(\"/\"));\r\n        },\r\n        people: () => {\r\n            dispatch(push(\"/people\"));\r\n        }\r\n    }\r\n}\r\n\r\n// - Map state to props\r\nconst mapStateToProps = (state, ownProps) => {\r\n\r\n    let notifyCount = state.notify.userNotifies\r\n        ? Object\r\n            .keys(state.notify.userNotifies)\r\n            .filter((key) => !state.notify.userNotifies[key].isSeen).length\r\n        : 0\r\n    return {\r\n        avatar: state.user.info && state.user.info[state.authorize.uid] ? state.user.info[state.authorize.uid].avatar : '',\r\n        fullName: state.user.info && state.user.info[state.authorize.uid] ? state.user.info[state.authorize.uid].fullName : '',\r\n        title: state.global.headerTitle,\r\n        notifyCount\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeHeader)\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/HomeHeader.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 301,
    "kind": "class",
    "name": "HomeHeader",
    "memberof": "app/components/HomeHeader.jsx",
    "static": true,
    "longname": "app/components/HomeHeader.jsx~HomeHeader",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/HomeHeader.jsx",
    "importStyle": "{HomeHeader}",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 302,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/components/HomeHeader.jsx~HomeHeader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/HomeHeader.jsx~HomeHeader#constructor",
    "access": "public",
    "description": "Component constructor",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "is an object properties of component"
      }
    ]
  },
  {
    "__docId__": 303,
    "kind": "member",
    "name": "state",
    "memberof": "app/components/HomeHeader.jsx~HomeHeader",
    "static": false,
    "longname": "app/components/HomeHeader.jsx~HomeHeader#state",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "{\"openAvatarMenu\": *, \"showTitle\": boolean, \"openNotifyMenu\": *}"
      ]
    }
  },
  {
    "__docId__": 304,
    "kind": "member",
    "name": "handleCloseNotify",
    "memberof": "app/components/HomeHeader.jsx~HomeHeader",
    "static": false,
    "longname": "app/components/HomeHeader.jsx~HomeHeader#handleCloseNotify",
    "access": "public",
    "description": "Handle close notification menu ",
    "lineNumber": 52,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 305,
    "kind": "member",
    "name": "onToggleSidebar",
    "memberof": "app/components/HomeHeader.jsx~HomeHeader",
    "static": false,
    "longname": "app/components/HomeHeader.jsx~HomeHeader#onToggleSidebar",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 306,
    "kind": "member",
    "name": "handleNotifyTouchTap",
    "memberof": "app/components/HomeHeader.jsx~HomeHeader",
    "static": false,
    "longname": "app/components/HomeHeader.jsx~HomeHeader#handleNotifyTouchTap",
    "access": "public",
    "description": "Handle notification touch ",
    "lineNumber": 73,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 307,
    "kind": "member",
    "name": "handleAvatarTouchTap",
    "memberof": "app/components/HomeHeader.jsx~HomeHeader",
    "static": false,
    "longname": "app/components/HomeHeader.jsx~HomeHeader#handleAvatarTouchTap",
    "access": "public",
    "description": "Handle touch on user avatar for popover",
    "lineNumber": 88,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 308,
    "kind": "member",
    "name": "handleLogout",
    "memberof": "app/components/HomeHeader.jsx~HomeHeader",
    "static": false,
    "longname": "app/components/HomeHeader.jsx~HomeHeader#handleLogout",
    "access": "public",
    "description": "Handle logout user",
    "lineNumber": 103,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 309,
    "kind": "member",
    "name": "handleRequestClose",
    "memberof": "app/components/HomeHeader.jsx~HomeHeader",
    "static": false,
    "longname": "app/components/HomeHeader.jsx~HomeHeader#handleRequestClose",
    "access": "public",
    "description": "Handle close popover",
    "lineNumber": 112,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 310,
    "kind": "member",
    "name": "handleResize",
    "memberof": "app/components/HomeHeader.jsx~HomeHeader",
    "static": false,
    "longname": "app/components/HomeHeader.jsx~HomeHeader#handleResize",
    "access": "public",
    "description": "Handle resize event for window to manipulate home header status",
    "lineNumber": 121,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "is the event is passed by winodw resize event"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 311,
    "kind": "member",
    "name": "componentDidMount",
    "memberof": "app/components/HomeHeader.jsx~HomeHeader",
    "static": false,
    "longname": "app/components/HomeHeader.jsx~HomeHeader#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 133,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 312,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/HomeHeader.jsx~HomeHeader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/HomeHeader.jsx~HomeHeader#render",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 313,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/HomeHeader.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/HomeHeader.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/HomeHeader.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 242,
    "undocument": true,
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      },
      {
        "name": "ownProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"logout\": *, \"homePage\": *, \"people\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 314,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/HomeHeader.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/HomeHeader.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/HomeHeader.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 257,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "ownProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"avatar\": *, \"fullName\": *, \"title\": *, \"notifyCount\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 315,
    "kind": "file",
    "name": "app/components/ImageGallery.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { GridList, GridTile } from 'material-ui/GridList';\r\nimport SvgAddImage from 'material-ui/svg-icons/image/add-a-photo';\r\nimport SvgDelete from 'material-ui/svg-icons/action/delete';\r\nimport { grey200 } from 'material-ui/styles/colors';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nimport uuid from 'uuid';\r\n\r\n// - Import actions\r\nimport * as imageGalleryActions from 'imageGalleryActions';\r\nimport * as globalActions from 'globalActions';\r\n\r\n// - Import app components\r\nimport Img from 'Img';\r\n\r\n// - Import API\r\nimport FileAPI from 'FileAPI';\r\n\r\nexport class ImageGallery extends Component {\r\n\r\n    /**\r\n     * Handle set image\r\n     * @param  {event} evt  passed by on click event on add image\r\n     * @param  {string} name is the name of the image\r\n     */\r\n    handleSetImage = (evt, URL, fullPath) => {\r\n        this.props.set(URL, fullPath);\r\n        this.close();\r\n    }\r\n\r\n    /**\r\n     * Handle delete image\r\n     * @param  {event} evt  passed by on click event on delete image\r\n     * @param  {integer} id is the image identifier which selected to delete\r\n     */\r\n    handleDeleteImage = (evt, id) => {\r\n        this.props.deleteImage(id);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"onSendResizedImage\", this.handleSendResizedImage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"onSendResizedImage\", this.handleSendResizedImage);\r\n    }\r\n\r\n    /**\r\n     * Handle send image resize event that pass the resized image\r\n     * \r\n     * @memberof ImageGallery\r\n     */\r\n    handleSendResizedImage = (event) => {\r\n        const { resizedImage, fileName } = event.detail;\r\n\r\n        FileAPI.uploadImage(resizedImage, fileName, (percent, status) => {\r\n            this.props.progressChange(percent, status);\r\n        }).then((result) => {\r\n            /* Add image to image gallery */\r\n            this.props.saveImageGallery(result.downloadURL, result.metadata.fullPath);\r\n        });\r\n    }\r\n\r\n    // Handle on change file upload\r\n    onFileChange = (evt) => {\r\n        const extension = FileAPI.getExtension(evt.target.files[0].name);\r\n        const fileName = (`${uuid()}.${extension}`);\r\n        const image = FileAPI.constraintImage(evt.target.files[0], fileName);\r\n    }\r\n\r\n    // Hide image gallery\r\n    close = () => {\r\n        this.props.close();\r\n    }\r\n\r\n    imageList = () => {\r\n        return this.props.images.map((image, index) => {\r\n            return (<GridTile\r\n                key={image.id}\r\n                title={<SvgDelete hoverColor={grey200} color=\"white\" color=\"white\" style={{ marginLeft: \"5px\", cursor: \"pointer\" }} onClick={evt => this.handleDeleteImage(evt, image.id)} />}\r\n                subtitle={<span></span>}\r\n                actionIcon={<SvgAddImage hoverColor={grey200} color=\"white\" style={{ marginRight: \"5px\", cursor: \"pointer\" }} onClick={evt => this.handleSetImage(evt, image.URL, image.fullPath)} />}\r\n            >\r\n                <div>\r\n                    <div style={{ overflowY: \"hidden\", overflowX: \"auto\" }}>\r\n                        <ul style={{ whiteSpace: \"nowrap\", padding: \"0 6px\", margin: \"8px 0 0 0\", verticalAlign: \"bottom\", flexShrink: 0, listStyleType: \"none\" }}>\r\n                            <div style={{ display: \"block\" }}>\r\n                                <div style={{ display: \"block\", marginRight: \"8px\", transition: \"transform .25s\" }}>\r\n                                    <li style={{ width: \"100%\", margin: 0, verticalAlign: \"bottom\", position: \"static\", display: \"inline-block\" }}>\r\n                                        <Img fileName={image.URL} style={{ width: \"100%\", height: \"auto\" }} />\r\n\r\n                                    </li>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </GridTile>)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * When the post text changed\r\n     * @param  {event} evt is an event passed by change post text callback funciton\r\n     * @param  {string} data is the post content which user writes\r\n     */\r\n    render() {\r\n        /**\r\n         * Component styles\r\n         * @type {Object}\r\n         */\r\n        const styles = {\r\n            root: {\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-around'\r\n            },\r\n            gridList: {\r\n                width: 500,\r\n                height: 450,\r\n                overflowY: 'auto'\r\n            },\r\n            uploadButton: {\r\n                verticalAlign: 'middle'\r\n            },\r\n            uploadInput: {\r\n                cursor: 'pointer',\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                right: 0,\r\n                left: 0,\r\n                width: '100%',\r\n                opacity: 0\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div style={styles.root}>\r\n                <GridList\r\n                    cellHeight={180}\r\n                    style={styles.gridList}\r\n                >\r\n                    <GridTile >\r\n                        <div style={{ display: \"flex\", backgroundColor: \"rgba(222, 222, 222, 0.52)\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", height: \"100%\" }}>\r\n                            <FlatButton\r\n                                label=\"Upload Photo\"\r\n                                labelStyle={{ fontWeight: 100 }}\r\n                                labelPosition=\"before\"\r\n                                style={styles.uploadButton}\r\n                                containerElement=\"label\"\r\n                            >\r\n                                <input type=\"file\" onChange={this.onFileChange} accept=\"image/*\" style={styles.uploadInput} />\r\n                            </FlatButton>\r\n                        </div>\r\n                    </GridTile>\r\n                    {this.imageList()}\r\n                </GridList>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        saveImageGallery: (imageURL, imageFullPath) => dispatch(imageGalleryActions.dbSaveImage(imageURL, imageFullPath)),\r\n        deleteImage: (id) => dispatch(imageGalleryActions.dbDeleteImage(id)),\r\n        progressChange: (percent, status) => dispatch(globalActions.progressChange(percent, status))\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        images: state.imageGallery.images,\r\n        avatar: state.user.info && state.user.info[state.authorize.uid] ? state.user.info[state.authorize.uid].avatar : ''\r\n\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageGallery)\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/ImageGallery.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 316,
    "kind": "class",
    "name": "ImageGallery",
    "memberof": "app/components/ImageGallery.jsx",
    "static": true,
    "longname": "app/components/ImageGallery.jsx~ImageGallery",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/ImageGallery.jsx",
    "importStyle": "{ImageGallery}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 317,
    "kind": "member",
    "name": "handleSetImage",
    "memberof": "app/components/ImageGallery.jsx~ImageGallery",
    "static": false,
    "longname": "app/components/ImageGallery.jsx~ImageGallery#handleSetImage",
    "access": "public",
    "description": "Handle set image",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "passed by on click event on add image"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "is the name of the image"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 318,
    "kind": "member",
    "name": "handleDeleteImage",
    "memberof": "app/components/ImageGallery.jsx~ImageGallery",
    "static": false,
    "longname": "app/components/ImageGallery.jsx~ImageGallery#handleDeleteImage",
    "access": "public",
    "description": "Handle delete image",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "passed by on click event on delete image"
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "is the image identifier which selected to delete"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 319,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "app/components/ImageGallery.jsx~ImageGallery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/ImageGallery.jsx~ImageGallery#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 320,
    "kind": "method",
    "name": "componentWillUnmount",
    "memberof": "app/components/ImageGallery.jsx~ImageGallery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/ImageGallery.jsx~ImageGallery#componentWillUnmount",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 321,
    "kind": "member",
    "name": "handleSendResizedImage",
    "memberof": "app/components/ImageGallery.jsx~ImageGallery",
    "static": false,
    "longname": "app/components/ImageGallery.jsx~ImageGallery#handleSendResizedImage",
    "access": "public",
    "description": "Handle send image resize event that pass the resized image",
    "lineNumber": 54,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 322,
    "kind": "member",
    "name": "onFileChange",
    "memberof": "app/components/ImageGallery.jsx~ImageGallery",
    "static": false,
    "longname": "app/components/ImageGallery.jsx~ImageGallery#onFileChange",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 323,
    "kind": "member",
    "name": "close",
    "memberof": "app/components/ImageGallery.jsx~ImageGallery",
    "static": false,
    "longname": "app/components/ImageGallery.jsx~ImageGallery#close",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 324,
    "kind": "member",
    "name": "imageList",
    "memberof": "app/components/ImageGallery.jsx~ImageGallery",
    "static": false,
    "longname": "app/components/ImageGallery.jsx~ImageGallery#imageList",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 325,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/ImageGallery.jsx~ImageGallery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/ImageGallery.jsx~ImageGallery#render",
    "access": "public",
    "description": "When the post text changed",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "is an event passed by change post text callback funciton"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "is the post content which user writes"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 326,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/ImageGallery.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/ImageGallery.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/ImageGallery.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 173,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 327,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/ImageGallery.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/ImageGallery.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/ImageGallery.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 188,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 328,
    "kind": "file",
    "name": "app/components/Img.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SvgImage from 'material-ui/svg-icons/image/image';\r\n\r\n// - Import actions\r\nimport * as imageGalleryActions from 'imageGalleryActions';\r\n\r\nexport class Img extends Component {\r\n\r\n    /**\r\n     * Component constructor\r\n     * @param  {object} props is an object properties of component\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //Defaul state\r\n        this.state = {\r\n            isImageLoaded: false\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Will be called on loading image\r\n     * \r\n     * @memberof Img\r\n     */\r\n    handleLoadImage = () => {\r\n        this.setState({ isImageLoaded: true });\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        const styles = {\r\n            loding: {\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                width: '100%',\r\n                height: '100px',\r\n                position: 'relative',\r\n                color: '#cacecd',\r\n                fontWeight: 100\r\n            },\r\n            loadingContent: {\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center'\r\n            },\r\n            loadingImage: {\r\n                fill: 'aliceblue',\r\n                width: '50px',\r\n                height: '50px'\r\n            }\r\n        };\r\n\r\n        const { fileName, style } = this.props;\r\n        const { isImageLoaded } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <img onLoad={this.handleLoadImage} src={fileName || ''} style={isImageLoaded ? style : { display: 'none' }} />\r\n                <div style={{ backgroundColor: 'blue' }} style={isImageLoaded ? { display: 'none' } : styles.loding}>\r\n                    <div style={styles.loadingContent}>\r\n                        <SvgImage style={styles.loadingImage} />\r\n                        <div>Image has not loaded</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        avatarURL: state.imageGallery.imageURLList,\r\n        imageRequests: state.imageGallery.imageRequests\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Img)\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/Img.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 329,
    "kind": "class",
    "name": "Img",
    "memberof": "app/components/Img.jsx",
    "static": true,
    "longname": "app/components/Img.jsx~Img",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/Img.jsx",
    "importStyle": "{Img}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 330,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/components/Img.jsx~Img",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Img.jsx~Img#constructor",
    "access": "public",
    "description": "Component constructor",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "is an object properties of component"
      }
    ]
  },
  {
    "__docId__": 331,
    "kind": "member",
    "name": "state",
    "memberof": "app/components/Img.jsx~Img",
    "static": false,
    "longname": "app/components/Img.jsx~Img#state",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "{\"isImageLoaded\": *}"
      ]
    }
  },
  {
    "__docId__": 332,
    "kind": "member",
    "name": "handleLoadImage",
    "memberof": "app/components/Img.jsx~Img",
    "static": false,
    "longname": "app/components/Img.jsx~Img#handleLoadImage",
    "access": "public",
    "description": "Will be called on loading image",
    "lineNumber": 28,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 333,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/Img.jsx~Img",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Img.jsx~Img#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 36,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 334,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/Img.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Img.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Img.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 335,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/Img.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Img.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Img.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 336,
    "kind": "file",
    "name": "app/components/ImgCover.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SvgImage from 'material-ui/svg-icons/image/image';\r\n\r\n// - Import actions\r\nimport * as imageGalleryActions from 'imageGalleryActions';\r\n\r\nexport class ImgCover extends Component {\r\n\r\n    /**\r\n     * Component constructor\r\n     * @param  {object} props is an object properties of component\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //Defaul state\r\n        this.state = {\r\n            isImageLoaded: false\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Will be called on loading image\r\n     * \r\n     * @memberof Img\r\n     */\r\n    handleLoadImage = () => {\r\n        this.setState({ isImageLoaded: true });\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        const { fileName, style } = this.props;\r\n        const { isImageLoaded } = this.state;\r\n\r\n        const styles = {\r\n            cover: {\r\n                backgroundImage: 'url(' + (fileName || '') + ')',\r\n                backgroundSize: 'cover',\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundPosition: 'center',\r\n                width: this.props.width,\r\n                height: this.props.height,\r\n                borderRadius: this.props.borderRadius\r\n\r\n            },\r\n            loding: {\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                width: '100%',\r\n                height: '100px',\r\n                position: 'relative',\r\n                color: '#cacecd',\r\n                fontWeight: 100\r\n            },\r\n            loadingContent: {\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center'\r\n            },\r\n            loadingImage: {\r\n                fill: 'aliceblue',\r\n                width: '50px',\r\n                height: '50px'\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <div style={Object.assign({}, styles.cover, style)}>\r\n                    {this.props.children}\r\n                </div>\r\n                <div style={{ backgroundColor: 'blue' }} style={isImageLoaded ? { display: 'none' } : styles.loding}>\r\n                    <div style={styles.loadingContent}>\r\n                        <SvgImage style={styles.loadingImage} />\r\n                        <div>Image has not loaded</div>\r\n                    </div>\r\n                </div>\r\n                <img onLoad={this.handleLoadImage} src={fileName || ''} style={{ display: 'none' }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        avatarURL: state.imageGallery.imageURLList,\r\n        imageRequests: state.imageGallery.imageRequests\r\n\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImgCover)\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/ImgCover.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 337,
    "kind": "class",
    "name": "ImgCover",
    "memberof": "app/components/ImgCover.jsx",
    "static": true,
    "longname": "app/components/ImgCover.jsx~ImgCover",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/ImgCover.jsx",
    "importStyle": "{ImgCover}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 338,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/components/ImgCover.jsx~ImgCover",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/ImgCover.jsx~ImgCover#constructor",
    "access": "public",
    "description": "Component constructor",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "is an object properties of component"
      }
    ]
  },
  {
    "__docId__": 339,
    "kind": "member",
    "name": "state",
    "memberof": "app/components/ImgCover.jsx~ImgCover",
    "static": false,
    "longname": "app/components/ImgCover.jsx~ImgCover#state",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "{\"isImageLoaded\": *}"
      ]
    }
  },
  {
    "__docId__": 340,
    "kind": "member",
    "name": "handleLoadImage",
    "memberof": "app/components/ImgCover.jsx~ImgCover",
    "static": false,
    "longname": "app/components/ImgCover.jsx~ImgCover#handleLoadImage",
    "access": "public",
    "description": "Will be called on loading image",
    "lineNumber": 28,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 341,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/ImgCover.jsx~ImgCover",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/ImgCover.jsx~ImgCover#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 36,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 342,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/ImgCover.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/ImgCover.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/ImgCover.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 98,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 343,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/ImgCover.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/ImgCover.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/ImgCover.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 344,
    "kind": "file",
    "name": "app/components/Login.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { push } from 'react-router-redux';\r\nimport TextField from 'material-ui/TextField';\r\n\r\n// - Import actions\r\nimport * as authorizeActions from 'authorizeActions';\r\n\r\nexport class Login extends Component {\r\n\r\n    /**\r\n     * Component constructor\r\n     * @param  {object} props is an object properties of component\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            emailInput: '',\r\n            emailInputError: '',\r\n            passwordInput: '',\r\n            passwordInputError: ''\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Handle data on input change\r\n     * @param  {event} event is an event of inputs of element on change\r\n     */\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n\r\n        this.setState({ [name]: target.value });\r\n\r\n        // Clear text error fields.\r\n        if (name === 'emailInput') {\r\n            this.setState({ emailInputError: '' });\r\n        }\r\n\r\n        else if (name === 'passwordInput') {\r\n            this.setState({ passwordInputError: '' });\r\n        }\r\n    }\r\n\r\n    handleForm = () => {\r\n        if (this.state.emailInput === '') {\r\n            this.setState({ emailInputError: 'This field is required' });\r\n        }\r\n\r\n        else if (this.state.passwordInput === '') {\r\n            this.setState({ passwordInputError: 'This field is required' });\r\n        }\r\n\r\n        else {\r\n            this.props.login(this.state.emailInput, this.state.passwordInput);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        return (\r\n            <form style={{height: '100vh', width: '100vw', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                <div style={{backgroundColor: 'white', width: '450px', textAlign: 'center', borderRadius: '10px'}}>\r\n                    <h1>Sign in</h1>\r\n\r\n                    <TextField\r\n                        onChange={this.handleInputChange}\r\n                        errorText={this.state.emailInputError}\r\n                        name=\"emailInput\"\r\n                        floatingLabelStyle={{ fontSize: \"15px\" }}\r\n                        floatingLabelText=\"Email\"\r\n                        type=\"email\"\r\n                    />\r\n\r\n                    <br />\r\n\r\n                    <TextField\r\n                        onChange={this.handleInputChange}\r\n                        errorText={this.state.passwordInputError}\r\n                        name=\"passwordInput\"\r\n                        floatingLabelStyle={{ fontSize: \"15px\" }}\r\n                        floatingLabelText=\"Password\"\r\n                        type=\"password\"\r\n                    />\r\n\r\n                    <br />\r\n                    <br />\r\n\r\n                    <div style={{display: 'flex', width: '100%', flexDirection: 'column'}}>\r\n                        <div style={{display: 'flex', outline: 'none', cursor: 'pointer', alignItems: 'center', justifyContent: 'center', height: '50px', backgroundColor: 'white', color: 'black', marginRight: '25px'}} label=\"Create an account\" onClick={this.props.signupPage}>\r\n                            <svg style={{marginRight: '10px'}} width=\"15\" height=\"15\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8 8a4 4 0 1 1 0-8 4 4 0 0 1 0 8zm6.847 7H.16c-1.062-3.357 3.341-6 7.255-6 3.913 0 8.483 2.662 7.43 6z\" fill=\"#A2A2A2\"/></svg>\r\n                            Create an account\r\n                        </div>\r\n                        <div style={{display: 'flex', outline: 'none', cursor: 'pointer', alignItems: 'center', justifyContent: 'center', height: '50px', backgroundColor: '#9013FE', color: 'white', borderRadius: '0 0 10px 10px'}} label=\"Login\" onClick={this.handleForm}>Login</div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        login: (username, password) => {\r\n            dispatch(authorizeActions.dbLogin(username, password))\r\n        },\r\n        signupPage: () => {\r\n            dispatch(push(\"/signup\"))\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login))\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/Login.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 345,
    "kind": "class",
    "name": "Login",
    "memberof": "app/components/Login.jsx",
    "static": true,
    "longname": "app/components/Login.jsx~Login",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/Login.jsx",
    "importStyle": "{Login}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 346,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/components/Login.jsx~Login",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Login.jsx~Login#constructor",
    "access": "public",
    "description": "Component constructor",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "is an object properties of component"
      }
    ]
  },
  {
    "__docId__": 347,
    "kind": "member",
    "name": "state",
    "memberof": "app/components/Login.jsx~Login",
    "static": false,
    "longname": "app/components/Login.jsx~Login#state",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "{\"emailInput\": *, \"emailInputError\": *, \"passwordInput\": *, \"passwordInputError\": *}"
      ]
    }
  },
  {
    "__docId__": 348,
    "kind": "member",
    "name": "handleInputChange",
    "memberof": "app/components/Login.jsx~Login",
    "static": false,
    "longname": "app/components/Login.jsx~Login#handleInputChange",
    "access": "public",
    "description": "Handle data on input change",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "is an event of inputs of element on change"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 349,
    "kind": "member",
    "name": "handleForm",
    "memberof": "app/components/Login.jsx~Login",
    "static": false,
    "longname": "app/components/Login.jsx~Login#handleForm",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 350,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/Login.jsx~Login",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Login.jsx~Login#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 65,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 351,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/Login.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Login.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Login.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 352,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/Login.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Login.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Login.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 130,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 353,
    "kind": "file",
    "name": "app/components/Master.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch, NavLink, withRouter, Redirect } from 'react-router-dom';\r\nimport { firebaseAuth, firebaseRef } from 'app/firebase/';\r\nimport Snackbar from 'material-ui/Snackbar';\r\nimport LinearProgress from 'material-ui/LinearProgress';\r\n\r\n// - Import components\r\nimport Home from 'Home';\r\nimport Signup from 'Signup';\r\nimport Login from 'Login';\r\nimport Settings from 'Settings';\r\n\r\nimport MasterLoading from 'MasterLoading';\r\n\r\n// - Import API\r\nimport { PrivateRoute, PublicRoute } from 'AuthRouterAPI';\r\n\r\n// - Import actions\r\nimport * as authorizeActions from 'authorizeActions';\r\nimport * as imageGalleryActions from 'imageGalleryActions';\r\nimport * as postActions from 'postActions';\r\nimport * as commentActions from 'commentActions';\r\nimport * as voteActions from 'voteActions';\r\nimport * as userActions from 'userActions';\r\nimport * as globalActions from 'globalActions';\r\nimport * as circleActions from 'circleActions';\r\nimport * as notifyActions from 'notifyActions';\r\n\r\nexport class Master extends Component {\r\n\r\n    static isPrivate = true;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n            authed: false,\r\n            dataLoaded: false\r\n        };\r\n    }\r\n\r\n    // Handle click on message\r\n    handleMessage = (evt) => {\r\n        this.props.closeMessage();\r\n    }\r\n\r\n    // Handle loading\r\n    handleLoading = (status) => {\r\n        this.setState({\r\n            loading: status,\r\n            authed: false\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n        firebaseAuth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                this.props.login(user);\r\n                this.setState({ loading: false });\r\n\r\n                if (!this.props.global.defaultLoadDataStatus) {\r\n                    this.props.clearData();\r\n                    this.props.loadData();\r\n                    this.props.defaultDataEnable();\r\n                }\r\n            } \r\n            \r\n            else {\r\n                this.props.logout();\r\n                this.setState({ loading: false });\r\n\r\n                if (this.props.global.defaultLoadDataStatus) {\r\n                    this.props.defaultDataDisable();\r\n                    this.props.clearData();\r\n                }\r\n\r\n                this.props.loadDataGuest();\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Render app DOM component\r\n     * \r\n     * @returns \r\n     * \r\n     * @memberof Master\r\n     */\r\n    render() {\r\n        const { progress, global } = this.props;\r\n\r\n        return (\r\n            <div id=\"master\">\r\n                <div className='master__progress' style={{ display: (progress.visible ? 'block' : 'none') }}>\r\n                    <LinearProgress mode=\"determinate\" value={progress.percent} />\r\n                </div>\r\n                \r\n                <div className='master__loading animate-fading2' style={{ display: (global.showTopLoading ? 'flex' : 'none') }}>\r\n                    <div className='title'>  Loading ... </div>\r\n                </div>\r\n                \r\n                <MasterLoading activeLoading={this.state.loading || !(this.props.loaded || this.props.guest)} handleLoading={this.handleLoading} />\r\n\r\n                {(!this.state.loading && (this.props.loaded || this.props.guest))\r\n                    ? (<Switch>\r\n                        <Route path=\"/signup\" component={Signup} />\r\n                        <Route path=\"/settings\" component={Settings} />\r\n                        <Route path=\"/login\" render={() => {\r\n                            console.log('this.props.authed: ', this.props.authed, \"this.props: \", this.props)\r\n                            return (\r\n                                this.props.authed\r\n                                    ? <Redirect to=\"/\" />\r\n                                    : <Login />\r\n                            )\r\n                        }\r\n                        } />\r\n                        <Route render={() => <Home uid={this.props.uid} />} />\r\n\r\n                    </Switch>) : ''\r\n                }\r\n                <Snackbar\r\n                    open={this.props.global.messageOpen}\r\n                    message={this.props.global.message}\r\n                    autoHideDuration={4000}\r\n                    style={{ left: '1%', transform: 'none' }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// - Map dispatch to props\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n\r\n    return {\r\n        loadData: () => {\r\n            dispatch(commentActions.dbGetComments())\r\n            dispatch(imageGalleryActions.downloadForImageGallery())\r\n            dispatch(postActions.dbGetPosts())\r\n            dispatch(userActions.dbGetUserInfo())\r\n            dispatch(voteActions.dbGetVotes())\r\n            dispatch(notifyActions.dbGetNotifies())\r\n            dispatch(circleActions.dbGetCircles())\r\n\r\n        },\r\n        clearData: () => {\r\n            dispatch(imageGalleryActions.clearAllData())\r\n            dispatch(postActions.clearAllData())\r\n            dispatch(userActions.clearAllData())\r\n            dispatch(commentActions.clearAllData())\r\n            dispatch(voteActions.clearAllvotes())\r\n            dispatch(notifyActions.clearAllNotifications())\r\n            dispatch(circleActions.clearAllCircles())\r\n\r\n        },\r\n        login: (user) => {\r\n            dispatch(authorizeActions.login(user.uid))\r\n        },\r\n        logout: () => {\r\n            dispatch(authorizeActions.logout())\r\n        },\r\n        defaultDataDisable: () => {\r\n            dispatch(globalActions.defaultDataDisable())\r\n        },\r\n        defaultDataEnable: () => {\r\n            dispatch(globalActions.defaultDataEnable())\r\n        },\r\n        closeMessage: () => {\r\n            dispatch(globalActions.hideMessage())\r\n        },\r\n        loadDataGuest: () => {\r\n            dispatch(globalActions.loadDataGuest())\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param {object} state\r\n */\r\nconst mapStateToProps = ({ authorize, global, user, post, comment, imageGallery, vote, notify, circle }) => {\r\n    return {\r\n        guest: authorize.guest,\r\n        uid: authorize.uid,\r\n        authed: authorize.authed,\r\n        progress: global.progress,\r\n        global: global,\r\n        loaded: user.loaded && post.loaded && comment.loaded && imageGallery.loaded && vote.loaded && notify.loaded && circle.loaded\r\n    }\r\n\r\n}\r\n// - Connect commponent to redux store\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Master))\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/Master.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 354,
    "kind": "class",
    "name": "Master",
    "memberof": "app/components/Master.jsx",
    "static": true,
    "longname": "app/components/Master.jsx~Master",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/Master.jsx",
    "importStyle": "{Master}",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 355,
    "kind": "member",
    "name": "isPrivate",
    "memberof": "app/components/Master.jsx~Master",
    "static": true,
    "longname": "app/components/Master.jsx~Master.isPrivate",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 356,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/components/Master.jsx~Master",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Master.jsx~Master#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 357,
    "kind": "member",
    "name": "state",
    "memberof": "app/components/Master.jsx~Master",
    "static": false,
    "longname": "app/components/Master.jsx~Master#state",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "{\"loading\": boolean, \"authed\": *, \"dataLoaded\": *}"
      ]
    }
  },
  {
    "__docId__": 358,
    "kind": "member",
    "name": "handleMessage",
    "memberof": "app/components/Master.jsx~Master",
    "static": false,
    "longname": "app/components/Master.jsx~Master#handleMessage",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 359,
    "kind": "member",
    "name": "handleLoading",
    "memberof": "app/components/Master.jsx~Master",
    "static": false,
    "longname": "app/components/Master.jsx~Master#handleLoading",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 360,
    "kind": "method",
    "name": "componentWillMount",
    "memberof": "app/components/Master.jsx~Master",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Master.jsx~Master#componentWillMount",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 361,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/Master.jsx~Master",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Master.jsx~Master#render",
    "access": "public",
    "description": "Render app DOM component",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 362,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/Master.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Master.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Master.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      },
      {
        "name": "ownProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"loadData\": *, \"clearData\": *, \"login\": *, \"logout\": *, \"defaultDataDisable\": *, \"defaultDataEnable\": *, \"closeMessage\": *, \"loadDataGuest\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 363,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/Master.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Master.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Master.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 183,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"guest\": *, \"uid\": *, \"authed\": *, \"progress\": *, \"global\": *, \"loaded\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 364,
    "kind": "file",
    "name": "app/components/MasterLoading.jsx",
    "content": "import React from 'react';\r\nimport Dialog from 'material-ui/Dialog';\r\n\r\nconst MasterLoading = ({activeLoading}) => (\r\n    <Dialog\r\n        modal={true}\r\n        open={activeLoading}\r\n        autoDetectWindowHeight={true}\r\n        contentStyle={{width: '250px'}}\r\n    >\r\n        <div style={{display: 'flex', justifyContent: 'space-around'}}>\r\n            <div id=\"wave\">\r\n                <span className=\"dot\"></span>\r\n                <span className=\"dot\"></span>\r\n                <span className=\"dot\"></span>\r\n            </div>\r\n            <h1>Loading</h1>\r\n        </div>\r\n    </Dialog>\r\n);\r\n\r\nexport default MasterLoading;",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/MasterLoading.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 365,
    "kind": "function",
    "name": "MasterLoading",
    "memberof": "app/components/MasterLoading.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/MasterLoading.jsx~MasterLoading",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/MasterLoading.jsx",
    "importStyle": "MasterLoading",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"activeLoading\": *}"
        ],
        "defaultRaw": {
          "activeLoading": null
        },
        "defaultValue": "{\"activeLoading\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 366,
    "kind": "file",
    "name": "app/components/Notify.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Popover, { PopoverAnimationVertical } from 'material-ui/Popover';\r\n\r\n// - Import app components\r\nimport NotifyItem from 'NotifyItem';\r\n\r\n// - Import actions\r\nimport * as userActions from 'userActions';\r\n\r\nexport class Notify extends Component {\r\n\r\n    notifyItemList = () => {\r\n        const { notifications, info, onRequestClose } = this.props;\r\n        let parsedDOM = [];\r\n\r\n        if (notifications) {\r\n            Object.keys(notifications).forEach((key) => {\r\n                const { notifierUserId } = notifications[key];\r\n\r\n                parsedDOM.push(\r\n                    <NotifyItem\r\n                        key={key}\r\n                        description={(notifications[key] ? notifications[key].description || '' : '')}\r\n                        fullName={(info[notifierUserId] ? info[notifierUserId].fullName || '' : '')}\r\n                        avatar={(info[notifierUserId] ? info[notifierUserId].avatar || '' : '')}\r\n                        id={key}\r\n                        isSeen={(notifications[key] ? notifications[key].isSeen || false : false)}\r\n                        url={(notifications[key] ? notifications[key].url || '' : '')}\r\n                        notifierUserId={notifierUserId}\r\n                        closeNotify={onRequestClose}\r\n                    />\r\n                );\r\n            })\r\n        }\r\n\r\n        return parsedDOM;\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        const { open, anchorEl, onRequestClose } = this.props;\r\n\r\n        return (\r\n            <Popover\r\n                className='homeHeader__notify-menu'\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\r\n                targetOrigin={{ horizontal: 'left', vertical: 'top' }}\r\n                onRequestClose={onRequestClose}\r\n            >\r\n                <div className='container'>\r\n                    <div className='title'>Green </div>\r\n                    <div className='content'>\r\n                        {this.notifyItemList()}\r\n                    </div>\r\n                </div>\r\n            </Popover>\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        notifications: state.notify.userNotifies,\r\n        info: state.user.info\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notify)\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/Notify.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 367,
    "kind": "class",
    "name": "Notify",
    "memberof": "app/components/Notify.jsx",
    "static": true,
    "longname": "app/components/Notify.jsx~Notify",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/Notify.jsx",
    "importStyle": "{Notify}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 368,
    "kind": "member",
    "name": "notifyItemList",
    "memberof": "app/components/Notify.jsx~Notify",
    "static": false,
    "longname": "app/components/Notify.jsx~Notify#notifyItemList",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 369,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/Notify.jsx~Notify",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Notify.jsx~Notify#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 44,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 370,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/Notify.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Notify.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Notify.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 371,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/Notify.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Notify.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Notify.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 372,
    "kind": "file",
    "name": "app/components/NotifyItem.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { push } from 'react-router-redux';\r\nimport SvgClose from 'material-ui/svg-icons/navigation/close';\r\nimport { grey400 } from 'material-ui/styles/colors';\r\n\r\n// - Import app components\r\nimport UserAvatar from 'UserAvatar';\r\n\r\n// - Import actions\r\nimport * as notifyActions from 'notifyActions';\r\n\r\nexport class NotifyItem extends Component {\r\n\r\n    handleSeenNotify = (evt) => {\r\n        evt.preventDefault();\r\n        const { seenNotify, id, url, goTo, isSeen, closeNotify } = this.props;\r\n\r\n        if (id) {\r\n            if (!isSeen) {\r\n                seenNotify(id);\r\n            }\r\n\r\n            closeNotify();\r\n            goTo(url);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        const { description, fullName, avatar, isSeen, id, goTo,closeNotify, notifierUserId, url, deleteNotiy } = this.props;\r\n\r\n        return (\r\n            <div className='item' style={isSeen ? { opacity: 0.6 } : {}} key={id}>\r\n                <div className='avatar'>\r\n                    <NavLink\r\n                        to={`/${notifierUserId}`}\r\n                        onClick={(evt) => {\r\n                            evt.preventDefault()\r\n                            closeNotify()\r\n                            goTo(`/${notifierUserId}`)\r\n                        }}\r\n                    >\r\n                        <UserAvatar fullName={fullName} fileName={avatar} />\r\n                    </NavLink>\r\n                </div>\r\n                <div className='info'>\r\n                    <NavLink to={url} onClick={this.handleSeenNotify}>\r\n                        <div className='user-name'>\r\n                            {fullName}\r\n                        </div>\r\n                        <div className='description'>\r\n                            {description}\r\n                        </div>\r\n                    </NavLink>\r\n                </div>\r\n                <div className='close' onClick={() => deleteNotiy(id)}>\r\n                    <SvgClose hoverColor={grey400} style={{ cursor: 'pointer' }} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        goTo: (url) => dispatch(push(url)),\r\n        seenNotify: (id) => dispatch(notifyActions.dbSeenNotify(id)),\r\n        deleteNotiy: (id) => dispatch(notifyActions.dbDeleteNotify(id))\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NotifyItem)\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/NotifyItem.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 373,
    "kind": "class",
    "name": "NotifyItem",
    "memberof": "app/components/NotifyItem.jsx",
    "static": true,
    "longname": "app/components/NotifyItem.jsx~NotifyItem",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/NotifyItem.jsx",
    "importStyle": "{NotifyItem}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 374,
    "kind": "member",
    "name": "handleSeenNotify",
    "memberof": "app/components/NotifyItem.jsx~NotifyItem",
    "static": false,
    "longname": "app/components/NotifyItem.jsx~NotifyItem#handleSeenNotify",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 375,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/NotifyItem.jsx~NotifyItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/NotifyItem.jsx~NotifyItem#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 34,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 376,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/NotifyItem.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/NotifyItem.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/NotifyItem.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 377,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/NotifyItem.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/NotifyItem.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/NotifyItem.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 378,
    "kind": "file",
    "name": "app/components/People.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Tabs, Tab } from 'material-ui/Tabs';\r\nimport { grey50 } from 'material-ui/styles/colors';\r\nimport { push } from 'react-router-redux';\r\n\r\n// - Import app components\r\nimport FindPeople from 'FindPeople';\r\nimport Following from 'Following';\r\nimport Followers from 'Followers';\r\nimport YourCircles from 'YourCircles';\r\n\r\n// - Import actions\r\nimport * as circleActions from 'circleActions';\r\nimport * as globalActions from 'globalActions';\r\n\r\nexport class People extends Component {\r\n\r\n    componentWillMount() {\r\n        // Tab\r\n        switch (this.props.match.params) {\r\n            case undefined:\r\n            case '':\r\n                this.props.setHeaderTitle('People')\r\n                break;\r\n            case 'circles':\r\n                this.props.setHeaderTitle('Circles')\r\n                break;\r\n            case 'followers':\r\n                this.props.setHeaderTitle('Followers')\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        const styles = {\r\n            people: {\r\n                margin: '0 auto',\r\n                width: '90%'\r\n            },\r\n            headline: {\r\n                fontSize: 24,\r\n                paddingTop: 16,\r\n                marginBottom: 12,\r\n                fontWeight: 400\r\n            },\r\n            slide: {\r\n                padding: 10\r\n            }\r\n        };\r\n\r\n        const { circlesLoaded } = this.props;\r\n        let tabIndex = 0;\r\n\r\n        // Tab.\r\n        switch (this.props.match.params) {\r\n            case undefined:\r\n            case '':\r\n                tabIndex = 0\r\n                break;\r\n            case 'circles':\r\n                tabIndex = 1\r\n                break;\r\n            case 'followers':\r\n                tabIndex = 2\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <div style={styles.people}>\r\n                <Tabs inkBarStyle={{ backgroundColor: grey50 }} initialSelectedIndex={tabIndex} >\r\n                    <Tab label=\"Find People\" onActive={() => {\r\n                        this.props.goTo('/people')\r\n                        this.props.setHeaderTitle('People')\r\n                    }} >\r\n                        {circlesLoaded ? <FindPeople /> : ''}\r\n                    </Tab>\r\n                    <Tab label=\"Following\" onActive={() => {\r\n                        this.props.goTo('/people/circles')\r\n                        this.props.setHeaderTitle('Circles')\r\n                    }} >\r\n                        {circlesLoaded ? <Following /> : ''}\r\n                        {circlesLoaded ? <YourCircles /> : ''}\r\n                    </Tab>\r\n                    <Tab label=\"Followers\" onActive={() => {\r\n                        this.props.goTo('/people/followers')\r\n                        this.props.setHeaderTitle('Followers')\r\n                    }}>\r\n                        {circlesLoaded ? <Followers /> : ''}\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n\r\n    return {\r\n        goTo: (url) => dispatch(push(url)),\r\n        setHeaderTitle: (title) => dispatch(globalActions.setHeaderTitle(title))\r\n\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n\r\n    return {\r\n        uid: state.authorize.uid,\r\n        circlesLoaded: state.circle.loaded\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(People))",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/People.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 379,
    "kind": "class",
    "name": "People",
    "memberof": "app/components/People.jsx",
    "static": true,
    "longname": "app/components/People.jsx~People",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/People.jsx",
    "importStyle": "{People}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 380,
    "kind": "method",
    "name": "componentWillMount",
    "memberof": "app/components/People.jsx~People",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/People.jsx~People#componentWillMount",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 381,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/People.jsx~People",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/People.jsx~People#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 42,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 382,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/People.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/People.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/People.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 383,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/People.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/People.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/People.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 384,
    "kind": "file",
    "name": "app/components/Post.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { push } from 'react-router-redux';\r\nimport moment from 'moment';\r\nimport { createAction as action } from 'redux-actions';\r\nimport Linkify from 'react-linkify';\r\n\r\n// - Material UI\r\nimport { CardActions, CardHeader, CardMedia, CardText } from 'material-ui/Card';\r\nimport Snackbar from 'material-ui/Snackbar';\r\nimport SvgLink from 'material-ui/svg-icons/content/link';\r\nimport SvgFavorite from 'material-ui/svg-icons/action/favorite';\r\nimport SvgFavoriteBorder from 'material-ui/svg-icons/action/favorite-border';\r\nimport Checkbox from 'material-ui/Checkbox';\r\nimport Paper from 'material-ui/Paper';\r\nimport Menu from 'material-ui/Menu';\r\nimport MenuItem from 'material-ui/MenuItem';\r\nimport TextField from 'material-ui/TextField';\r\nimport IconMenu from 'material-ui/IconMenu';\r\nimport reactStringReplace from 'react-string-replace';\r\n\r\n// - Import app components\r\nimport CommentGroup from 'CommentGroup';\r\nimport PostWrite from 'PostWrite';\r\nimport Img from 'Img';\r\nimport IconButtonElement from 'IconButtonElement';\r\nimport UserAvatar from 'UserAvatar';\r\n\r\n// - Import actions\r\nimport * as voteActions from 'voteActions';\r\nimport * as postActions from 'postActions';\r\nimport * as globalActions from 'globalActions';\r\n\r\nexport class Post extends Component {\r\n    /**\r\n     * Component constructor\r\n     * @param  {object} props is an object properties of component\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // Post text\r\n            text: this.props.body,\r\n\r\n            // It's true if whole the text post is visible\r\n            readMoreState: false,\r\n\r\n            // Handle open comment from parent component\r\n            openComments: false,\r\n\r\n            // If it's true, share dialog will be open\r\n            shareOpen: false,\r\n\r\n            // If it's true comment will be disabled on post\r\n            disableComments: this.props.disableComments,\r\n\r\n            // If it's true share will be disabled on post\r\n            disableSharing: this.props.disableSharing,\r\n\r\n            // Title of share post\r\n            shareTitle: 'Share On',\r\n\r\n            // If it's true, post link will be visible in share post dialog\r\n            openCopyLink: false,\r\n\r\n            // If it's true, post write will be open\r\n            openPostWrite: false\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * Toggle on show/hide comment\r\n     * @param  {event} evt passed by clicking on comment slide show\r\n     */\r\n    handleOpenComments = (evt) => {\r\n        this.setState({ openComments: !this.state.openComments });\r\n    }\r\n\r\n    /**\r\n     * Open post write\r\n     * \r\n     * @memberof Blog\r\n     */\r\n    handleOpenPostWrite = () => {\r\n        this.setState({ openPostWrite: true });\r\n    }\r\n\r\n    /**\r\n     * Close post write\r\n     * \r\n     * @memberof Blog\r\n     */\r\n    handleClosePostWrite = () => {\r\n        this.setState({ openPostWrite: false });\r\n    }\r\n\r\n    /**\r\n     * Delete a post\r\n     * \r\n     * @memberof Post\r\n     */\r\n    handleDelete = () => {\r\n        this.props.delete(this.props.id);\r\n    }\r\n\r\n    /**\r\n     * Show copy link \r\n     * \r\n     * @memberof Post\r\n     */\r\n    handleCopyLink = () => {\r\n        this.setState({\r\n            openCopyLink: true,\r\n            shareTitle: 'Copy Link'\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Open share post\r\n     * \r\n     * @memberof Post\r\n     */\r\n    handleOpenShare = (event) => {\r\n        this.setState({ shareOpen: true });\r\n\r\n        const text = `${location.origin}/${this.props.ownerUserId}/posts/${this.props.id}`;\r\n\r\n        if (window.clipboardData && window.clipboardData.setData) {\r\n            // IE specific code path to prevent textarea being shown while dialog is visible.\r\n            return clipboardData.setData(\"Text\", text);\r\n        } else if (document.queryCommandSupported && document.queryCommandSupported(\"copy\")) {\r\n            var textarea = document.createElement(\"textarea\");\r\n            textarea.textContent = text;\r\n            textarea.style.position = \"fixed\";  // Prevent scrolling to bottom of page in MS Edge.\r\n            document.body.appendChild(textarea);\r\n            textarea.select();\r\n            try {\r\n                return document.execCommand(\"copy\");  // Security exception may be thrown by some browsers.\r\n            } catch (ex) {\r\n                console.warn(\"Copy to clipboard failed.\", ex);\r\n                return false;\r\n            } finally {\r\n                document.body.removeChild(textarea);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Close share post\r\n     * \r\n     * @memberof Post\r\n     */\r\n    handleCloseShare = () => {\r\n        this.setState({\r\n            shareOpen: false,\r\n            shareTitle: 'Share On',\r\n            openCopyLink: false\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handle vote on a post\r\n     * \r\n     * @memberof Post\r\n     */\r\n    handleVote = () => {\r\n        if (this.props.userVoteStatus) {\r\n            this.props.unvote();\r\n        }\r\n\r\n        else {\r\n            this.props.vote();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set open comment group function on state which passed by CommentGroup component\r\n     * @param  {function} open the function to open comment list\r\n     */\r\n    getOpenCommentGroup = (open) => {\r\n        this.setState({ openCommentGroup: open });\r\n    }\r\n\r\n    /**\r\n     * Handle read more event\r\n     * @param  {event} evt  is the event passed by click on read more\r\n     */\r\n    handleReadMore(evt) {\r\n        this.setState({ readMoreState: !this.state.readMoreState });\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        /**\r\n         * DOM styles\r\n         *\r\n         * @memberof Post\r\n         */\r\n        const styles = {\r\n            counter: {\r\n                lineHeight: '36px',\r\n                color: '#757575',\r\n                fontSize: '12px'\r\n            },\r\n            postBody: {\r\n                wordWrap: \"break-word\"\r\n            },\r\n            dialog: {\r\n                width: '',\r\n                maxWidth: '530px',\r\n                borderRadius: \"4px\"\r\n            },\r\n            rightIconMenu: {\r\n                position: 'absolute',\r\n                right: 18,\r\n                top: 8\r\n            }\r\n        };\r\n\r\n        const RightIconMenu = () => (\r\n            <IconMenu iconButtonElement={IconButtonElement} style={{ display: \"block\", position: \"absolute\", top: \"0px\", right: \"4px\", transform: 'rotate(90deg)' }}>\r\n                <MenuItem primaryText=\"Edit\" onClick={this.handleOpenPostWrite} />\r\n                <MenuItem primaryText=\"Delete\" onClick={this.handleDelete} />\r\n                <MenuItem primaryText={this.props.disableComments ? \"Enable comments\" : \"Disable comments\"} onClick={() => this.props.toggleDisableComments(!this.props.disableComments)} />\r\n                <MenuItem primaryText={this.props.disableSharing ? \"Enable sharing\" : \"Disable sharing\"} onClick={() => this.props.toggleSharingComments(!this.props.disableSharing)} />\r\n            </IconMenu>\r\n        );\r\n\r\n        const { ownerUserId, setHomeTitle, goTo, ownerDisplayName, creationDate, avatar, fullName, isPostOwner, image, body } = this.props;\r\n\r\n        return (\r\n            <div style={{ backgroundColor: '#fff', border: '1px solid #dddfe2', borderRadius: '7px' }}>\r\n                <CardHeader\r\n                    title={<NavLink to={`/${ownerUserId}`}>{ownerDisplayName}</NavLink>}\r\n                    subtitle={moment.unix(creationDate).fromNow()}\r\n                    avatar={<NavLink to={`/${ownerUserId}`}><UserAvatar fullName={fullName} fileName={avatar} size={36} /></NavLink>}\r\n                >\r\n                    {isPostOwner ? (<div style={styles.rightIconMenu}><RightIconMenu /></div>) : ''}\r\n                </CardHeader>\r\n\r\n                {body ?\r\n                    <CardText style={styles.postBody}>\r\n                        <Linkify properties={{ target: '_blank', style: { color: 'blue' } }}>\r\n                            {reactStringReplace(body, /#(\\w+)/g, (match, i) => (\r\n                                <NavLink\r\n                                    style={{ color: 'green' }}\r\n                                    key={match + i}\r\n                                    to={`/tag/${match}`}\r\n                                    onClick={evt => {\r\n                                        evt.preventDefault()\r\n                                        goTo(`/tag/${match}`)\r\n                                        setHomeTitle(`#${match}`)\r\n                                    }}\r\n                                >\r\n                                    #{match}\r\n                                </NavLink>\r\n                            ))}\r\n                        </Linkify>\r\n                    </CardText> : ''\r\n                }\r\n\r\n                {image ? (\r\n                    <CardMedia>\r\n                        <Img fileName={image} />\r\n                    </CardMedia>) : ''}\r\n\r\n                <CardActions>\r\n                    <div style={{ margin: \"16px 8px\", display: 'flex', justifyContent: 'space-between' }}>\r\n                        <div style={{ display: 'flex' }}>\r\n                            <div className='g__circle' onClick={this.handleVote}>\r\n                                <Checkbox\r\n                                    checkedIcon={<SvgFavorite style={{ fill: '#EC425C' }} />}\r\n                                    uncheckedIcon={<SvgFavoriteBorder style={{ fill: '#757575' }} />}\r\n                                    defaultChecked={this.props.userVoteStatus}\r\n                                    style={{ transform: 'translate(6px, 6px)' }}\r\n                                />\r\n                            </div>\r\n                            <div style={styles.counter}> {this.props.voteCount > 0 ? this.props.voteCount : ''} </div>\r\n                        </div>\r\n                        <div style={{ display: 'flex' }}>\r\n                            {!this.props.disableComments ? (<div style={{ display: 'flex', alignItems: 'center' }}>\r\n                                <div style={styles.counter}>\r\n                                    {this.props.commentCount > 1 ? this.props.commentCount + \" comments\" : \r\n                                        this.props.commentCount === 1 ? \r\n                                            this.props.commentCount + \" comment\" : ''}\r\n                                </div>\r\n                                <span className='g__circle' style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', margin: '0' }}>\r\n                                    <svg onClick={this.handleOpenComments} style={{ marginTop: '2px' }} width=\"20\" height=\"21\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.87 16l-7.435 4.415A.288.288 0 0 1 4 20.168V16h-.493c-1.22 0-1.661-.127-2.107-.365A2.486 2.486 0 0 1 .365 14.6C.127 14.154 0 13.712 0 12.493V3.507C0 2.287.127 1.846.365 1.4A2.486 2.486 0 0 1 1.4.365C1.846.127 2.288 0 3.507 0h12.986c1.22 0 1.661.127 2.107.365.446.239.796.589 1.035 1.035.238.446.365.888.365 2.107v8.986c0 1.22-.127 1.661-.365 2.107a2.486 2.486 0 0 1-1.035 1.035c-.446.238-.888.365-2.107.365h-4.624zM3.753 2c-.61 0-.831.063-1.054.183-.223.119-.398.294-.517.517-.12.223-.183.444-.183 1.054v8.492c0 .61.063.831.183 1.054.119.223.294.398.517.517.223.12.444.183 1.054.183h12.492c.61 0 .831-.063 1.054-.183.223-.119.398-.294.517-.517.12-.223.183-.444.183-1.054V3.754c0-.61-.063-.831-.183-1.054a1.243 1.243 0 0 0-.517-.517c-.223-.12-.444-.183-1.054-.183H3.754zm6.97 12H6v3.104L10.724 14z\" fill={(this.props.commentCount > 0) ? '#4E7FF7' : '#757575'} />\r\n                                        <rect x=\"4\" y=\"4\" width=\"12\" height=\"2\" fill={(this.props.commentCount > 0) ? '#4E7FF7' : '#fff'}></rect>\r\n                                        <rect x=\"4\" y=\"7\" width=\"12\" height=\"2\" fill={(this.props.commentCount > 0) ? '#4E7FF7' : '#fff'}></rect>\r\n                                        <rect x=\"4\" y=\"10\" width=\"12\" height=\"2\" fill={(this.props.commentCount > 0) ? '#4E7FF7' : '#fff'}></rect>\r\n                                    </svg>\r\n                                </span>\r\n                            </div>) : ''}\r\n                            {!this.props.disableSharing ?\r\n                                <div className='g__circle' style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                    <svg onClick={this.handleOpenShare} style={{marginBottom: '1px'}} width=\"20\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M19.7 6.2l-6.6-6c-.5-.5-1.1 0-1.1.8v3C7.3 4 3.3 6.9 1.4 10.8.7 12.1.3 13.5 0 14.9c-.2 1 1.3 1.5 1.9.6C4.1 12 7.8 9.7 12 9.7V13c0 .8.6 1.3 1.1.8l6.6-6c.4-.4.4-1.2 0-1.6z\" fill=\"#757575\"/></svg>\r\n                                </div>\r\n                                : ''}\r\n                        </div>\r\n                    </div>\r\n                </CardActions>\r\n\r\n                <CommentGroup open={this.state.openComments} ownerPostUserId={this.props.ownerUserId} onToggleRequest={this.handleOpenComments} isPostOwner={this.props.isPostOwner} disableComments={this.props.disableComments} postId={this.props.id} />\r\n\r\n                <Snackbar\r\n                    open={this.state.shareOpen}\r\n                    message={\"Link to Post copied!\"}\r\n                    autoHideDuration={1000}\r\n                    style={{ left: '1%', transform: 'none' }}\r\n                />\r\n\r\n                <PostWrite\r\n                    open={this.state.openPostWrite}\r\n                    onRequestClose={this.handleClosePostWrite}\r\n                    edit={true}\r\n                    text={this.props.body}\r\n                    image={this.props.image ? this.props.image : ''}\r\n                    id={this.props.id}\r\n                    disableComments={this.props.disableComments}\r\n                    disableSharing={this.props.disableSharing}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        vote: () => dispatch(voteActions.dbAddVote(ownProps.id, ownProps.ownerUserId)),\r\n        unvote: () => dispatch(voteActions.dbDeleteVote(ownProps.id)),\r\n        delete: (id) => dispatch(postActions.dbDeletePost(id)),\r\n        toggleDisableComments: (status) => dispatch(postActions.dbUpdatePost({ id: ownProps.id, disableComments: status }, _ => _)),\r\n        toggleSharingComments: (status) => dispatch(postActions.dbUpdatePost({ id: ownProps.id, disableSharing: status }, _ => _)),\r\n        goTo: (url) => dispatch(push(url)),\r\n        setHomeTitle: (title) => dispatch(globalActions.setHeaderTitle(title || ''))\r\n\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { uid } = state.authorize\r\n    let votes = state.vote.postVotes[ownProps.id]\r\n    const post = (state.post.userPosts[uid] ? Object.keys(state.post.userPosts[uid]).filter((key) => { return ownProps.id === key }).length : 0)\r\n\r\n    return {\r\n        avatar: state.user.info && state.user.info[ownProps.ownerUserId] ? state.user.info[ownProps.ownerUserId].avatar || '' : '',\r\n        fullName: state.user.info && state.user.info[ownProps.ownerUserId] ? state.user.info[ownProps.ownerUserId].fullName || '' : '',\r\n        commentCount: state.comment.postComments[ownProps.id] ? Object.keys(state.comment.postComments[ownProps.id]).length : 0,\r\n        voteCount: state.vote.postVotes[ownProps.id] ? Object.keys(state.vote.postVotes[ownProps.id]).length : 0,\r\n        userVoteStatus: votes && Object.keys(votes).filter((key) => votes[key].userId === state.authorize.uid)[0] ? true : false,\r\n        isPostOwner: post > 0\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post)\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/Post.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 385,
    "kind": "class",
    "name": "Post",
    "memberof": "app/components/Post.jsx",
    "static": true,
    "longname": "app/components/Post.jsx~Post",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/Post.jsx",
    "importStyle": "{Post}",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 386,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/components/Post.jsx~Post",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Post.jsx~Post#constructor",
    "access": "public",
    "description": "Component constructor",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "is an object properties of component"
      }
    ]
  },
  {
    "__docId__": 387,
    "kind": "member",
    "name": "state",
    "memberof": "app/components/Post.jsx~Post",
    "static": false,
    "longname": "app/components/Post.jsx~Post#state",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "{\"text\": *, \"readMoreState\": *, \"openComments\": *, \"shareOpen\": *, \"disableComments\": *, \"disableSharing\": *, \"shareTitle\": string, \"openCopyLink\": *, \"openPostWrite\": *}"
      ]
    }
  },
  {
    "__docId__": 388,
    "kind": "member",
    "name": "handleOpenComments",
    "memberof": "app/components/Post.jsx~Post",
    "static": false,
    "longname": "app/components/Post.jsx~Post#handleOpenComments",
    "access": "public",
    "description": "Toggle on show/hide comment",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "passed by clicking on comment slide show"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 389,
    "kind": "member",
    "name": "handleOpenPostWrite",
    "memberof": "app/components/Post.jsx~Post",
    "static": false,
    "longname": "app/components/Post.jsx~Post#handleOpenPostWrite",
    "access": "public",
    "description": "Open post write",
    "lineNumber": 87,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 390,
    "kind": "member",
    "name": "handleClosePostWrite",
    "memberof": "app/components/Post.jsx~Post",
    "static": false,
    "longname": "app/components/Post.jsx~Post#handleClosePostWrite",
    "access": "public",
    "description": "Close post write",
    "lineNumber": 96,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 391,
    "kind": "member",
    "name": "handleDelete",
    "memberof": "app/components/Post.jsx~Post",
    "static": false,
    "longname": "app/components/Post.jsx~Post#handleDelete",
    "access": "public",
    "description": "Delete a post",
    "lineNumber": 105,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 392,
    "kind": "member",
    "name": "handleCopyLink",
    "memberof": "app/components/Post.jsx~Post",
    "static": false,
    "longname": "app/components/Post.jsx~Post#handleCopyLink",
    "access": "public",
    "description": "Show copy link ",
    "lineNumber": 114,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 393,
    "kind": "member",
    "name": "handleOpenShare",
    "memberof": "app/components/Post.jsx~Post",
    "static": false,
    "longname": "app/components/Post.jsx~Post#handleOpenShare",
    "access": "public",
    "description": "Open share post",
    "lineNumber": 126,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 394,
    "kind": "member",
    "name": "handleCloseShare",
    "memberof": "app/components/Post.jsx~Post",
    "static": false,
    "longname": "app/components/Post.jsx~Post#handleCloseShare",
    "access": "public",
    "description": "Close share post",
    "lineNumber": 156,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 395,
    "kind": "member",
    "name": "handleVote",
    "memberof": "app/components/Post.jsx~Post",
    "static": false,
    "longname": "app/components/Post.jsx~Post#handleVote",
    "access": "public",
    "description": "Handle vote on a post",
    "lineNumber": 169,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 396,
    "kind": "member",
    "name": "getOpenCommentGroup",
    "memberof": "app/components/Post.jsx~Post",
    "static": false,
    "longname": "app/components/Post.jsx~Post#getOpenCommentGroup",
    "access": "public",
    "description": "Set open comment group function on state which passed by CommentGroup component",
    "lineNumber": 183,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "open",
        "description": "the function to open comment list"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 397,
    "kind": "method",
    "name": "handleReadMore",
    "memberof": "app/components/Post.jsx~Post",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Post.jsx~Post#handleReadMore",
    "access": "public",
    "description": "Handle read more event",
    "lineNumber": 191,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "is the event passed by click on read more"
      }
    ],
    "return": null
  },
  {
    "__docId__": 398,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/Post.jsx~Post",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Post.jsx~Post#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 199,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 399,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/Post.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Post.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Post.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 340,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 400,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/Post.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Post.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Post.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 360,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 401,
    "kind": "file",
    "name": "app/components/PostPage.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// - Import app components\r\nimport Blog from 'Blog';\r\n\r\n// - Import actions\r\nimport * as postActions from 'postActions';\r\nimport * as userActions from 'userActions';\r\n\r\nexport class PostPage extends Component {\r\n    \r\n    componentWillMount() {\r\n        this.props.loadPost();\r\n        this.props.loadUserInfo();\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        return (\r\n            <Blog posts={this.props.posts} displayWriting={false} />\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    const { userId, postId } = ownProps.match.params\r\n    return {\r\n        loadPost: () => dispatch(postActions.dbGetPostById(userId, postId)),\r\n        loadUserInfo: () => dispatch(userActions.dbGetUserInfoByUserId(userId, 'header'))\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { userId, postId } = ownProps.match.params\r\n    return {\r\n        avatar: state.user.info && state.user.info[userId] ? state.user.info[userId].avatar : '',\r\n        name: state.user.info && state.user.info[userId] ? state.user.info[userId].fullName : '',\r\n        posts: state.post.userPosts && state.post.userPosts[userId] ? { [postId]: { ...state.post.userPosts[userId][postId] } } : {}\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostPage)",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/PostPage.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 402,
    "kind": "class",
    "name": "PostPage",
    "memberof": "app/components/PostPage.jsx",
    "static": true,
    "longname": "app/components/PostPage.jsx~PostPage",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/PostPage.jsx",
    "importStyle": "{PostPage}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 403,
    "kind": "method",
    "name": "componentWillMount",
    "memberof": "app/components/PostPage.jsx~PostPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/PostPage.jsx~PostPage#componentWillMount",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 404,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/PostPage.jsx~PostPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/PostPage.jsx~PostPage#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 22,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 405,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/PostPage.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/PostPage.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/PostPage.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 406,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/PostPage.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/PostPage.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/PostPage.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 407,
    "kind": "file",
    "name": "app/components/PostWrite.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ListItem } from 'material-ui/List';\r\nimport Dialog from 'material-ui/Dialog';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nimport { grey400, grey800 } from 'material-ui/styles/colors';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport TextField from 'material-ui/TextField';\r\nimport MenuItem from 'material-ui/MenuItem';\r\nimport SvgRemoveImage from 'material-ui/svg-icons/content/remove-circle';\r\nimport SvgCamera from 'material-ui/svg-icons/image/photo-camera';\r\nimport IconMenu from 'material-ui/IconMenu';\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\r\n\r\n// - Import app components\r\nimport ImageGallery from 'ImageGallery';\r\nimport Img from 'Img';\r\nimport UserAvatar from 'UserAvatar';\r\n\r\n// - Import API\r\nimport * as AuthAPI from 'AuthAPI';\r\nimport * as PostAPI from 'PostAPI';\r\n\r\n// - Import actions\r\nimport * as imageGalleryActions from 'imageGalleryActions';\r\nimport * as postActions from 'postActions';\r\n\r\nexport class PostWrite extends Component {\r\n    /**\r\n     * Component constructor\r\n     * @param  {object} props is an object properties of component\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // Post text. \r\n            postText: this.props.edit ? this.props.text : '',\r\n\r\n            // The URL image of the post.\r\n            image: this.props.edit ? this.props.image : '',\r\n\r\n            // The path identifier of image on the server.\r\n            imageFullPath: this.props.edit ? this.props.imageFullPath : '',\r\n\r\n            // If it's true gallery will be open.\r\n            galleryOpen: false,\r\n\r\n            // If it's true post button will be disabled.\r\n            disabledPost: true,\r\n\r\n            // If it's true comment will be disabled on post.\r\n            disableComments: this.props.edit ? this.props.disableComments : false,\r\n\r\n            // If it's true share will be disabled on post.\r\n            disableSharing: this.props.edit ? this.props.disableSharing : false\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Toggle comments of the post to disable/enable \r\n     * \r\n     * @memberof PostWrite\r\n     */\r\n    handleToggleComments = () => {\r\n        this.setState({\r\n            disableComments: !this.state.disableComments,\r\n            disabledPost: false\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Toggle sharing of the post to disable/enable\r\n     * \r\n     * @memberof PostWrite\r\n     */\r\n    handleToggleSharing = () => {\r\n        this.setState({\r\n            disableSharing: !this.state.disableSharing,\r\n            disabledPost: false\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Romove the image of post\r\n     * \r\n     * @memberof PostWrite\r\n     */\r\n    handleRemoveImage = () => {\r\n        this.setState({\r\n            image: '',\r\n            imageFullPath: '',\r\n            disabledPost: false\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handle send post to the server\r\n     * @param  {event} evt passed by clicking on the post button\r\n     */\r\n    handlePost = (evt) => {\r\n        const {\r\n            image,\r\n            imageFullPath,\r\n            disableComments,\r\n            disableSharing,\r\n            postText } = this.state;\r\n\r\n        const {\r\n            id,\r\n            avatar,\r\n            name,\r\n            edit,\r\n            onRequestClose,\r\n            post,\r\n            update } = this.props;\r\n\r\n        const tags = PostAPI.getContentTags(postText);\r\n\r\n        // In edit status we should fire update if not we should fire post function\r\n        if (!edit) {\r\n            if (image !== '') {\r\n                post({\r\n                    body: postText,\r\n                    tags: tags,\r\n                    image: image,\r\n                    imageFullPath: imageFullPath,\r\n                    avatar: avatar,\r\n                    name: name,\r\n                    disableComments: disableComments,\r\n                    disableSharing: disableSharing\r\n                }, onRequestClose);\r\n            }\r\n\r\n            else {\r\n                post({\r\n                    body: postText,\r\n                    tags: tags,\r\n                    avatar: avatar,\r\n                    name: name,\r\n                    disableComments: disableComments,\r\n                    disableSharing: disableSharing\r\n                }, onRequestClose);\r\n            }\r\n        }\r\n\r\n        // In edit status we pass post to update functions\r\n        else {\r\n            update({\r\n                id: id,\r\n                body: postText,\r\n                tags: tags,\r\n                image: image,\r\n                imageFullPath: imageFullPath,\r\n                disableComments: disableComments,\r\n                disableSharing: disableSharing\r\n            }, onRequestClose);\r\n        }\r\n    }\r\n\r\n    // Set post image url\r\n    onRequestSetImage = (url, fullPath) => {\r\n        this.setState({\r\n            image: url,\r\n            imageFullPath: fullPath,\r\n            disabledPost: false\r\n        });\r\n    }\r\n\r\n    /**\r\n     * When the post text changed\r\n     * @param  {event} evt is an event passed by change post text callback funciton\r\n     * @param  {string} data is the post content which user writes\r\n     */\r\n    handleOnChange = (evt, data) => {\r\n        if (data.length === 0 || data.trim() === '' || (this.props.edit && data.trim() === this.props.text)) {\r\n            this.setState({\r\n                postText: data,\r\n                disabledPost: true\r\n            });\r\n        }\r\n\r\n        else {\r\n            this.setState({\r\n                postText: data,\r\n                disabledPost: false\r\n            });\r\n        }\r\n    }\r\n\r\n    // Close image gallery\r\n    handleCloseGallery = () => {\r\n        this.setState({ galleryOpen: false });\r\n    }\r\n\r\n    // Open image gallery\r\n    handleOpenGallery = () => {\r\n        this.setState({ galleryOpen: true });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (!nextProps.open) {\r\n            this.setState({\r\n                // Post text\r\n                postText: this.props.edit ? this.props.text : '',\r\n\r\n                // The image of the post\r\n                image: this.props.edit ? this.props.image : '',\r\n\r\n                // If it's true gallery will be open\r\n                galleryOpen: false,\r\n\r\n                // If it's true post button will be disabled\r\n                disabledPost: true,\r\n\r\n                // If it's true comment will be disabled on post \r\n                disableComments: this.props.edit ? this.props.disableComments : false,\r\n\r\n                // If it's true share will be disabled on post \r\n                disableSharing: this.props.edit ? this.props.disableSharing : false\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        const iconButtonElement = (\r\n            <IconButton\r\n                touch={true}\r\n                tooltipPosition=\"bottom-left\"\r\n            >\r\n                <MoreVertIcon color={grey400} />\r\n            </IconButton>\r\n        );\r\n\r\n        const rightIconMenu = (\r\n            <IconMenu iconButtonElement={iconButtonElement} style={{transform: 'rotate(90deg)'}} >\r\n                <MenuItem onClick={this.handleToggleComments} style={{ fontSize: \"14px\" }}>{!this.state.disableComments ? 'Disable comments' : 'Enable comments'} </MenuItem>\r\n                <MenuItem onClick={this.handleToggleSharing} style={{ fontSize: \"14px\" }}>{!this.state.disableSharing ? 'Disable sharing' : 'Enable sharing'}</MenuItem>\r\n            </IconMenu>\r\n        );\r\n\r\n        const postAvatar = (<UserAvatar fullName={this.props.name} fileName={this.props.avatar} style={{ top: \"8px\" }} size={40} />);\r\n\r\n        const author = (\r\n            <div>\r\n                <span style={{\r\n                    fontSize: \"14px\",\r\n                    paddingRight: \"10px\",\r\n                    fontWeight: 400,\r\n                    color: \"rgba(0,0,0,0.87)\",\r\n                    textOverflow: \"ellipsis\",\r\n                    overflow: \"hidden\",\r\n                    paddingLeft: \"50px\",\r\n                    lineHeight: \"25px\"\r\n                }}>{this.props.name}</span>\r\n            </div>\r\n        );\r\n\r\n        const writeActions = [\r\n            <FlatButton\r\n                label=\"Cancel\"\r\n                primary={true}\r\n                keyboardFocused={false}\r\n                onTouchTap={this.props.onRequestClose}\r\n                style={{ color: grey800 }}\r\n            />,\r\n            <FlatButton\r\n                label={this.props.edit ? 'UPDATE' : 'POST'}\r\n                primary={true}\r\n                keyboardFocused={false}\r\n                onTouchTap={this.handlePost}\r\n                disabled={this.state.disabledPost}\r\n            />\r\n        ];\r\n\r\n        const galleryActions = [\r\n            <FlatButton\r\n                label=\"Cancel\"\r\n                primary={true}\r\n                keyboardFocused={false}\r\n                onTouchTap={this.handleCloseGallery}\r\n                style={{ color: grey800 }}\r\n            />\r\n        ];\r\n\r\n        const styles = {\r\n            dialog: {\r\n                width: '',\r\n                maxWidth: '530px',\r\n                borderRadius: \"4px\"\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div style={this.props.style}>\r\n                {this.props.children}\r\n                <Dialog\r\n                    id={this.props.id || 0}\r\n                    actions={writeActions}\r\n                    modal={false}\r\n                    open={this.props.open}\r\n                    contentStyle={styles.dialog}\r\n                    onRequestClose={this.props.onRequestClose}\r\n                    overlayStyle={{ background: \"rgba(0,0,0,0.12)\" }}\r\n                    bodyStyle={{ padding: 0 }}\r\n                    autoDetectWindowHeight={false}\r\n                    actionsContainerStyle={{ borderTop: \"1px solid rgb(224, 224, 224)\" }}\r\n                >\r\n                    <ListItem\r\n                        disabled={true}\r\n                        leftAvatar={postAvatar}\r\n                        rightIconButton={rightIconMenu}\r\n                        primaryText={author}\r\n                        style={{ padding: \"16px 4px 30px 16px\" }}\r\n                    />\r\n\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\", flexGrow: 1, overflow: \"hidden\" }}>\r\n                        <div style={{ position: \"relative\", flexDirection: \"column\", display: \"flex\", flexGrow: 1, overflow: \"hidden\", overflowY: \"auto\", maxHeight: \"300px\" }}>\r\n                            <TextField\r\n                                value={this.state.postText}\r\n                                onChange={this.handleOnChange}\r\n                                hintText=\"What is new with you?\"\r\n                                underlineShow={false}\r\n                                multiLine={true}\r\n                                hintStyle={{ fontWeight: 200, fontSize: \"16px\" }}\r\n                                textareaStyle={{ fontWeight: 200, fontSize: \"14px\" }}\r\n                                style={{ margin: \"0 16px\", flexShrink: 0, width: \"initial\", flexGrow: 1 }}\r\n                            />\r\n\r\n                            {(this.state.image && this.state.image !== '')\r\n                                ? (<div>\r\n                                    <div style={{ position: \"relative\", overflowY: \"hidden\", overflowX: \"auto\" }}>\r\n                                        <ul style={{ position: \"relative\", whiteSpace: \"nowrap\", padding: \"0 0 0 16px\", margin: \"8px 0 0 0\", paddingRight: \"16px\", verticalAlign: \"bottom\", flexShrink: 0, listStyleType: \"none\" }}>\r\n                                            <div style={{ display: \"flex\", position: \"relative\" }}>\r\n                                                <span onClick={this.handleRemoveImage} style={{\r\n                                                    position: \"absolute\", width: \"28px\", backgroundColor: \"rgba(255, 255, 255, 0.22)\",\r\n                                                    height: \"28px\", right: 12, top: 4, cursor: \"pointer\", borderRadius: \"50%\",\r\n                                                    display: \"flex\", alignItems: \"center\", justifyContent: \"center\"\r\n                                                }}>\r\n                                                    <SvgRemoveImage hoverColor=\"rgba(0, 0, 0, 0.65)\" style={{ color: \"rgba(0, 0, 0, 0.53)\" }} />\r\n                                                </span>\r\n\r\n                                                <div style={{ display: \"inline-block\", width: \"100%\", marginRight: \"8px\", transition: \"transform .25s\" }}>\r\n                                                    <li style={{ width: \"100%\", margin: 0, verticalAlign: \"bottom\", position: \"static\" }}>\r\n                                                        <Img fileName={this.state.image} style={{ width: \"100%\", height: \"auto\" }} />\r\n                                                    </li>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>) : ''}\r\n                        </div>\r\n                        <div style={{ flexShrink: 0, boxFlex: 0, flexGrow: 0, maxHeight: \"48px\", width: \"100%\" }}>\r\n                            <div style={{ flexDirection: \"row\", display: \"flex\" }}>\r\n                                <div onClick={this.handleOpenGallery} style={{ outline: \"none\", width: \"48px\", zIndex: 0, overflow: \"hidden\", position: \"relative\", textAlign: \"center\", transition: \"background .3s\", border: 0, borderRadius: \"50%\", display: \"inlineBlock\", height: \"48px\" }}>\r\n                                    <span style={{ top: \"15px\", display: \"block\", position: \"relative\", cursor: \"pointer\" }}>\r\n                                        <SvgCamera color=\"grey\" />\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n                <Dialog\r\n                    actions={galleryActions}\r\n                    modal={false}\r\n                    open={this.state.galleryOpen}\r\n                    contentStyle={styles.dialog}\r\n                    onRequestClose={this.handleCloseGallery}\r\n                    overlayStyle={{ background: \"rgba(0,0,0,0.12)\" }}\r\n                    autoDetectWindowHeight={false}\r\n                >\r\n                    <ImageGallery set={this.onRequestSetImage} close={this.handleCloseGallery} />\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        post: (post, callBack) => dispatch(postActions.dbAddImagePost(post, callBack)),\r\n        update: (post, callBack) => dispatch(postActions.dbUpdatePost(post, callBack))\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        postImageState: state.imageGallery.status,\r\n        avatar: state.user.info && state.user.info[state.authorize.uid] ? state.user.info[state.authorize.uid].avatar : '',\r\n        name: state.user.info && state.user.info[state.authorize.uid] ? state.user.info[state.authorize.uid].fullName : ''\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostWrite)\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/PostWrite.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 408,
    "kind": "class",
    "name": "PostWrite",
    "memberof": "app/components/PostWrite.jsx",
    "static": true,
    "longname": "app/components/PostWrite.jsx~PostWrite",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/PostWrite.jsx",
    "importStyle": "{PostWrite}",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 409,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/components/PostWrite.jsx~PostWrite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/PostWrite.jsx~PostWrite#constructor",
    "access": "public",
    "description": "Component constructor",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "is an object properties of component"
      }
    ]
  },
  {
    "__docId__": 410,
    "kind": "member",
    "name": "state",
    "memberof": "app/components/PostWrite.jsx~PostWrite",
    "static": false,
    "longname": "app/components/PostWrite.jsx~PostWrite#state",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "{\"postText\": *, \"image\": *, \"imageFullPath\": *, \"galleryOpen\": *, \"disabledPost\": boolean, \"disableComments\": *, \"disableSharing\": *}"
      ]
    }
  },
  {
    "__docId__": 411,
    "kind": "member",
    "name": "handleToggleComments",
    "memberof": "app/components/PostWrite.jsx~PostWrite",
    "static": false,
    "longname": "app/components/PostWrite.jsx~PostWrite#handleToggleComments",
    "access": "public",
    "description": "Toggle comments of the post to disable/enable ",
    "lineNumber": 65,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 412,
    "kind": "member",
    "name": "handleToggleSharing",
    "memberof": "app/components/PostWrite.jsx~PostWrite",
    "static": false,
    "longname": "app/components/PostWrite.jsx~PostWrite#handleToggleSharing",
    "access": "public",
    "description": "Toggle sharing of the post to disable/enable",
    "lineNumber": 77,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 413,
    "kind": "member",
    "name": "handleRemoveImage",
    "memberof": "app/components/PostWrite.jsx~PostWrite",
    "static": false,
    "longname": "app/components/PostWrite.jsx~PostWrite#handleRemoveImage",
    "access": "public",
    "description": "Romove the image of post",
    "lineNumber": 89,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 414,
    "kind": "member",
    "name": "handlePost",
    "memberof": "app/components/PostWrite.jsx~PostWrite",
    "static": false,
    "longname": "app/components/PostWrite.jsx~PostWrite#handlePost",
    "access": "public",
    "description": "Handle send post to the server",
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "passed by clicking on the post button"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 415,
    "kind": "member",
    "name": "onRequestSetImage",
    "memberof": "app/components/PostWrite.jsx~PostWrite",
    "static": false,
    "longname": "app/components/PostWrite.jsx~PostWrite#onRequestSetImage",
    "access": "public",
    "description": null,
    "lineNumber": 162,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 416,
    "kind": "member",
    "name": "handleOnChange",
    "memberof": "app/components/PostWrite.jsx~PostWrite",
    "static": false,
    "longname": "app/components/PostWrite.jsx~PostWrite#handleOnChange",
    "access": "public",
    "description": "When the post text changed",
    "lineNumber": 175,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "is an event passed by change post text callback funciton"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "is the post content which user writes"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 417,
    "kind": "member",
    "name": "handleCloseGallery",
    "memberof": "app/components/PostWrite.jsx~PostWrite",
    "static": false,
    "longname": "app/components/PostWrite.jsx~PostWrite#handleCloseGallery",
    "access": "public",
    "description": null,
    "lineNumber": 192,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 418,
    "kind": "member",
    "name": "handleOpenGallery",
    "memberof": "app/components/PostWrite.jsx~PostWrite",
    "static": false,
    "longname": "app/components/PostWrite.jsx~PostWrite#handleOpenGallery",
    "access": "public",
    "description": null,
    "lineNumber": 197,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 419,
    "kind": "method",
    "name": "componentWillReceiveProps",
    "memberof": "app/components/PostWrite.jsx~PostWrite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/PostWrite.jsx~PostWrite#componentWillReceiveProps",
    "access": "public",
    "description": null,
    "lineNumber": 201,
    "undocument": true,
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 420,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/PostWrite.jsx~PostWrite",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/PostWrite.jsx~PostWrite#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 229,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 421,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/PostWrite.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/PostWrite.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/PostWrite.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 391,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 422,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/PostWrite.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/PostWrite.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/PostWrite.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 404,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 423,
    "kind": "file",
    "name": "app/components/Profile.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// - Import app components\r\nimport ProfileHead from 'ProfileHead';\r\nimport Blog from 'Blog';\r\n\r\n// - Import actions\r\nimport * as postActions from 'postActions';\r\nimport * as userActions from 'userActions';\r\nimport * as globalActions from 'globalActions';\r\n\r\nexport class Profile extends Component {\r\n\r\n    componentWillMount() {\r\n        this.props.loadPosts();\r\n        this.props.loadUserInfo();\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        return (\r\n            <div style={{margin: '0 auto', width: '90%'}}>\r\n                <div>\r\n                    <ProfileHead avatar={this.props.avatar} isAuthedUser={this.props.isAuthedUser} banner={this.props.banner} fullName={this.props.name} followerCount={0} userId={this.props.userId} />\r\n                </div>\r\n                {this.props.posts && Object.keys(this.props.posts).length !== 0 ? \r\n                    (<div>\r\n                        <div className='profile__title'>\r\n                            {this.props.name}'s posts\r\n                        </div>\r\n                        <div style={{ height: '24px' }}></div>\r\n                        <Blog posts={this.props.posts} displayWriting={false} />\r\n                    </div>) : \r\n                    \r\n                    (<div className='profile__title'>\r\n                        Nothing shared\r\n                    </div>)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    const { userId } = ownProps.match.params\r\n    return {\r\n        loadPosts: () => dispatch(postActions.dbGetPostsByUserId(userId)),\r\n        loadUserInfo: () => dispatch(userActions.dbGetUserInfoByUserId(userId, 'header'))\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { userId } = ownProps.match.params\r\n    const { uid } = state.authorize\r\n    return {\r\n        avatar: state.user.info && state.user.info[userId] ? state.user.info[userId].avatar || '' : '',\r\n        name: state.user.info && state.user.info[userId] ? state.user.info[userId].fullName || '' : '',\r\n        banner: state.user.info && state.user.info[userId] ? state.user.info[userId].banner || '' : '',\r\n        posts: state.post.userPosts ? state.post.userPosts[userId] : {},\r\n        isAuthedUser: userId === uid,\r\n        userId\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)  ",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/Profile.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 424,
    "kind": "class",
    "name": "Profile",
    "memberof": "app/components/Profile.jsx",
    "static": true,
    "longname": "app/components/Profile.jsx~Profile",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/Profile.jsx",
    "importStyle": "{Profile}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 425,
    "kind": "method",
    "name": "componentWillMount",
    "memberof": "app/components/Profile.jsx~Profile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Profile.jsx~Profile#componentWillMount",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 426,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/Profile.jsx~Profile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Profile.jsx~Profile#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 24,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 427,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/Profile.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Profile.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Profile.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 428,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/Profile.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Profile.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Profile.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 429,
    "kind": "file",
    "name": "app/components/ProfileHead.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { grey400 } from 'material-ui/styles/colors';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\r\nimport IconMenu from 'material-ui/IconMenu';\r\nimport MenuItem from 'material-ui/MenuItem';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\nimport EventListener, { withOptions } from 'react-event-listener';\r\nimport { Parallax, Background } from 'react-parallax';\r\n\r\n// - Import app components\r\nimport ImgCover from 'ImgCover';\r\nimport EditProfile from 'EditProfile';\r\nimport UserAvatar from 'UserAvatar';\r\n\r\n// - Import actions\r\nimport * as globalActions from 'globalActions';\r\nimport * as userActions from 'userActions';\r\n\r\nexport class ProfileHead extends Component {\r\n\r\n    /**\r\n     * Component constructor\r\n     * @param  {object} props is an object properties of component\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // If it's true , the window is in small size\r\n            isSmall: false\r\n        };\r\n    }\r\n\r\n    /**\r\n      * Handle resize event for window to change sidebar status\r\n      * @param  {event} evt is the event is passed by winodw resize event\r\n      */\r\n    handleResize = (evt) => {\r\n        const width = window.innerWidth;\r\n\r\n        if (width > 900) {\r\n            this.setState({ isSmall: false });\r\n        }\r\n\r\n        else {\r\n            this.setState({ isSmall: true });\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.handleResize();\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        const styles = {\r\n            avatar: {\r\n                border: '2px solid rgb(255, 255, 255)'\r\n            },\r\n            iconButton: {\r\n                fill: 'rgb(255, 255, 255)',\r\n                height: '24px',\r\n                width: '24px',\r\n            },\r\n            iconButtonSmall: {\r\n                fill: 'rgb(0, 0, 0)',\r\n                height: '24px',\r\n                width: '24px',\r\n            },\r\n            editButton: {\r\n                marginLeft: '20px'\r\n            },\r\n            editButtonSmall: {\r\n                marginLeft: '20px',\r\n                color: 'white',\r\n                fill: 'blue'\r\n            }\r\n        };\r\n\r\n        const iconButtonElement = (\r\n            <IconButton style={this.state.isSmall ? styles.iconButtonSmall : styles.iconButton} iconStyle={this.state.isSmall ? styles.iconButtonSmall : styles.iconButton} touch={true}>\r\n                <MoreVertIcon color={grey400} viewBox='10 0 24 24' />\r\n            </IconButton>\r\n        );\r\n\r\n        const RightIconMenu = () => (\r\n            <IconMenu iconButtonElement={iconButtonElement}>\r\n                <MenuItem style={{ fontSize: \"14px\" }}>Reply</MenuItem>\r\n                <MenuItem style={{ fontSize: \"14px\" }}>Edit</MenuItem>\r\n                <MenuItem style={{ fontSize: \"14px\" }}>Delete</MenuItem>\r\n            </IconMenu>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <Parallax strength={500} className=\"profile__parallax\" bgStyle={{ position: 'relative' }}>\r\n                    <Background>\r\n                        <ImgCover width='100%' height='510px' borderRadius='2px' \r\n                        fileName={this.props.banner || \"https://firebasestorage.googleapis.com/v0/b/open-social-33d92.appspot.com/o/images%2F751145a1-9488-46fd-a97e-04018665a6d3.JPG?alt=media&token=1a1d5e21-5101-450e-9054-ea4a20e06c57\"} />\r\n                    </Background>\r\n\r\n                </Parallax>\r\n                <div className={this.state.isSmall ? 'profile__head-info-s' : 'profile__head-info'}>\r\n                    <EventListener\r\n                        target=\"window\"\r\n                        onResize={this.handleResize}\r\n                    />\r\n                    <div className='left'>\r\n                        {/* User avatar*/}\r\n                        <div style={{ display: 'flex', justifyContent: 'center' }}><UserAvatar fullName={this.props.fullName} fileName={this.props.avatar} size={60} style={styles.avatar} /></div>\r\n                        <div className='info'>\r\n                            <div className='fullName'>\r\n                                {this.props.fullName}\r\n                            </div>\r\n                            {/*<div className='followers'>\r\n                                {this.props.followerCount} Followers\r\n                            </div>*/}\r\n                        </div>\r\n                    </div>\r\n                    <div className='right'>\r\n                        {this.props.isAuthedUser ? (<div style={this.state.isSmall ? styles.editButtonSmall : styles.editButton}><RaisedButton label=\"EDIT PROFILE\" onClick={this.props.openEditor} /></div>) : ''}\r\n                    </div>\r\n                </div>\r\n                {this.props.isAuthedUser ? (<EditProfile\r\n                    onRequestClose={this.handleCloseEditor}\r\n                    avatar={this.props.avatar}\r\n                    banner={this.props.banner}\r\n                    fullName={this.props.fullName}\r\n                />): ''}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        openEditor: () => dispatch(userActions.openEditProfile())\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n\r\n    return {\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileHead)",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/ProfileHead.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 430,
    "kind": "class",
    "name": "ProfileHead",
    "memberof": "app/components/ProfileHead.jsx",
    "static": true,
    "longname": "app/components/ProfileHead.jsx~ProfileHead",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/ProfileHead.jsx",
    "importStyle": "{ProfileHead}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 431,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/components/ProfileHead.jsx~ProfileHead",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/ProfileHead.jsx~ProfileHead#constructor",
    "access": "public",
    "description": "Component constructor",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "is an object properties of component"
      }
    ]
  },
  {
    "__docId__": 432,
    "kind": "member",
    "name": "state",
    "memberof": "app/components/ProfileHead.jsx~ProfileHead",
    "static": false,
    "longname": "app/components/ProfileHead.jsx~ProfileHead#state",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "{\"isSmall\": *}"
      ]
    }
  },
  {
    "__docId__": 433,
    "kind": "member",
    "name": "handleResize",
    "memberof": "app/components/ProfileHead.jsx~ProfileHead",
    "static": false,
    "longname": "app/components/ProfileHead.jsx~ProfileHead#handleResize",
    "access": "public",
    "description": "Handle resize event for window to change sidebar status",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "is the event is passed by winodw resize event"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 434,
    "kind": "member",
    "name": "componentDidMount",
    "memberof": "app/components/ProfileHead.jsx~ProfileHead",
    "static": false,
    "longname": "app/components/ProfileHead.jsx~ProfileHead#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 435,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/ProfileHead.jsx~ProfileHead",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/ProfileHead.jsx~ProfileHead#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 60,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 436,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/ProfileHead.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/ProfileHead.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/ProfileHead.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 146,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 437,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/ProfileHead.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/ProfileHead.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/ProfileHead.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 158,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 438,
    "kind": "file",
    "name": "app/components/Settings.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { push } from 'react-router-redux';\r\nimport TextField from 'material-ui/TextField';\r\n\r\n// - Import actions\r\nimport * as authorizeActions from 'authorizeActions'\r\n\r\nexport class Settings extends Component {\r\n\r\n    /**\r\n     * Component constructor\r\n     * @param  {object} props is an object properties of component\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            passwordInput: '',\r\n            passwordInputError: '',\r\n            confirmInput: '',\r\n            confirmInputError: '',\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Handle data on input change\r\n     * @param  {event} evt is an event of inputs of element on change\r\n     */\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n\r\n        this.setState({ [name]: target.value });\r\n\r\n        if (name === 'passwordInput') {\r\n            this.setState({ passwordInputError: '' });\r\n        }\r\n\r\n        else if (name === 'confirmInput') {\r\n            this.setState({\r\n                confirmInputError: '',\r\n                passwordInputError: ''\r\n            });\r\n        }\r\n    }\r\n\r\n    handleForm = () => {\r\n        if (this.state.passwordInput === '') {\r\n            this.setState({ passwordInputError: 'This field is required' });\r\n        }\r\n\r\n        else if (this.state.confirmInput === '') {\r\n            this.setState({ confirmInputError: 'This field is required' });\r\n        }\r\n        else if (this.state.confirmInput !== this.state.passwordInput) {\r\n            this.setState({ confirmInputError: 'Password and confirm password should be equal!' });\r\n        }\r\n\r\n        else {\r\n            this.props.login(\r\n                this.state.passwordInput,\r\n                this.state.confirmInput\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        return (\r\n            <form style={{ height: '100vh', width: '100vw', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                <div style={{ backgroundColor: 'white', width: '450px', textAlign: 'center', borderRadius: '10px' }}>\r\n                    <h1>Change Password</h1>\r\n                    <TextField\r\n                        onChange={this.handleInputChange}\r\n                        errorText={this.state.passwordInputError}\r\n                        name=\"passwordInput\"\r\n                        floatingLabelStyle={{ fontSize: \"15px\" }}\r\n                        floatingLabelText=\"New password\"\r\n                        type=\"password\"\r\n                    />\r\n                    <br />\r\n                    <TextField\r\n                        onChange={this.handleInputChange}\r\n                        errorText={this.state.passwordInputError}\r\n                        name=\"confirmInput\"\r\n                        floatingLabelStyle={{ fontSize: \"15px\" }}\r\n                        floatingLabelText=\"Confirm password\"\r\n                        type=\"password\"\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"settings__button-box\" style={{ display: 'flex', width: '100%', flexDirection: 'row' }}>\r\n                        <div style={{ display: 'flex', outline: 'none', cursor: 'pointer', alignItems: 'center', justifyContent: 'center', height: '50px', width: '49%', backgroundColor: '#5574F7', color: 'white', borderRadius: '0 0 0 10px', padding: '0 15px 0 15px' }} label=\"Home\" onClick={this.props.homePage}>Home</div>\r\n                        <div style={{ display: 'flex', outline: 'none', cursor: 'pointer', alignItems: 'center', justifyContent: 'center', height: '50px', width: '50%', backgroundColor: '#5574F7', color: 'white', borderRadius: '0 0 10px 0', padding: '0 15px 0 15px' }} label=\"Change password\" onClick={this.handleForm}>Change password</div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        login: (password) => {\r\n            dispatch(authorizeActions.dbUpdatePassword(password))\r\n        },\r\n        homePage: () => {\r\n            dispatch(push(\"/\"))\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Settings))\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/Settings.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 439,
    "kind": "class",
    "name": "Settings",
    "memberof": "app/components/Settings.jsx",
    "static": true,
    "longname": "app/components/Settings.jsx~Settings",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/Settings.jsx",
    "importStyle": "{Settings}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 440,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/components/Settings.jsx~Settings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Settings.jsx~Settings#constructor",
    "access": "public",
    "description": "Component constructor",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "is an object properties of component"
      }
    ]
  },
  {
    "__docId__": 441,
    "kind": "member",
    "name": "state",
    "memberof": "app/components/Settings.jsx~Settings",
    "static": false,
    "longname": "app/components/Settings.jsx~Settings#state",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "{\"passwordInput\": *, \"passwordInputError\": *, \"confirmInput\": *, \"confirmInputError\": *}"
      ]
    }
  },
  {
    "__docId__": 442,
    "kind": "member",
    "name": "handleInputChange",
    "memberof": "app/components/Settings.jsx~Settings",
    "static": false,
    "longname": "app/components/Settings.jsx~Settings#handleInputChange",
    "access": "public",
    "description": "Handle data on input change",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "is an event of inputs of element on change"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 443,
    "kind": "member",
    "name": "handleForm",
    "memberof": "app/components/Settings.jsx~Settings",
    "static": false,
    "longname": "app/components/Settings.jsx~Settings#handleForm",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 444,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/Settings.jsx~Settings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Settings.jsx~Settings#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 74,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 445,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/Settings.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Settings.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Settings.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 446,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/Settings.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Settings.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Settings.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 131,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 447,
    "kind": "file",
    "name": "app/components/Sidebar.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport EventListener, { withOptions } from 'react-event-listener';\r\nimport keycode from 'keycode';\r\n\r\n// - Import API\r\nimport * as AuthAPI from 'AuthAPI';\r\n\r\n// - Import actions\r\nimport * as authorizeActions from 'authorizeActions';\r\nimport * as globalActions from 'globalActions';\r\n\r\n// - Fields\r\nconst sizeCondition = (width) => (width >= 750);\r\n\r\nexport class Sidebar extends Component {\r\n\r\n    /**\r\n     * Component constructor\r\n     * @param  {object} props is an object properties of component\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Default state\r\n        this.state = {\r\n            sidebarClass: \"\",\r\n\r\n            overlay: false,\r\n\r\n            mainStyle: { marginLeft: \"0px\" },\r\n\r\n            // Is sidebar open or not\r\n            open: false,\r\n\r\n            // If sidebar is closed by resizing or not\r\n            auto: false,\r\n\r\n            // If overlay should be open or not\r\n            overlayOpen: false,\r\n\r\n            // If side bar should be closed\r\n            shouldBeClosed: false\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Handle open sidebar\r\n     * @param  {boolean} status if is true, sidebar will be open\r\n     * @param  {string} source is the element that fired the function\r\n     */\r\n    open = (status, source) => {\r\n        const width = window.innerWidth;\r\n\r\n        if (status) {\r\n            // Sidebar style when it's open\r\n            const openStyle = {\r\n                width: \"210px\",\r\n                transform: \"translate(0px, 0px)\",\r\n                transition: \"transform 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms\"\r\n            };\r\n\r\n            this.setState({\r\n                open: true,\r\n                mainStyle: { marginLeft: \"210px\" },\r\n                sidebarStyle: openStyle,\r\n                sidebarClass: (sizeCondition(width)) ? \"sidebar  sidebar__large\" : \"sidebar  sidebar__over\",\r\n                overlay: (sizeCondition(width)) ? false : true\r\n            });\r\n\r\n            if (sizeCondition(width)) {\r\n                this.setState({\r\n                    auto: false,\r\n                    shouldBeClosed: false\r\n                });\r\n            } \r\n            \r\n            else {\r\n                this.setState({ overlayOpen: true });\r\n            }\r\n\r\n            /**\r\n            * Callback function fired to determine sidebar and overlay sidebar status\r\n            * @param {boolean} if true, the sidebar is open\r\n            */\r\n            this.props.status(true);\r\n        }\r\n\r\n        // If it's false sidebar should be closed\r\n        else {\r\n            // Sidebar style when it's closed\r\n            const closeStyle = {\r\n                transform: \"translate(-100%, 0px)\",\r\n                transition: \"transform 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms\"\r\n            }\r\n\r\n            this.setState({\r\n                open: false,\r\n                mainStyle: { marginLeft: \"0px\" },\r\n                sidebarStyle: closeStyle,\r\n                sidebarClass: (sizeCondition(width)) ? \"sidebar  sidebar__large\"\r\n                    : ((source === 'auto') ? \"sidebar \" : \"sidebar  sidebar__over\"),\r\n                overlay: false\r\n            });\r\n\r\n            if (source === 'auto') {\r\n                this.setState({ auto: true });\r\n            }\r\n\r\n            else if (source === 'overlay') {\r\n                this.setState({ shouldBeClosed: true });\r\n            }\r\n\r\n            /**\r\n            * Callback function fired to determine sidebar and overlay sidebar status\r\n            * @param {boolean} if true, the sidebar is open\r\n            */\r\n            this.props.status(false);\r\n        }\r\n\r\n        this.props.overlay((sizeCondition(width)) ? false : true);\r\n    }\r\n\r\n    /**\r\n     * Handle resize event for window to change sidebar status\r\n     * @param  {event} evt is the event is passed by winodw resize event\r\n     */\r\n    handleResize = (evt) => {\r\n        const width = window.innerWidth;\r\n\r\n        if (sizeCondition(width)) {\r\n            this.setState({\r\n                sidebarClass: \"sidebar  sidebar__large\",\r\n                overlay: false,\r\n                overlayOpen: false\r\n            });\r\n\r\n            this.props.overlay(false);\r\n\r\n            if (this.state.auto && !this.state.shouldBeClosed) {\r\n                this.open(true);\r\n                this.setState({ auto: false });\r\n            }\r\n        }\r\n\r\n        else {\r\n            if (!this.state.overlayOpen) {\r\n                if (!this.state.auto && this.state.open) {\r\n                    this.open(false, 'auto');\r\n\r\n                } \r\n                \r\n                else {\r\n                    this.setState({\r\n                        overlayOpen: true,\r\n                        overlay: true\r\n                    });\r\n                }\r\n            }\r\n            \r\n            else {\r\n                this.setState({ sidebarClass: \"sidebar  sidebar__over\", overlay: true });\r\n                this.props.overlay(true);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // Handle logout user\r\n    handleLogout = () => {\r\n        this.props.dispatch(authorizeActions.dbLogout());\r\n    }\r\n\r\n    /**\r\n     * Handle keyup event for window to close sidebar\r\n     * @param  {event} evt is the event is passed by winodw key event\r\n     */\r\n    handleKeyUp = (evt) => {\r\n        if (this.state.overlayOpen) {\r\n            if (this.state.open && keycode(event) === 'esc') {\r\n                this.open(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        this.props.open(this.open);\r\n    }\r\n\r\n    getChildren = () => {\r\n        return React.Children.map(this.props.children, (childe) => {\r\n            if (childe.type.qcName === 'SidebarContent') {\r\n                const sideBarContent = React.cloneElement(childe, {\r\n                    className: this.state.sidebarClass,\r\n                    cstyle: this.state.sidebarStyle,\r\n                    sidebar: this.open,\r\n                    overlay: this.state.overlay\r\n                });\r\n\r\n                return sideBarContent;\r\n            }\r\n            \r\n            else if (childe.type.qcName === 'SidebarMain') {\r\n                return React.cloneElement(childe, { cstyle: this.state.mainStyle });\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.handleResize();\r\n    }\r\n\r\n    /**\r\n    * Reneder component DOM\r\n    * @return {react element} return the DOM which rendered by component\r\n    */\r\n    render() {\r\n        return (\r\n            <div id='sidebar'>\r\n                <EventListener\r\n                    target=\"window\"\r\n                    onResize={this.handleResize}\r\n                    onKeyUp={this.handleKeyUp}\r\n                />\r\n                {this.getChildren()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n    }\r\n}\r\n\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar)\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/Sidebar.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 448,
    "kind": "function",
    "name": "sizeCondition",
    "memberof": "app/components/Sidebar.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Sidebar.jsx~sizeCondition",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Sidebar.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "width",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 449,
    "kind": "class",
    "name": "Sidebar",
    "memberof": "app/components/Sidebar.jsx",
    "static": true,
    "longname": "app/components/Sidebar.jsx~Sidebar",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/Sidebar.jsx",
    "importStyle": "{Sidebar}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 450,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/components/Sidebar.jsx~Sidebar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Sidebar.jsx~Sidebar#constructor",
    "access": "public",
    "description": "Component constructor",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "is an object properties of component"
      }
    ]
  },
  {
    "__docId__": 451,
    "kind": "member",
    "name": "state",
    "memberof": "app/components/Sidebar.jsx~Sidebar",
    "static": false,
    "longname": "app/components/Sidebar.jsx~Sidebar#state",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "{\"sidebarClass\": *, \"overlay\": *, \"mainStyle\": *, \"open\": *, \"auto\": *, \"overlayOpen\": *, \"shouldBeClosed\": *}"
      ]
    }
  },
  {
    "__docId__": 452,
    "kind": "member",
    "name": "open",
    "memberof": "app/components/Sidebar.jsx~Sidebar",
    "static": false,
    "longname": "app/components/Sidebar.jsx~Sidebar#open",
    "access": "public",
    "description": "Handle open sidebar",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "status",
        "description": "if is true, sidebar will be open"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": "is the element that fired the function"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 453,
    "kind": "member",
    "name": "handleResize",
    "memberof": "app/components/Sidebar.jsx~Sidebar",
    "static": false,
    "longname": "app/components/Sidebar.jsx~Sidebar#handleResize",
    "access": "public",
    "description": "Handle resize event for window to change sidebar status",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "is the event is passed by winodw resize event"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 454,
    "kind": "member",
    "name": "handleLogout",
    "memberof": "app/components/Sidebar.jsx~Sidebar",
    "static": false,
    "longname": "app/components/Sidebar.jsx~Sidebar#handleLogout",
    "access": "public",
    "description": null,
    "lineNumber": 171,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 455,
    "kind": "member",
    "name": "handleKeyUp",
    "memberof": "app/components/Sidebar.jsx~Sidebar",
    "static": false,
    "longname": "app/components/Sidebar.jsx~Sidebar#handleKeyUp",
    "access": "public",
    "description": "Handle keyup event for window to close sidebar",
    "lineNumber": 179,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "is the event is passed by winodw key event"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 456,
    "kind": "member",
    "name": "componentWillMount",
    "memberof": "app/components/Sidebar.jsx~Sidebar",
    "static": false,
    "longname": "app/components/Sidebar.jsx~Sidebar#componentWillMount",
    "access": "public",
    "description": null,
    "lineNumber": 187,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 457,
    "kind": "member",
    "name": "getChildren",
    "memberof": "app/components/Sidebar.jsx~Sidebar",
    "static": false,
    "longname": "app/components/Sidebar.jsx~Sidebar#getChildren",
    "access": "public",
    "description": null,
    "lineNumber": 191,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 458,
    "kind": "member",
    "name": "componentDidMount",
    "memberof": "app/components/Sidebar.jsx~Sidebar",
    "static": false,
    "longname": "app/components/Sidebar.jsx~Sidebar#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 210,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 459,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/Sidebar.jsx~Sidebar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Sidebar.jsx~Sidebar#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 218,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 460,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/Sidebar.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Sidebar.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Sidebar.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 238,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 461,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/Sidebar.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Sidebar.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Sidebar.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 250,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 462,
    "kind": "file",
    "name": "app/components/SidebarContent.jsx",
    "content": "import React, { Component } from 'react';\r\n\r\nexport default class SidebarContent extends Component {\r\n    static qcName = 'SidebarContent'\r\n\r\n    /**\r\n     * Handle click on cover of sidebar\r\n     * @param  {event} evt is a click event passed to funciton\r\n     */\r\n    handleClickCover = (evt) => {\r\n        this.props.sidebar(false, 'overlay');\r\n    }\r\n\r\n    /**\r\n   * Reneder component DOM\r\n   * @return {react element} return the DOM which rendered by component\r\n   */\r\n    render() {\r\n        const showCoverStyle = { position: \"fixed\", height: \"100%\", width: \"100%\", top: \"0px\", left: \"0px\", opacity: \"1\", backgroundColor: \"rgba(255, 255, 255, 0.54)\", WebkitTapHighlightColor: \"rgba(0, 0, 0, 0)\", willChange: \"opacity\", transform: \"translateZ(0px)\", transition: \"left 0ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, opacity 400ms cubic-bezier(0.23, 1, 0.32, 1) 0ms\", zIndex: \"1111\", pointerEvents: \"auto\" };\r\n        const hideCoverStyle = { position: \"fixed\", height: \"100%\", width: \"100%\", top: \"0px\", left: \"-100%\", opacity: \"0\", backgroundColor: \"rgba(255, 255, 255, 0.54)\", WebkitTapHighlightColor: \"rgba(0, 0, 0, 0)\", willChange: \"opacity\", transform: \"translateZ(0px)\", transition: \"left 0ms cubic-bezier(0.23, 1, 0.32, 1) 400ms, opacity 400ms cubic-bezier(0.23, 1, 0.32, 1) 0ms\", zIndex: \"1111\", pointerEvents: \"none\" };\r\n        \r\n        return (\r\n            <div id='sidebar-content'>\r\n                <div style={this.props.overlay ? showCoverStyle : hideCoverStyle} style={{ overflow: 'hidden' }} onClick={this.handleClickCover}></div>\r\n                <div className={this.props.className} style={this.props.cstyle}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/SidebarContent.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 463,
    "kind": "class",
    "name": "SidebarContent",
    "memberof": "app/components/SidebarContent.jsx",
    "static": true,
    "longname": "app/components/SidebarContent.jsx~SidebarContent",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/SidebarContent.jsx",
    "importStyle": "SidebarContent",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 464,
    "kind": "member",
    "name": "qcName",
    "memberof": "app/components/SidebarContent.jsx~SidebarContent",
    "static": true,
    "longname": "app/components/SidebarContent.jsx~SidebarContent.qcName",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 465,
    "kind": "member",
    "name": "handleClickCover",
    "memberof": "app/components/SidebarContent.jsx~SidebarContent",
    "static": false,
    "longname": "app/components/SidebarContent.jsx~SidebarContent#handleClickCover",
    "access": "public",
    "description": "Handle click on cover of sidebar",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "evt",
        "description": "is a click event passed to funciton"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 466,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/SidebarContent.jsx~SidebarContent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/SidebarContent.jsx~SidebarContent#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 18,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 467,
    "kind": "file",
    "name": "app/components/SidebarMain.jsx",
    "content": "import React, { Component } from 'react';\r\n\r\nexport default class SidebarMain extends Component {\r\n    static qcName = 'SidebarMain';\r\n\r\n    /**\r\n     * Render component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        return (\r\n            <div className=\"home__main\" style={this.props.cstyle}>\r\n                <div style={{ height: \"64px\", width: \"100%\" }}></div>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/SidebarMain.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 468,
    "kind": "class",
    "name": "SidebarMain",
    "memberof": "app/components/SidebarMain.jsx",
    "static": true,
    "longname": "app/components/SidebarMain.jsx~SidebarMain",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/SidebarMain.jsx",
    "importStyle": "SidebarMain",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 469,
    "kind": "member",
    "name": "qcName",
    "memberof": "app/components/SidebarMain.jsx~SidebarMain",
    "static": true,
    "longname": "app/components/SidebarMain.jsx~SidebarMain.qcName",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 470,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/SidebarMain.jsx~SidebarMain",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/SidebarMain.jsx~SidebarMain#render",
    "access": "public",
    "description": "Render component DOM",
    "lineNumber": 10,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 471,
    "kind": "file",
    "name": "app/components/Signup.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { push } from 'react-router-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport TextField from 'material-ui/TextField';\r\n\r\n// - Import actions\r\nimport *  as authorizeActions from 'authorizeActions';\r\nimport * as globalActions from 'globalActions';\r\n\r\n// - Import app API\r\nimport StringAPI from 'StringAPI';\r\n\r\nexport class Signup extends Component {\r\n\r\n    /**\r\n     * Component constructor\r\n     * @param  {object} props is an object properties of component\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            fullNameInput: '',\r\n            fullNameInputError: '',\r\n            emailInput: '',\r\n            emailInputError: '',\r\n            passwordInput: '',\r\n            passwordInputError: '',\r\n            confirmInput: '',\r\n            confirmInputError: ''\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Handle data on input change\r\n     * @param  {event} event is an event of inputs of element on change\r\n     */\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n\r\n        this.setState({ [name]: target.value });\r\n\r\n        if (name === 'fullNameInput') {\r\n            this.setState({ fullNameInputError: '' });\r\n        }\r\n\r\n        else if (name === 'emailInput') {\r\n            this.setState({ emailInputError: '' });\r\n        }\r\n\r\n        else if (name === 'passwordInput') {\r\n            this.setState({\r\n                confirmInputError: '',\r\n                passwordInputError: ''\r\n            });\r\n        }\r\n\r\n        else if (name === 'confirmInput') {\r\n            this.setState({\r\n                confirmInputError: '',\r\n                passwordInputError: ''\r\n            });\r\n        }\r\n\r\n        else if (name === 'checkInput') {\r\n            this.setState({ checkInputError: '' });\r\n        }\r\n    }\r\n\r\n    handleForm = () => {\r\n        const { fullNameInput, emailInput, passwordInput, confirmInput } = this.state;\r\n\r\n        // Validate full name\r\n        const fullNameCheck = fullNameInput.trim().toLowerCase();\r\n\r\n        if (fullNameCheck.length < 2) {\r\n            this.setState({ fullNameInputError: 'Please enter a valid name.' });\r\n        }\r\n\r\n        /* Validate email*/\r\n        if (!StringAPI.isValidEmail(emailInput)) {\r\n            this.setState({ emailInputError: 'Please enter a valid email.'});\r\n        }\r\n\r\n        /* Check password */\r\n        if (passwordInput === '') {\r\n            this.setState({ passwordInputError: 'This field is required.' });\r\n        }\r\n\r\n        if (confirmInput === '') {\r\n            this.setState({ confirmInputError: 'This field is required.' });\r\n        }\r\n\r\n        else if (confirmInput !== passwordInput) {\r\n            this.setState({\r\n                passwordInputError: 'This field sould be equal to confirm password.',\r\n                confirmInputError: 'This field sould be equal to password.'\r\n            });\r\n        }\r\n\r\n        else {\r\n            let bcrypt = require('bcryptjs');\r\n            let salt = bcrypt.genSaltSync(12);\r\n            let hash = bcrypt.hashSync(passwordInput, salt);\r\n\r\n            this.props.register({\r\n                email: emailInput,\r\n                password: hash,\r\n                fullName: fullNameInput\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        return (\r\n            <div style={{height: '100vh', width: '100vw', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                <div style={{backgroundColor: 'white', width: '450px', textAlign: 'center', borderRadius: '10px'}}>\r\n                    <h1>Sign up</h1>\r\n\r\n                    <TextField\r\n                        onChange={this.handleInputChange}\r\n                        errorText={this.state.fullNameInputError}\r\n                        name=\"fullNameInput\"\r\n                        floatingLabelStyle={{ fontSize: \"15px\" }}\r\n                        floatingLabelText=\"Full Name\"\r\n                        type=\"text\"\r\n                    />\r\n                    \r\n                    <br />\r\n\r\n                    <TextField\r\n                        onChange={this.handleInputChange}\r\n                        errorText={this.state.emailInputError}\r\n                        name=\"emailInput\"\r\n                        floatingLabelStyle={{ fontSize: \"15px\" }}\r\n                        floatingLabelText=\"Email\"\r\n                        type=\"email\"\r\n                    />\r\n\r\n                    <br />\r\n\r\n                    <TextField\r\n                        onChange={this.handleInputChange}\r\n                        errorText={this.state.passwordInputError}\r\n                        name=\"passwordInput\"\r\n                        floatingLabelStyle={{ fontSize: \"15px\" }}\r\n                        floatingLabelText=\"Password\"\r\n                        type=\"password\"\r\n                    />\r\n                    \r\n                    <br />\r\n\r\n                    <TextField\r\n                        onChange={this.handleInputChange}\r\n                        errorText={this.state.confirmInputError}\r\n                        name=\"confirmInput\"\r\n                        floatingLabelStyle={{ fontSize: \"15px\" }}\r\n                        floatingLabelText=\"Confirm Password\"\r\n                        type=\"password\"\r\n                    />\r\n\r\n                    <br />\r\n                    <br />\r\n\r\n                    <div style={{display: 'flex', width: '100%', flexDirection: 'column'}}>\r\n                        <div style={{display: 'flex', outline: 'none', cursor: 'pointer', alignItems: 'center', justifyContent: 'center', height: '50px', backgroundColor: 'white', color: 'black', marginRight: '31px'}} label=\"Return to Login screen\" onClick={this.props.loginPage}>\r\n                            <svg style={{marginRight: '10px'}} width=\"21\" height=\"17\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7.723.67A.966.966 0 0 1 9.09 2.039L3.644 7.484l16.087.04a.978.978 0 0 1 .973.975.966.966 0 0 1-.968.97L3.56 9.426l5.489 5.488a.973.973 0 0 1 .004 1.375.973.973 0 0 1-1.375-.005L.583 9.19A.973.973 0 0 1 .58 7.815L7.723.67z\" fill=\"#A2A2A2\"/></svg>\r\n                            Return to login page\r\n                        </div>\r\n                        <div style={{display: 'flex', outline: 'none', cursor: 'pointer', alignItems: 'center', justifyContent: 'center', height: '50px', backgroundColor: '#9013FE', color: 'white', borderRadius: '0 0 10px 10px'}} label=\"Create Account\" onClick={this.handleForm}>Create</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        showError: (message) => {\r\n            dispatch(action(types.SHOW_ERROR_MESSAGE_GLOBAL)(error.message))\r\n        },\r\n        register: (data) => {\r\n            dispatch(authorizeActions.dbSignup(data))\r\n        },\r\n        loginPage: () => {\r\n            dispatch(push(\"/login\"))\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Signup))",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/Signup.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 472,
    "kind": "class",
    "name": "Signup",
    "memberof": "app/components/Signup.jsx",
    "static": true,
    "longname": "app/components/Signup.jsx~Signup",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/Signup.jsx",
    "importStyle": "{Signup}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 473,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/components/Signup.jsx~Signup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Signup.jsx~Signup#constructor",
    "access": "public",
    "description": "Component constructor",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "is an object properties of component"
      }
    ]
  },
  {
    "__docId__": 474,
    "kind": "member",
    "name": "state",
    "memberof": "app/components/Signup.jsx~Signup",
    "static": false,
    "longname": "app/components/Signup.jsx~Signup#state",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "{\"fullNameInput\": *, \"fullNameInputError\": *, \"emailInput\": *, \"emailInputError\": *, \"passwordInput\": *, \"passwordInputError\": *, \"confirmInput\": *, \"confirmInputError\": *}"
      ]
    }
  },
  {
    "__docId__": 475,
    "kind": "member",
    "name": "handleInputChange",
    "memberof": "app/components/Signup.jsx~Signup",
    "static": false,
    "longname": "app/components/Signup.jsx~Signup#handleInputChange",
    "access": "public",
    "description": "Handle data on input change",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "is an event of inputs of element on change"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 476,
    "kind": "member",
    "name": "handleForm",
    "memberof": "app/components/Signup.jsx~Signup",
    "static": false,
    "longname": "app/components/Signup.jsx~Signup#handleForm",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 477,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/Signup.jsx~Signup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/Signup.jsx~Signup#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 120,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 478,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/Signup.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Signup.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Signup.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 190,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 479,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/Signup.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/Signup.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/Signup.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 210,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 480,
    "kind": "file",
    "name": "app/components/UserAvatar.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Avatar from 'material-ui/Avatar';\r\n\r\n// - Import actions\r\nimport * as imageGalleryActions from 'imageGalleryActions'\r\n\r\nexport class UserAvatar extends Component {\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        const { fileName, fullName, style, size, onTouchTap } = this.props\r\n\r\n        return (\r\n            <div style={{ display: 'inherit' }}>\r\n                {(fileName && fileName !== '' && fileName !== 'noImage')\r\n                    ? (<Avatar backgroundColor='#ffffff' src={fileName} size={size || 36} style={style} onTouchTap={onTouchTap} />)\r\n                    : (<Avatar backgroundColor='rgb(0, 0, 0, 0)' size={size || 36} style={style} onTouchTap={onTouchTap}>\r\n                            <svg width=\"19\" height=\"19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.393 9.914a4.957 4.957 0 1 1 0-9.914 4.957 4.957 0 0 1 0 9.914zm9.413 9.012H.203c-1.344-4.034 4.233-7.21 9.19-7.21s10.745 3.2 9.413 7.21z\" fill=\"rgba(255, 255, 255, 0.87)\"/></svg>\r\n                        </Avatar>)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        avatarURL: state.imageGallery.imageURLList,\r\n        imageRequests: state.imageGallery.imageRequests\r\n\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAvatar)\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/UserAvatar.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 481,
    "kind": "class",
    "name": "UserAvatar",
    "memberof": "app/components/UserAvatar.jsx",
    "static": true,
    "longname": "app/components/UserAvatar.jsx~UserAvatar",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/UserAvatar.jsx",
    "importStyle": "{UserAvatar}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 482,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/UserAvatar.jsx~UserAvatar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/UserAvatar.jsx~UserAvatar#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 13,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 483,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/UserAvatar.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/UserAvatar.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/UserAvatar.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 484,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/UserAvatar.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/UserAvatar.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/UserAvatar.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 485,
    "kind": "file",
    "name": "app/components/UserBox.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { push } from 'react-router-redux';\r\nimport Paper from 'material-ui/Paper';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nimport Popover, { PopoverAnimationVertical } from 'material-ui/Popover';\r\nimport Menu from 'material-ui/Menu';\r\nimport Checkbox from 'material-ui/Checkbox';\r\nimport TextField from 'material-ui/TextField';\r\n\r\n// - Import app components\r\nimport UserAvatar from 'UserAvatar';\r\n\r\n// - Import API\r\nimport CircleAPI from 'CircleAPI';\r\n\r\n// - Import actions\r\nimport * as circleActions from 'circleActions';\r\n\r\nexport class UserBox extends Component {\r\n\r\n    /**\r\n     * Component constructor\r\n     * @param  {object} props is an object properties of component\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // It will be true if user follow popover is open\r\n            open: false,\r\n\r\n            // The value of circle input\r\n            circleName: '',\r\n\r\n            // It will be true if the text field for adding group is empty\r\n            disabledAddCircle: true\r\n        };\r\n    }\r\n\r\n    handleFollowUser = (checked, cid) => {\r\n        const { userId, user } = this.props;\r\n        const { avatar, fullName } = user;\r\n\r\n        if (checked) {\r\n            this.props.addFollowingUser(cid, { avatar, userId, fullName });\r\n        } else {\r\n            this.props.deleteFollowingUser(cid, userId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle create circle\r\n     * \r\n     * @memberof UserBox\r\n     */\r\n    handleCreateCricle = () => {\r\n        const { circleName } = this.state;\r\n\r\n        if (circleName && circleName.trim() !== '') {\r\n            this.props.createCircle(circleName);\r\n\r\n            this.setState({\r\n                circleName: '',\r\n                disabledAddCircle: true\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle change group name input to the state\r\n     * \r\n     * @memberof UserBox\r\n     */\r\n    handleChangeName = (evt) => {\r\n        this.setState({\r\n            circleName: evt.target.value,\r\n            disabledAddCircle: (evt.target.value === undefined || evt.target.value.trim() === '')\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handle touch tab on follow popover\r\n     * \r\n     * @memberof UserBox\r\n     */\r\n    handleTouchTap = (evt) => {\r\n        // This prevents ghost click.\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            open: true,\r\n            anchorEl: evt.currentTarget,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handle close follow popover\r\n     * \r\n     * @memberof UserBox\r\n     */\r\n    handleRequestClose = () => {\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    circleList = () => {\r\n        const { circles, _, userBelongCircles } = this.props;\r\n\r\n        if (circles) {\r\n            return Object.keys(circles).map((key, index) => {\r\n                if (key.trim() !== '-Followers') {\r\n                    const isBelong = userBelongCircles.indexOf(key) > -1;\r\n\r\n                    return (<Checkbox\r\n                        key={key}\r\n                        style={{ padding: '10px' }}\r\n                        label={circles[key].name}\r\n                        labelStyle={{\r\n                            overflow: 'hidden',\r\n                            textOverflow: 'ellipsis',\r\n                            whiteSpace: 'nowrap',\r\n                            width: '100%'\r\n                        }}\r\n                        onCheck={(evt, checked) => this.handleFollowUser(checked, key)}\r\n                        checked={isBelong}\r\n                    />);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        const styles = {\r\n            paper: {\r\n                height: 254,\r\n                width: 243,\r\n                margin: 10,\r\n                textAlign: 'center',\r\n                maxWidth: '257px'\r\n            },\r\n            followButton: {\r\n                position: 'absolute',\r\n                bottom: '8px',\r\n                left: 0,\r\n                right: 0\r\n            }\r\n        };\r\n\r\n        return (\r\n            <Paper style={styles.paper} zDepth={1} className='grid-cell'>\r\n                <div style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'flex-start',\r\n                    height: '100%',\r\n                    position: 'relative',\r\n                    padding: '30px'\r\n\r\n                }}>\r\n                    <div onClick={() => this.props.goTo(`/${this.props.userId}`)} style={{ cursor: 'pointer' }}>\r\n                        <UserAvatar\r\n                            fullName={this.props.fullName}\r\n                            fileName={this.props.avatar}\r\n                            size={90}\r\n                        />\r\n                    </div>\r\n                    <div onClick={() => this.props.goTo(`/${this.props.userId}`)} className='people__name' style={{ cursor: 'pointer' }}>\r\n                        <div>\r\n                            {this.props.user.fullName}\r\n                        </div>\r\n                    </div>\r\n                    <div style={styles.followButton}>\r\n                        <FlatButton\r\n                            label={(this.props.belongCirclesCount && this.props.belongCirclesCount < 1) ? 'Follow'\r\n                                : (this.props.belongCirclesCount > 1 ? `${this.props.belongCirclesCount} Circles` : ((this.props.firstBelongCircle) ? this.props.firstBelongCircle.name : 'Follow'))}\r\n                            primary={true}\r\n                            onTouchTap={this.handleTouchTap}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Popover\r\n                    open={this.state.open}\r\n                    anchorEl={this.state.anchorEl}\r\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\r\n                    targetOrigin={{ horizontal: 'left', vertical: 'top' }}\r\n                    onRequestClose={this.handleRequestClose}\r\n                    animation={PopoverAnimationVertical}\r\n                >\r\n                    <Menu >\r\n                        <div style={{\r\n                            position: 'relative',\r\n                            display: 'block',\r\n                            maxHeight: '220px'\r\n                        }}>\r\n                            <div style={{ overflowY: 'auto', height: '100%' }}>\r\n                                {this.circleList()}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ padding: '10px' }}>\r\n                            <TextField\r\n                                hintText=\"Group name\"\r\n                                onChange={this.handleChangeName}\r\n                                value={this.state.circleName}\r\n                            /><br />\r\n                            <FlatButton label=\"ADD\" primary={true} disabled={this.state.disabledAddCircle} onClick={this.handleCreateCricle} />\r\n                        </div>\r\n                    </Menu>\r\n                </Popover>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        createCircle: (name) => dispatch(circleActions.dbAddCircle(name)),\r\n        addFollowingUser: (cid, user) => dispatch(circleActions.dbAddFollowingUser(cid, user)),\r\n        deleteFollowingUser: (cid, followingId) => dispatch(circleActions.dbDeleteFollowingUser(cid, followingId)),\r\n        goTo: (url) => dispatch(push(url))\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { uid } = state.authorize\r\n    const circles = state.circle ? (state.circle.userCircles[uid] || {}) : {}\r\n    const userBelongCircles = CircleAPI.getUserBelongCircles(circles, ownProps.userId)\r\n\r\n    return {\r\n        circles: circles,\r\n        userBelongCircles: userBelongCircles || [],\r\n        belongCirclesCount: userBelongCircles.length || 0,\r\n        firstBelongCircle: userBelongCircles ? (circles ? circles[userBelongCircles[0]] : {}) : {},\r\n        avatar: state.user.info && state.user.info[ownProps.userId] ? state.user.info[ownProps.userId].avatar || '' : '',\r\n        fullName: state.user.info && state.user.info[ownProps.userId] ? state.user.info[ownProps.userId].fullName || '' : ''\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserBox)",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/UserBox.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 486,
    "kind": "class",
    "name": "UserBox",
    "memberof": "app/components/UserBox.jsx",
    "static": true,
    "longname": "app/components/UserBox.jsx~UserBox",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/UserBox.jsx",
    "importStyle": "{UserBox}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 487,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/components/UserBox.jsx~UserBox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/UserBox.jsx~UserBox#constructor",
    "access": "public",
    "description": "Component constructor",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "is an object properties of component"
      }
    ]
  },
  {
    "__docId__": 488,
    "kind": "member",
    "name": "state",
    "memberof": "app/components/UserBox.jsx~UserBox",
    "static": false,
    "longname": "app/components/UserBox.jsx~UserBox#state",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "{\"open\": *, \"circleName\": *, \"disabledAddCircle\": boolean}"
      ]
    }
  },
  {
    "__docId__": 489,
    "kind": "member",
    "name": "handleFollowUser",
    "memberof": "app/components/UserBox.jsx~UserBox",
    "static": false,
    "longname": "app/components/UserBox.jsx~UserBox#handleFollowUser",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 490,
    "kind": "member",
    "name": "handleCreateCricle",
    "memberof": "app/components/UserBox.jsx~UserBox",
    "static": false,
    "longname": "app/components/UserBox.jsx~UserBox#handleCreateCricle",
    "access": "public",
    "description": "Handle create circle",
    "lineNumber": 57,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 491,
    "kind": "member",
    "name": "handleChangeName",
    "memberof": "app/components/UserBox.jsx~UserBox",
    "static": false,
    "longname": "app/components/UserBox.jsx~UserBox#handleChangeName",
    "access": "public",
    "description": "Handle change group name input to the state",
    "lineNumber": 75,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 492,
    "kind": "member",
    "name": "handleTouchTap",
    "memberof": "app/components/UserBox.jsx~UserBox",
    "static": false,
    "longname": "app/components/UserBox.jsx~UserBox#handleTouchTap",
    "access": "public",
    "description": "Handle touch tab on follow popover",
    "lineNumber": 87,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 493,
    "kind": "member",
    "name": "handleRequestClose",
    "memberof": "app/components/UserBox.jsx~UserBox",
    "static": false,
    "longname": "app/components/UserBox.jsx~UserBox#handleRequestClose",
    "access": "public",
    "description": "Handle close follow popover",
    "lineNumber": 102,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 494,
    "kind": "member",
    "name": "circleList",
    "memberof": "app/components/UserBox.jsx~UserBox",
    "static": false,
    "longname": "app/components/UserBox.jsx~UserBox#circleList",
    "access": "public",
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 495,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/UserBox.jsx~UserBox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/UserBox.jsx~UserBox#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 136,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 496,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/UserBox.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/UserBox.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/UserBox.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 227,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 497,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/UserBox.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/UserBox.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/UserBox.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 243,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 498,
    "kind": "file",
    "name": "app/components/UserBoxList.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// - Import app components\r\nimport UserBox from 'UserBox';\r\n\r\nexport class UserBoxList extends Component {\r\n    userList = () => {\r\n        const { users, uid } = this.props;\r\n\r\n        if (users) {\r\n            return Object.keys(users).map((key, index) => {\r\n                if (uid !== key)\r\n                    return <UserBox key={key} userId={key} user={users[key]} />\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        return (\r\n            <div className='grid grid__1of4 grid__space-around'>\r\n                {this.userList()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { uid } = state.authorize\r\n    return {\r\n        uid\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserBoxList)",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/UserBoxList.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 499,
    "kind": "class",
    "name": "UserBoxList",
    "memberof": "app/components/UserBoxList.jsx",
    "static": true,
    "longname": "app/components/UserBoxList.jsx~UserBoxList",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/UserBoxList.jsx",
    "importStyle": "{UserBoxList}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 500,
    "kind": "member",
    "name": "userList",
    "memberof": "app/components/UserBoxList.jsx~UserBoxList",
    "static": false,
    "longname": "app/components/UserBoxList.jsx~UserBoxList#userList",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 501,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/UserBoxList.jsx~UserBoxList",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/UserBoxList.jsx~UserBoxList#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 23,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 502,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/UserBoxList.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/UserBoxList.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/UserBoxList.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 503,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/UserBoxList.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/UserBoxList.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/UserBoxList.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 504,
    "kind": "file",
    "name": "app/components/YourCircles.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { List } from 'material-ui/List';\r\n\r\n// - Import app components\r\nimport Circle from 'Circle';\r\n\r\nexport class YourCircles extends Component {\r\n\r\n    circleList = () => {\r\n        const { circles, uid } = this.props;\r\n        let parsedCircles = []\r\n\r\n        if (circles) {\r\n            Object.keys(circles).map((key, index) => {\r\n                if (key.trim() !== '-Followers')\r\n                    parsedCircles.push(<Circle key={key} circle={circles[key]} id={key} uid={uid} />)\r\n\r\n            })\r\n        }\r\n\r\n        return parsedCircles;\r\n    }\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        const circleItems = this.circleList();\r\n\r\n        return (\r\n            <div style={{maxWidth: '800px', margin: '40px auto'}}>\r\n                {(circleItems && circleItems.length !== 0) ? \r\n                    (<div>\r\n                        <div className='profile__title'>\r\n                            Your circles\r\n                        </div>\r\n                        <List>\r\n                            {circleItems}\r\n                        </List>\r\n                        <div style={{ height: '24px' }}></div>\r\n                    </div>) : ''}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Map dispatch to props\r\n * @param  {func} dispatch is the function to dispatch action to reducers\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n    }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n * @param  {object} state is the obeject from redux store\r\n * @param  {object} ownProps is the props belong to component\r\n * @return {object}          props of component\r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { uid } = state.authorize\r\n    return {\r\n        uid,\r\n        circles: state.circle ? state.circle.userCircles[uid] : {},\r\n\r\n    }\r\n}\r\n\r\n// - Connect component to redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(YourCircles)",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/components/YourCircles.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 505,
    "kind": "class",
    "name": "YourCircles",
    "memberof": "app/components/YourCircles.jsx",
    "static": true,
    "longname": "app/components/YourCircles.jsx~YourCircles",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/components/YourCircles.jsx",
    "importStyle": "{YourCircles}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 506,
    "kind": "member",
    "name": "circleList",
    "memberof": "app/components/YourCircles.jsx~YourCircles",
    "static": false,
    "longname": "app/components/YourCircles.jsx~YourCircles#circleList",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 507,
    "kind": "method",
    "name": "render",
    "memberof": "app/components/YourCircles.jsx~YourCircles",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/components/YourCircles.jsx~YourCircles#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 29,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 508,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "app/components/YourCircles.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/YourCircles.jsx~mapDispatchToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/YourCircles.jsx",
    "importStyle": null,
    "description": "Map dispatch to props",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "is the function to dispatch action to reducers"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 509,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "app/components/YourCircles.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/components/YourCircles.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/components/YourCircles.jsx",
    "importStyle": null,
    "description": "Map state to props",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "is the obeject from redux store"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownProps",
        "description": "is the props belong to component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "props of component"
    },
    "ignore": true
  },
  {
    "__docId__": 510,
    "kind": "file",
    "name": "app/constants/actionTypes.jsx",
    "content": "/* post actions */\r\nexport const ADD_IMAGE_POST = 'ADD_IMAGE_POST';\r\nexport const ADD_VIDEO_POST = 'ADD_VIDEO_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const UPDATE_POST = 'UPDATE_POST';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_LIST_POST = 'ADD_LIST_POST';\r\nexport const CLEAR_ALL_DATA_POST = 'CLEAR_ALL_DATA_POST';\r\n\r\n/* image gallery actions */\r\nexport const OPEN_IMAGE_GALLERY = 'OPEN_IMAGE_GALLERY';\r\nexport const ADD_IMAGE_GALLERY = 'ADD_IMAGE_GALLERY';\r\nexport const ADD_IMAGE_LIST_GALLERY = 'ADD_IMAGES_LIST_GALLERY';\r\nexport const IMAGE_SELECT_GALLERY = 'IMAGE_SELECT_GALLERY';\r\nexport const CLEARS_SELECT_IMAGE_GALLERY = 'CLEARS_SELECT_IMAGE_GALLERY';\r\nexport const CLEAT_ALL_DATA_IMAGE_GALLERY = 'CLEAT_ALL_DATA_IMAGE_GALLERY';\r\nexport const DELETE_IMAGE = 'DELETE_IMAGE';\r\nexport const SET_IMAGE_URL = 'SET_IMAGE_URL';\r\nexport const SEND_IMAGE_REQUEST = 'SEND_IMAGE_REQUEST';\r\n\r\n/* image uploader actions */\r\nexport const OPEN_IMAGE_UPLOADER = 'OPEN_IMAGE_UPLOADER';\r\nexport const OPEN_IMAGE_EDITOR = 'OPEN_IMAGE_EDITOR';\r\n\r\n/* comment actions */\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_COMMENT_LIST = 'ADD_COMMENT_LIST';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const CLEAR_ALL_DATA_COMMENT = 'CLEAR_ALL_DATA_COMMENT';\r\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT';\r\nexport const CLOSE_COMMENT_EDITOR = 'CLOSE_COMMENT_EDITOR';\r\nexport const OPEN_COMMENT_EDITOR = 'OPEN_COMMENT_EDITOR';\r\n\r\n/* vote actions */\r\nexport const ADD_VOTE = 'ADD_VOTE';\r\nexport const DELETE_VOTE = 'DELETE_VOTE';\r\nexport const ADD_VOTE_LIST = 'ADD_VOTE_LIST';\r\nexport const CLEAR_ALL_DATA_VOTE = 'CLEAR_ALL_DATA_VOTE';\r\n\r\n/* users action */\r\nexport const ADD_USERS = 'ADD_USERS';\r\nexport const ADD_USER_INFO = 'ADD_USER_INFO';\r\nexport const UPDATE_USER_INFO = 'UPDATE_USER_INFO';\r\nexport const USER_INFO = 'USER_INFO';\r\nexport const CLEAR_ALL_DATA_USER = 'CLEAR_ALL_DATA_USER';\r\nexport const OPEN_EDIT_PROFILE = 'OPEN_EDIT_PROFILE';\r\nexport const CLOSE_EDIT_PROFILE = 'CLOSE_EDIT_PROFILE';\r\nexport const ADD_PEOPLE_INFO = 'ADD_PEOPLE_INFO';\r\n\r\n/* circle actions */\r\nexport const ADD_CIRCLE = 'ADD_CIRCLE';\r\nexport const DELETE_CIRCLE = 'DELETE_CIRCLE';\r\nexport const UPDATE_CIRCLE = 'UPDATE_CIRCLE';\r\nexport const ADD_LIST_CIRCLE = 'ADD_LIST_CIRCLE';\r\nexport const CLEAR_ALL_CIRCLES = 'CLEAR_ALL_CIRCLES';\r\nexport const OPEN_CIRCLE_SETTINGS = 'OPEN_CIRCLE_SETTINGS';\r\nexport const CLOSE_CIRCLE_SETTINGS = 'CLOSE_CIRCLE_SETTINGS';\r\nexport const ADD_FOLLOWING_USER = 'ADD_FOLLOWING_USER';\r\nexport const DELETE_FOLLOWING_USER = 'DELETE_FOLLOWING_USER';\r\n\r\n/* notify actions */\r\nexport const ADD_NOTIFY = 'ADD_NOTIFY';\r\nexport const ADD_NOTIFY_LIST = 'ADD_NOTIFY_LIST';\r\nexport const DELETE_NOTIFY = 'DELETE_NOTIFY';\r\nexport const SEEN_NOTIFY = 'SEEN_NOTIFY';\r\nexport const CLEAR_ALL_DATA_NOTIFY = 'CLEAR_ALL_DATA_NOTIFY';\r\n\r\n/* authorize actions */\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const UPDATE_PASSWORD = 'UPDATE_PASSWORD';\r\n\r\n/* file actions */\r\nexport const UPLOAD_FILE = 'UPLOAD_FILE';\r\nexport const UPLOAD_FILE_ERROR = 'UPLOAD_FILE_ERROR';\r\nexport const UPLOAD_FILE_COMPLETE = 'UPLOAD_FILE_COMPLETE';\r\nexport const DOWNLOAD_FILE = 'DOWNLOAD_FILE';\r\n\r\n/* global actions */\r\nexport const PROGRESS_CHANGE = 'PROGRESS_CHANGE';\r\nexport const DEFAULT_DATA_DISABLE = 'DEFAULT_DATA_DISABLE';\r\nexport const DEFAULT_DATA_ENABLE = 'DEFAULT_DATA_ENABLE';\r\nexport const LOADING = 'LOADING';\r\nexport const HIDE_MESSAGE_GLOBAL = 'HIDE_MESSAGE_GLOBAL';\r\nexport const SHOW_ERROR_MESSAGE_GLOBAL = 'SHOW_ERROR_MESSAGE_GLOBAL';\r\nexport const SHOW_NORMAL_MESSAGE_GLOBAL = 'SHOW_NORMAL_MESSAGE_GLOBAL';\r\nexport const SHOW_SEND_REQUEST_MESSAGE_GLOBAL = 'SHOW_SEND_REQUEST_MESSAGE_GLOBAL';\r\nexport const SHOW_REQUEST_SUCCESS_MESSAGE_GLOBAL = 'SHOW_REQUEST_SUCCESS_MESSAGE_GLOBAL';\r\nexport const SET_HEADER_TITLE = 'SET_HEADER_TITLE';\r\nexport const SHOW_TOP_LOADING = 'SHOW_TOP_LOADING';\r\nexport const HIDE_TOP_LOADING = 'HIDE_TOP_LOADING';\r\nexport const TEMP = 'TEMP';",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/constants/actionTypes.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 511,
    "kind": "variable",
    "name": "ADD_IMAGE_POST",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~ADD_IMAGE_POST",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{ADD_IMAGE_POST}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 512,
    "kind": "variable",
    "name": "ADD_VIDEO_POST",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~ADD_VIDEO_POST",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{ADD_VIDEO_POST}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 513,
    "kind": "variable",
    "name": "ADD_POST",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~ADD_POST",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{ADD_POST}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 514,
    "kind": "variable",
    "name": "UPDATE_POST",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~UPDATE_POST",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{UPDATE_POST}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 515,
    "kind": "variable",
    "name": "DELETE_POST",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~DELETE_POST",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{DELETE_POST}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 516,
    "kind": "variable",
    "name": "ADD_LIST_POST",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~ADD_LIST_POST",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{ADD_LIST_POST}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 517,
    "kind": "variable",
    "name": "CLEAR_ALL_DATA_POST",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~CLEAR_ALL_DATA_POST",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{CLEAR_ALL_DATA_POST}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 518,
    "kind": "variable",
    "name": "OPEN_IMAGE_GALLERY",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~OPEN_IMAGE_GALLERY",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{OPEN_IMAGE_GALLERY}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 519,
    "kind": "variable",
    "name": "ADD_IMAGE_GALLERY",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~ADD_IMAGE_GALLERY",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{ADD_IMAGE_GALLERY}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 520,
    "kind": "variable",
    "name": "ADD_IMAGE_LIST_GALLERY",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~ADD_IMAGE_LIST_GALLERY",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{ADD_IMAGE_LIST_GALLERY}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 521,
    "kind": "variable",
    "name": "IMAGE_SELECT_GALLERY",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~IMAGE_SELECT_GALLERY",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{IMAGE_SELECT_GALLERY}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 522,
    "kind": "variable",
    "name": "CLEARS_SELECT_IMAGE_GALLERY",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~CLEARS_SELECT_IMAGE_GALLERY",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{CLEARS_SELECT_IMAGE_GALLERY}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 523,
    "kind": "variable",
    "name": "CLEAT_ALL_DATA_IMAGE_GALLERY",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~CLEAT_ALL_DATA_IMAGE_GALLERY",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{CLEAT_ALL_DATA_IMAGE_GALLERY}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 524,
    "kind": "variable",
    "name": "DELETE_IMAGE",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~DELETE_IMAGE",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{DELETE_IMAGE}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 525,
    "kind": "variable",
    "name": "SET_IMAGE_URL",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~SET_IMAGE_URL",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{SET_IMAGE_URL}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 526,
    "kind": "variable",
    "name": "SEND_IMAGE_REQUEST",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~SEND_IMAGE_REQUEST",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{SEND_IMAGE_REQUEST}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 527,
    "kind": "variable",
    "name": "OPEN_IMAGE_UPLOADER",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~OPEN_IMAGE_UPLOADER",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{OPEN_IMAGE_UPLOADER}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 528,
    "kind": "variable",
    "name": "OPEN_IMAGE_EDITOR",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~OPEN_IMAGE_EDITOR",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{OPEN_IMAGE_EDITOR}",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 529,
    "kind": "variable",
    "name": "ADD_COMMENT",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~ADD_COMMENT",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{ADD_COMMENT}",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 530,
    "kind": "variable",
    "name": "ADD_COMMENT_LIST",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~ADD_COMMENT_LIST",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{ADD_COMMENT_LIST}",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 531,
    "kind": "variable",
    "name": "DELETE_COMMENT",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~DELETE_COMMENT",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{DELETE_COMMENT}",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 532,
    "kind": "variable",
    "name": "CLEAR_ALL_DATA_COMMENT",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~CLEAR_ALL_DATA_COMMENT",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{CLEAR_ALL_DATA_COMMENT}",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 533,
    "kind": "variable",
    "name": "UPDATE_COMMENT",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~UPDATE_COMMENT",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{UPDATE_COMMENT}",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 534,
    "kind": "variable",
    "name": "CLOSE_COMMENT_EDITOR",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~CLOSE_COMMENT_EDITOR",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{CLOSE_COMMENT_EDITOR}",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 535,
    "kind": "variable",
    "name": "OPEN_COMMENT_EDITOR",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~OPEN_COMMENT_EDITOR",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{OPEN_COMMENT_EDITOR}",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 536,
    "kind": "variable",
    "name": "ADD_VOTE",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~ADD_VOTE",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{ADD_VOTE}",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 537,
    "kind": "variable",
    "name": "DELETE_VOTE",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~DELETE_VOTE",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{DELETE_VOTE}",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 538,
    "kind": "variable",
    "name": "ADD_VOTE_LIST",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~ADD_VOTE_LIST",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{ADD_VOTE_LIST}",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 539,
    "kind": "variable",
    "name": "CLEAR_ALL_DATA_VOTE",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~CLEAR_ALL_DATA_VOTE",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{CLEAR_ALL_DATA_VOTE}",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 540,
    "kind": "variable",
    "name": "ADD_USERS",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~ADD_USERS",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{ADD_USERS}",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 541,
    "kind": "variable",
    "name": "ADD_USER_INFO",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~ADD_USER_INFO",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{ADD_USER_INFO}",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 542,
    "kind": "variable",
    "name": "UPDATE_USER_INFO",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~UPDATE_USER_INFO",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{UPDATE_USER_INFO}",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 543,
    "kind": "variable",
    "name": "USER_INFO",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~USER_INFO",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{USER_INFO}",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 544,
    "kind": "variable",
    "name": "CLEAR_ALL_DATA_USER",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~CLEAR_ALL_DATA_USER",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{CLEAR_ALL_DATA_USER}",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 545,
    "kind": "variable",
    "name": "OPEN_EDIT_PROFILE",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~OPEN_EDIT_PROFILE",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{OPEN_EDIT_PROFILE}",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 546,
    "kind": "variable",
    "name": "CLOSE_EDIT_PROFILE",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~CLOSE_EDIT_PROFILE",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{CLOSE_EDIT_PROFILE}",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 547,
    "kind": "variable",
    "name": "ADD_PEOPLE_INFO",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~ADD_PEOPLE_INFO",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{ADD_PEOPLE_INFO}",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 548,
    "kind": "variable",
    "name": "ADD_CIRCLE",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~ADD_CIRCLE",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{ADD_CIRCLE}",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 549,
    "kind": "variable",
    "name": "DELETE_CIRCLE",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~DELETE_CIRCLE",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{DELETE_CIRCLE}",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 550,
    "kind": "variable",
    "name": "UPDATE_CIRCLE",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~UPDATE_CIRCLE",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{UPDATE_CIRCLE}",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 551,
    "kind": "variable",
    "name": "ADD_LIST_CIRCLE",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~ADD_LIST_CIRCLE",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{ADD_LIST_CIRCLE}",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 552,
    "kind": "variable",
    "name": "CLEAR_ALL_CIRCLES",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~CLEAR_ALL_CIRCLES",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{CLEAR_ALL_CIRCLES}",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 553,
    "kind": "variable",
    "name": "OPEN_CIRCLE_SETTINGS",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~OPEN_CIRCLE_SETTINGS",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{OPEN_CIRCLE_SETTINGS}",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 554,
    "kind": "variable",
    "name": "CLOSE_CIRCLE_SETTINGS",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~CLOSE_CIRCLE_SETTINGS",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{CLOSE_CIRCLE_SETTINGS}",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 555,
    "kind": "variable",
    "name": "ADD_FOLLOWING_USER",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~ADD_FOLLOWING_USER",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{ADD_FOLLOWING_USER}",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 556,
    "kind": "variable",
    "name": "DELETE_FOLLOWING_USER",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~DELETE_FOLLOWING_USER",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{DELETE_FOLLOWING_USER}",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 557,
    "kind": "variable",
    "name": "ADD_NOTIFY",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~ADD_NOTIFY",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{ADD_NOTIFY}",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 558,
    "kind": "variable",
    "name": "ADD_NOTIFY_LIST",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~ADD_NOTIFY_LIST",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{ADD_NOTIFY_LIST}",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 559,
    "kind": "variable",
    "name": "DELETE_NOTIFY",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~DELETE_NOTIFY",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{DELETE_NOTIFY}",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 560,
    "kind": "variable",
    "name": "SEEN_NOTIFY",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~SEEN_NOTIFY",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{SEEN_NOTIFY}",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 561,
    "kind": "variable",
    "name": "CLEAR_ALL_DATA_NOTIFY",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~CLEAR_ALL_DATA_NOTIFY",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{CLEAR_ALL_DATA_NOTIFY}",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 562,
    "kind": "variable",
    "name": "LOGIN",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~LOGIN",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{LOGIN}",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 563,
    "kind": "variable",
    "name": "LOGOUT",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~LOGOUT",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{LOGOUT}",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 564,
    "kind": "variable",
    "name": "SIGNUP",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~SIGNUP",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{SIGNUP}",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 565,
    "kind": "variable",
    "name": "UPDATE_PASSWORD",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~UPDATE_PASSWORD",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{UPDATE_PASSWORD}",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 566,
    "kind": "variable",
    "name": "UPLOAD_FILE",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~UPLOAD_FILE",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{UPLOAD_FILE}",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 567,
    "kind": "variable",
    "name": "UPLOAD_FILE_ERROR",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~UPLOAD_FILE_ERROR",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{UPLOAD_FILE_ERROR}",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 568,
    "kind": "variable",
    "name": "UPLOAD_FILE_COMPLETE",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~UPLOAD_FILE_COMPLETE",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{UPLOAD_FILE_COMPLETE}",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 569,
    "kind": "variable",
    "name": "DOWNLOAD_FILE",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~DOWNLOAD_FILE",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{DOWNLOAD_FILE}",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 570,
    "kind": "variable",
    "name": "PROGRESS_CHANGE",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~PROGRESS_CHANGE",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{PROGRESS_CHANGE}",
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 571,
    "kind": "variable",
    "name": "DEFAULT_DATA_DISABLE",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~DEFAULT_DATA_DISABLE",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{DEFAULT_DATA_DISABLE}",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 572,
    "kind": "variable",
    "name": "DEFAULT_DATA_ENABLE",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~DEFAULT_DATA_ENABLE",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{DEFAULT_DATA_ENABLE}",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 573,
    "kind": "variable",
    "name": "LOADING",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~LOADING",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{LOADING}",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 574,
    "kind": "variable",
    "name": "HIDE_MESSAGE_GLOBAL",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~HIDE_MESSAGE_GLOBAL",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{HIDE_MESSAGE_GLOBAL}",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 575,
    "kind": "variable",
    "name": "SHOW_ERROR_MESSAGE_GLOBAL",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~SHOW_ERROR_MESSAGE_GLOBAL",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{SHOW_ERROR_MESSAGE_GLOBAL}",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 576,
    "kind": "variable",
    "name": "SHOW_NORMAL_MESSAGE_GLOBAL",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~SHOW_NORMAL_MESSAGE_GLOBAL",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{SHOW_NORMAL_MESSAGE_GLOBAL}",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 577,
    "kind": "variable",
    "name": "SHOW_SEND_REQUEST_MESSAGE_GLOBAL",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~SHOW_SEND_REQUEST_MESSAGE_GLOBAL",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{SHOW_SEND_REQUEST_MESSAGE_GLOBAL}",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 578,
    "kind": "variable",
    "name": "SHOW_REQUEST_SUCCESS_MESSAGE_GLOBAL",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~SHOW_REQUEST_SUCCESS_MESSAGE_GLOBAL",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{SHOW_REQUEST_SUCCESS_MESSAGE_GLOBAL}",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 579,
    "kind": "variable",
    "name": "SET_HEADER_TITLE",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~SET_HEADER_TITLE",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{SET_HEADER_TITLE}",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 580,
    "kind": "variable",
    "name": "SHOW_TOP_LOADING",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~SHOW_TOP_LOADING",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{SHOW_TOP_LOADING}",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 581,
    "kind": "variable",
    "name": "HIDE_TOP_LOADING",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~HIDE_TOP_LOADING",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{HIDE_TOP_LOADING}",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 582,
    "kind": "variable",
    "name": "TEMP",
    "memberof": "app/constants/actionTypes.jsx",
    "static": true,
    "longname": "app/constants/actionTypes.jsx~TEMP",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/constants/actionTypes.jsx",
    "importStyle": "{TEMP}",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 583,
    "kind": "file",
    "name": "app/firebase/index.js",
    "content": "import firebase from 'firebase';\r\n\r\ntry {\r\n    let config = {\r\n        apiKey: process.env.API_KEY,\r\n        authDomain: process.env.AUTH_DOMAIN,\r\n        databaseURL: process.env.DATABASE_URL,\r\n        projectId: process.env.PROJECT_ID,\r\n        storageBucket: process.env.STORAGE_BUCKET,\r\n        messagingSenderId: process.env.MESSAGING_SENDER_ID\r\n    };\r\n\r\n    firebase.initializeApp(config);\r\n} catch (e) {}\r\n\r\n// - Storage reference\r\nexport let storageRef = firebase.storage().ref();\r\n\r\n// - Database authorize\r\nexport let firebaseAuth = firebase.auth;\r\nexport let firebaseRef = firebase.database().ref();\r\n\r\n// - Firebase default\r\nexport default firebase;",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/firebase/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 584,
    "kind": "variable",
    "name": "storageRef",
    "memberof": "app/firebase/index.js",
    "static": true,
    "longname": "app/firebase/index.js~storageRef",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/firebase/index.js",
    "importStyle": "{storageRef}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 585,
    "kind": "variable",
    "name": "firebaseAuth",
    "memberof": "app/firebase/index.js",
    "static": true,
    "longname": "app/firebase/index.js~firebaseAuth",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/firebase/index.js",
    "importStyle": "{firebaseAuth}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 586,
    "kind": "variable",
    "name": "firebaseRef",
    "memberof": "app/firebase/index.js",
    "static": true,
    "longname": "app/firebase/index.js~firebaseRef",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/firebase/index.js",
    "importStyle": "{firebaseRef}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 587,
    "kind": "file",
    "name": "app/helpers/index.jsx",
    "content": "import { firebaseAuth, firebaseRef } from 'app/firebase/';\r\n\r\nexport function auth(email, pw, other) {\r\n    return firebaseAuth().createUserWithEmailAndPassword(email, pw).then(u => saveUser(u, other));\r\n}\r\n\r\nexport function logout() {\r\n    return firebaseAuth().signOut();\r\n}\r\n\r\nexport function login(email, pw) {\r\n    return firebaseAuth().signInWithEmailAndPassword(email, pw);\r\n}\r\n\r\nexport function resetPassword(email) {\r\n    return firebaseAuth().sendPasswordResetEmail(email);\r\n}\r\n\r\nexport function saveUser(user, other) {\r\n    return firebaseRef.child(`users/${user.uid}/info`)\r\n        .set({\r\n            ...other,\r\n            email: user.email,\r\n            uid: user.uid\r\n        })\r\n        .then(() => user);\r\n}\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/helpers/index.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 588,
    "kind": "function",
    "name": "auth",
    "memberof": "app/helpers/index.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/helpers/index.jsx~auth",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/helpers/index.jsx",
    "importStyle": "{auth}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "email",
        "types": [
          "*"
        ]
      },
      {
        "name": "pw",
        "types": [
          "*"
        ]
      },
      {
        "name": "other",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 589,
    "kind": "function",
    "name": "logout",
    "memberof": "app/helpers/index.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/helpers/index.jsx~logout",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/helpers/index.jsx",
    "importStyle": "{logout}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 590,
    "kind": "function",
    "name": "login",
    "memberof": "app/helpers/index.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/helpers/index.jsx~login",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/helpers/index.jsx",
    "importStyle": "{login}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "email",
        "types": [
          "*"
        ]
      },
      {
        "name": "pw",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 591,
    "kind": "function",
    "name": "resetPassword",
    "memberof": "app/helpers/index.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/helpers/index.jsx~resetPassword",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/helpers/index.jsx",
    "importStyle": "{resetPassword}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "email",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 592,
    "kind": "function",
    "name": "saveUser",
    "memberof": "app/helpers/index.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/helpers/index.jsx~saveUser",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/helpers/index.jsx",
    "importStyle": "{saveUser}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "user",
        "types": [
          "*"
        ]
      },
      {
        "name": "other",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 593,
    "kind": "file",
    "name": "app/layouts/DialogTitle.jsx",
    "content": "import React, { Component } from 'react';\r\nimport { grey400 } from 'material-ui/styles/colors';\r\nimport SvgClose from 'material-ui/svg-icons/navigation/close';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nimport Divider from 'material-ui/Divider';\r\n\r\nexport default class DialogTitle extends Component {\r\n\r\n    /**\r\n     * Reneder component DOM\r\n     * @return {react element} return the DOM which rendered by component\r\n     */\r\n    render() {\r\n        const styles = {\r\n            contain: {\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                justifyContent: \"space-between\"\r\n            },\r\n            title: {\r\n                color: 'rgba(0,0,0,0.87)',\r\n                flex: '1 1',\r\n                font: '500 20px Roboto,RobotoDraft,Helvetica,Arial,sans-serif'\r\n            }\r\n        };\r\n\r\n        const { buttonLabel, disabledButton, onClickButton, onRequestClose, title } = this.props;\r\n\r\n        return (\r\n            <div className='g__dialog-title'>\r\n                <div style={styles.contain}>\r\n                    <div style={{ paddingRight: '10px' }}>\r\n                        <SvgClose onClick={onRequestClose} hoverColor={grey400} style={{ cursor: 'pointer' }} />\r\n                    </div>\r\n                    <div style={styles.title}>\r\n                        {title || ''}\r\n                    </div>\r\n                    {buttonLabel ? (<div style={{ marginTop: '-9px' }}>\r\n                        <FlatButton label={buttonLabel || ''} primary={true} disabled={disabledButton ? disabledButton : false} onClick={onClickButton || (() => _)} />\r\n                    </div>) : ''}\r\n                </div>\r\n                <Divider />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/layouts/DialogTitle.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 594,
    "kind": "class",
    "name": "DialogTitle",
    "memberof": "app/layouts/DialogTitle.jsx",
    "static": true,
    "longname": "app/layouts/DialogTitle.jsx~DialogTitle",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/layouts/DialogTitle.jsx",
    "importStyle": "DialogTitle",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 595,
    "kind": "method",
    "name": "render",
    "memberof": "app/layouts/DialogTitle.jsx~DialogTitle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/layouts/DialogTitle.jsx~DialogTitle#render",
    "access": "public",
    "description": "Reneder component DOM",
    "lineNumber": 13,
    "return": {
      "nullable": null,
      "types": [
        "react element"
      ],
      "spread": false,
      "description": "return the DOM which rendered by component"
    },
    "params": []
  },
  {
    "__docId__": 596,
    "kind": "file",
    "name": "app/layouts/IconButtonElement.jsx",
    "content": "import React, { Component } from 'react';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\r\nimport { grey400 } from 'material-ui/styles/colors';\r\n\r\n/**\r\n * DOM styles\r\n * \r\n * @memberof Post\r\n */\r\nconst styles = {\r\n    iconButton: {\r\n        width: 24,\r\n        height: 24\r\n    }\r\n};\r\n\r\nconst IconButtonElement = (\r\n    <IconButton style={styles.iconButton} iconStyle={styles.iconButton}\r\n        touch={true}\r\n    >\r\n        <MoreVertIcon color={grey400} viewBox='9 0 24 24' />\r\n    </IconButton>\r\n);\r\n\r\nexport default IconButtonElement;",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/layouts/IconButtonElement.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 597,
    "kind": "variable",
    "name": "styles",
    "memberof": "app/layouts/IconButtonElement.jsx",
    "static": true,
    "longname": "app/layouts/IconButtonElement.jsx~styles",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/layouts/IconButtonElement.jsx",
    "importStyle": null,
    "description": "DOM styles",
    "lineNumber": 11,
    "type": {
      "types": [
        "{\"iconButton\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 598,
    "kind": "variable",
    "name": "IconButtonElement",
    "memberof": "app/layouts/IconButtonElement.jsx",
    "static": true,
    "longname": "app/layouts/IconButtonElement.jsx~IconButtonElement",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/layouts/IconButtonElement.jsx",
    "importStyle": "IconButtonElement",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 599,
    "kind": "file",
    "name": "app/reducers/authorizeReducer.jsx",
    "content": "// - Import action types\r\nimport * as types from 'actionTypes';\r\n\r\n// Default state\r\nlet defaultState = {\r\n    uid: 0,\r\n    authed: false,\r\n    updatePassword: false,\r\n    guest: false\r\n};\r\n\r\n/**\r\n *  Authorize reducer\r\n * @param {object} state \r\n * @param {object} action \r\n */\r\nexport let authorizeReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case types.LOGIN:\r\n            return {\r\n                ...state,\r\n                uid: action.uid,\r\n                authed: true,\r\n                guest: false\r\n            };\r\n        case types.LOGOUT:\r\n            return {\r\n                ...state,\r\n                uid: 0,\r\n                authed: false,\r\n                guest: true\r\n            };\r\n        case types.SIGNUP:\r\n            return {\r\n                ...state,\r\n                uid: action.uid\r\n            };\r\n        case types.UPDATE_PASSWORD:\r\n            return {\r\n                ...state,\r\n                updatePassword: action.updatePassword\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/reducers/authorizeReducer.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 600,
    "kind": "variable",
    "name": "defaultState",
    "memberof": "app/reducers/authorizeReducer.jsx",
    "static": true,
    "longname": "app/reducers/authorizeReducer.jsx~defaultState",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/reducers/authorizeReducer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "{\"uid\": *, \"authed\": *, \"updatePassword\": *, \"guest\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 601,
    "kind": "function",
    "name": "authorizeReducer",
    "memberof": "app/reducers/authorizeReducer.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/reducers/authorizeReducer.jsx~authorizeReducer",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/reducers/authorizeReducer.jsx",
    "importStyle": "{authorizeReducer}",
    "description": " Authorize reducer",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 602,
    "kind": "file",
    "name": "app/reducers/circleReducer.jsx",
    "content": "let uuid = require('uuid');\r\nimport moment from 'moment';\r\nimport _ from 'lodash';\r\n\r\n// - Import action types\r\nimport * as types from 'actionTypes';\r\n\r\n// Default State\r\nlet defaultState = {\r\n    userCircles: {},\r\n    loaded: false\r\n};\r\n\r\n/**\r\n * Circle reducer\r\n * @param {object} state \r\n * @param {object} action \r\n */\r\nexport let circleReducer = (state = defaultState, action) => {\r\n    const { payload } = action;\r\n    switch (action.type) {\r\n        case types.CLEAR_ALL_CIRCLES:\r\n            return defaultState;\r\n        case types.ADD_CIRCLE:\r\n            return {\r\n                ...state,\r\n                userCircles: {\r\n                    ...state.userCircles,\r\n                    [payload.uid]: {\r\n                        ...state.userCircles[payload.uid],\r\n                        [payload.circle.id]: { ...payload.circle }\r\n                    }\r\n                }\r\n            };\r\n        case types.UPDATE_CIRCLE:\r\n            return {\r\n                ...state,\r\n                userCircles: {\r\n                    ...state.userCircles,\r\n                    [payload.uid]: {\r\n                        ...state.userCircles[payload.uid],\r\n                        [payload.circle.id]: {\r\n                            ...state.userCircles[payload.uid][payload.circle.id],\r\n                            ...payload.circle,\r\n                            openCircleSettings: false\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        case types.DELETE_CIRCLE:\r\n            let filteredCircles = {};\r\n            Object.keys(state.userCircles[payload.uid]).map((key) => {\r\n                if (key !== payload.id) {\r\n                    return _.merge(filteredCircles, { [key]: { ...state.userCircles[payload.uid][key] } });\r\n                }\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                userCircles: {\r\n                    ...state.userCircles,\r\n                    [payload.uid]: {\r\n                        ...filteredCircles\r\n                    }\r\n                }\r\n            };\r\n        case types.ADD_LIST_CIRCLE:\r\n            return {\r\n                ...state,\r\n                userCircles: {\r\n                    ...state.userCircles,\r\n                    [payload.uid]: {\r\n                        ...state.userCircles[payload.uid],\r\n                        ...payload.circles\r\n                    }\r\n                },\r\n                loaded: true\r\n            };\r\n        case types.ADD_FOLLOWING_USER:\r\n            return {\r\n                ...state,\r\n                userCircles: {\r\n                    ...state.userCircles,\r\n                    [payload.uid]: {\r\n                        ...state.userCircles[payload.uid],\r\n                        [payload.cid]: {\r\n                            ...state.userCircles[payload.uid][payload.cid],\r\n                            users: {\r\n                                ...state.userCircles[payload.uid][payload.cid].users,\r\n                                [payload.followingId]: {\r\n                                    ...payload.userCircle\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        case types.DELETE_FOLLOWING_USER:\r\n            let filteredUserCircle = {};\r\n            Object.keys(state.userCircles[payload.uid][payload.cid].users).map((key) => {\r\n                if (key !== payload.followingId) {\r\n                    return _.merge(filteredUserCircle, { [key]: { ...state.userCircles[payload.uid][payload.cid].users[key] } });\r\n                }\r\n            });\r\n            return {\r\n                ...state,\r\n                userCircles: {\r\n                    ...state.userCircles,\r\n                    [payload.uid]: {\r\n                        ...state.userCircles[payload.uid],\r\n                        [payload.cid]: {\r\n                            ...state.userCircles[payload.uid][payload.cid],\r\n                            users: {\r\n                                ...filteredUserCircle\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        case types.CLOSE_CIRCLE_SETTINGS:\r\n            return {\r\n                ...state,\r\n                userCircles: {\r\n                    ...state.userCircles,\r\n                    [payload.uid]: {\r\n                        ...state.userCircles[payload.uid],\r\n                        [payload.id]: {\r\n                            ...state.userCircles[payload.uid][payload.id],\r\n                            openCircleSettings: false\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        case types.OPEN_CIRCLE_SETTINGS:\r\n            return {\r\n                ...state,\r\n                userCircles: {\r\n                    ...state.userCircles,\r\n                    [payload.uid]: {\r\n                        ...state.userCircles[payload.uid],\r\n                        [payload.id]: {\r\n                            ...state.userCircles[payload.uid][payload.id],\r\n                            openCircleSettings: true\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/reducers/circleReducer.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 603,
    "kind": "variable",
    "name": "uuid",
    "memberof": "app/reducers/circleReducer.jsx",
    "static": true,
    "longname": "app/reducers/circleReducer.jsx~uuid",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/reducers/circleReducer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 604,
    "kind": "variable",
    "name": "defaultState",
    "memberof": "app/reducers/circleReducer.jsx",
    "static": true,
    "longname": "app/reducers/circleReducer.jsx~defaultState",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/reducers/circleReducer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"userCircles\": *, \"loaded\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 605,
    "kind": "function",
    "name": "circleReducer",
    "memberof": "app/reducers/circleReducer.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/reducers/circleReducer.jsx~circleReducer",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/reducers/circleReducer.jsx",
    "importStyle": "{circleReducer}",
    "description": "Circle reducer",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 606,
    "kind": "file",
    "name": "app/reducers/commentReducer.jsx",
    "content": "import moment from 'moment';\r\nimport _ from 'lodash';\r\n\r\n// - Import action types\r\nimport * as types from 'actionTypes';\r\n\r\n// Default state\r\nlet defaultState = {\r\n    postComments: {},\r\n    loaded: false\r\n};\r\n\r\n/**\r\n * Comment actions\r\n * @param {object} state \r\n * @param {object} action \r\n */\r\nexport let commentReducer = (state = defaultState, action) => {\r\n    let { payload } = action;\r\n    switch (action.type) {\r\n        /* _____________ CRUD _____________ */\r\n        case types.ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                postComments: {\r\n                    ...state.postComments,\r\n                    [payload.postId]: {\r\n                        ...state.postComments[payload.postId],\r\n                        [payload.id]: {\r\n                            ...payload.comment,\r\n                            editorStatus: false\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        case types.ADD_COMMENT_LIST:\r\n            return {\r\n                ...state,\r\n                postComments: {\r\n                    ...payload\r\n                },\r\n                loaded: true\r\n            };\r\n        case types.UPDATE_COMMENT:\r\n            return {\r\n                ...state,\r\n                postComments: {\r\n                    ...state.postComments,\r\n                    [payload.postId]: {\r\n                        ...state.postComments[payload.postId],\r\n                        [payload.id]: {\r\n                            ...state.postComments[payload.postId][payload.id],\r\n                            text: payload.text,\r\n                            editorStatus: payload.editorStatus\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        case types.DELETE_COMMENT:\r\n            let parsedComments = {};\r\n\r\n            if (!state.postComments[payload.postId]) {\r\n                return state;\r\n            }\r\n\r\n            Object.keys(state.postComments[payload.postId]).map((id) => {\r\n                if (id !== payload.id) {\r\n                    _.merge(parsedComments, { [id]: { ...state.postComments[payload.postId][id] } })\r\n                }\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                postComments: {\r\n                    ...state.postComments,\r\n                    [payload.postId]: {\r\n                        ...parsedComments\r\n                    }\r\n                }\r\n            };\r\n        case types.CLOSE_COMMENT_EDITOR:\r\n            return {\r\n                ...state,\r\n                postComments: {\r\n                    ...state.postComments,\r\n                    [payload.postId]: {\r\n                        ...state.postComments[payload.postId],\r\n                        [payload.id]: {\r\n                            ...state.postComments[payload.postId][payload.id],\r\n                            editorStatus: false\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        case types.OPEN_COMMENT_EDITOR:\r\n            return {\r\n                ...state,\r\n                postComments: {\r\n                    ...state.postComments,\r\n                    [payload.postId]: {\r\n                        ...state.postComments[payload.postId],\r\n                        [payload.id]: {\r\n                            ...state.postComments[payload.postId][payload.id],\r\n                            editorStatus: true\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        case types.CLEAR_ALL_DATA_COMMENT:\r\n            return defaultState;\r\n        default:\r\n            return state;\r\n    }\r\n}",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/reducers/commentReducer.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 607,
    "kind": "variable",
    "name": "defaultState",
    "memberof": "app/reducers/commentReducer.jsx",
    "static": true,
    "longname": "app/reducers/commentReducer.jsx~defaultState",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/reducers/commentReducer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"postComments\": *, \"loaded\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 608,
    "kind": "function",
    "name": "commentReducer",
    "memberof": "app/reducers/commentReducer.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/reducers/commentReducer.jsx~commentReducer",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/reducers/commentReducer.jsx",
    "importStyle": "{commentReducer}",
    "description": "Comment actions",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 609,
    "kind": "file",
    "name": "app/reducers/globalReducer.jsx",
    "content": "// - Import action types\r\nimport * as types from 'actionTypes';\r\n\r\n// Default state\r\nlet defaultState = {\r\n    progress: {\r\n        percent: 0,\r\n        visible: false\r\n    },\r\n    loadingStatus: true,\r\n    defaultLoadDataStatus: false,\r\n    messageOpen: false,\r\n    message: '',\r\n    sidebarMainStyle: {},\r\n    sidebarStyle: { width: \"210px\" },\r\n    sidebarClass: \"\",\r\n    sidebarOpen: (window.innerWidth > 750) ? true : false,\r\n    windowWidth: 0,\r\n    windowHeight: 0,\r\n    overSidebarStatus: false,\r\n    onResizeOpenSidebar: false,\r\n    sidebarAuto: false,\r\n    headerTitle: '',\r\n    editProfileOpen: false,\r\n    showTopLoading: false,\r\n    topLoadingQueue: 0,\r\n    temp: {}\r\n};\r\n\r\n/**\r\n * Global reducer\r\n * @param {object} state \r\n * @param {object} action \r\n */\r\nexport const globalReducer = (state = defaultState, action) => {\r\n    const { payload } = action;\r\n    switch (action.type) {\r\n        case types.PROGRESS_CHANGE:\r\n            return {\r\n                ...state,\r\n                progress: {\r\n                    ...state.progress,\r\n                    percent: payload.percent,\r\n                    visible: payload.visible\r\n                }\r\n            };\r\n        case types.DEFAULT_DATA_DISABLE:\r\n            return {\r\n                ...state,\r\n                defaultLoadDataStatus: false\r\n            };\r\n        case types.DEFAULT_DATA_ENABLE:\r\n            return {\r\n                ...state,\r\n                defaultLoadDataStatus: true\r\n            };\r\n        case types.SHOW_ERROR_MESSAGE_GLOBAL:\r\n            return {\r\n                ...state,\r\n                message: action.payload,\r\n                messageOpen: true\r\n            };\r\n        case types.SHOW_NORMAL_MESSAGE_GLOBAL:\r\n            return {\r\n                ...state,\r\n                message: action.payload,\r\n                messageOpen: true\r\n            };\r\n        case types.SHOW_SEND_REQUEST_MESSAGE_GLOBAL:\r\n            return {\r\n                ...state,\r\n                message: \"Request has been sent\",\r\n                messageOpen: true\r\n            };\r\n        case types.SHOW_REQUEST_SUCCESS_MESSAGE_GLOBAL:\r\n            return {\r\n                ...state,\r\n                message: \"Your request has processed successfuly\",\r\n                messageOpen: true\r\n            };\r\n        case types.HIDE_MESSAGE_GLOBAL:\r\n            return {\r\n                ...state,\r\n                message: '',\r\n                messageOpen: false,\r\n                messageColor: ''\r\n            };\r\n        case types.SET_HEADER_TITLE:\r\n            return {\r\n                ...state,\r\n                headerTitle: action.payload\r\n            };\r\n        case types.HIDE_TOP_LOADING:\r\n            const queue = state.topLoadingQueue > 0 ? (state.topLoadingQueue - 1) : 0;\r\n            return {\r\n                ...state,\r\n                topLoadingQueue: queue,\r\n                showTopLoading: (queue > 0 ? true : false)\r\n\r\n            };\r\n        case types.SHOW_TOP_LOADING:\r\n            return {\r\n                ...state,\r\n                topLoadingQueue: (state.topLoadingQueue + 1),\r\n                showTopLoading: true\r\n            };\r\n        case types.TEMP:\r\n            return {\r\n                ...state,\r\n                temp: {\r\n                    ...state.temp,\r\n                    ...payload\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/reducers/globalReducer.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 610,
    "kind": "variable",
    "name": "defaultState",
    "memberof": "app/reducers/globalReducer.jsx",
    "static": true,
    "longname": "app/reducers/globalReducer.jsx~defaultState",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/reducers/globalReducer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "{\"progress\": *, \"loadingStatus\": boolean, \"defaultLoadDataStatus\": *, \"messageOpen\": *, \"message\": *, \"sidebarMainStyle\": *, \"sidebarStyle\": *, \"sidebarClass\": *, \"sidebarOpen\": *, \"windowWidth\": *, \"windowHeight\": *, \"overSidebarStatus\": *, \"onResizeOpenSidebar\": *, \"sidebarAuto\": *, \"headerTitle\": *, \"editProfileOpen\": *, \"showTopLoading\": *, \"topLoadingQueue\": *, \"temp\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 611,
    "kind": "function",
    "name": "globalReducer",
    "memberof": "app/reducers/globalReducer.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/reducers/globalReducer.jsx~globalReducer",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/reducers/globalReducer.jsx",
    "importStyle": "{globalReducer}",
    "description": "Global reducer",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 612,
    "kind": "file",
    "name": "app/reducers/imageGalleryReducer.jsx",
    "content": "import _ from 'lodash';\r\n\r\n// - Import image gallery action types\r\nimport * as types from 'actionTypes';\r\n\r\n// Default state for reducer\r\nlet defaultState = {\r\n    status: false,\r\n    images: [],\r\n    selectImage: '',\r\n    selectURL: '',\r\n    loaded: false,\r\n    imageURLList: {},\r\n    imageRequests: []\r\n};\r\n\r\n//  Image gallery reducer\r\nexport let imageGalleryReducer = (state = defaultState, action) => {\r\n    const { payload } = action;\r\n\r\n    switch (action.type) {\r\n        case types.OPEN_IMAGE_GALLERY:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        /* ----------------- CRUD ----------------- */\r\n        case types.ADD_IMAGE_GALLERY:\r\n            return {\r\n                ...state,\r\n                images: [...state.images, action.image]\r\n            };\r\n        case types.ADD_IMAGE_LIST_GALLERY:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    images: [...action.images],\r\n                    loaded: true\r\n                };\r\n            }\r\n        case types.DELETE_IMAGE:\r\n            return {\r\n                ...state,\r\n                images: [\r\n                    ...state.images.filter((item) => {\r\n                        return item.id !== action.id\r\n                    })\r\n                ]\r\n            };\r\n        case types.IMAGE_SELECT_GALLERY:\r\n            return {\r\n                ...state,\r\n                selectImage: action.image,\r\n                selectURL: action.URL\r\n            };\r\n        case types.CLEARS_SELECT_IMAGE_GALLERY:\r\n            return {\r\n                ...state,\r\n                selectImage: '',\r\n                selectURL: ''\r\n            };\r\n        case types.SET_IMAGE_URL:\r\n            return {\r\n                ...state,\r\n                imageURLList: {\r\n                    ...state.imageURLList,\r\n                    [payload.name]: payload.url\r\n                }\r\n            };\r\n        case types.SEND_IMAGE_REQUEST:\r\n            return {\r\n                ...state,\r\n                imageRequests: [\r\n                    ...state.imageRequests,\r\n                    payload\r\n                ]\r\n            };\r\n        case types.CLEAT_ALL_DATA_IMAGE_GALLERY:\r\n            return defaultState;\r\n        default:\r\n            return state;\r\n    }\r\n}",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/reducers/imageGalleryReducer.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 613,
    "kind": "variable",
    "name": "defaultState",
    "memberof": "app/reducers/imageGalleryReducer.jsx",
    "static": true,
    "longname": "app/reducers/imageGalleryReducer.jsx~defaultState",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/reducers/imageGalleryReducer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "{\"status\": *, \"images\": *, \"selectImage\": *, \"selectURL\": *, \"loaded\": *, \"imageURLList\": *, \"imageRequests\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 614,
    "kind": "function",
    "name": "imageGalleryReducer",
    "memberof": "app/reducers/imageGalleryReducer.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/reducers/imageGalleryReducer.jsx~imageGalleryReducer",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/reducers/imageGalleryReducer.jsx",
    "importStyle": "{imageGalleryReducer}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "defaultState",
        "defaultValue": "defaultState"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 615,
    "kind": "file",
    "name": "app/reducers/notifyReducer.jsx",
    "content": "import moment from 'moment';\r\nimport _ from 'lodash';\r\n\r\n// - Import action types\r\nimport * as types from 'actionTypes';\r\n\r\n// Default state\r\nlet defaultState = {\r\n    userNotifies: {},\r\n    loaded: false\r\n};\r\n\r\n/**\r\n * Notify actions\r\n * @param {object} state \r\n * @param {object} action \r\n */\r\nexport var notifyReducer = (state = defaultState, action) => {\r\n    let { payload } = action;\r\n    switch (action.type) {\r\n        /* _____________ CRUD _____________ */\r\n        case types.ADD_NOTIFY:\r\n            return state;\r\n        case types.ADD_NOTIFY_LIST:\r\n            return {\r\n                ...state,\r\n                userNotifies: {\r\n                    ...payload\r\n                },\r\n                loaded: true\r\n            };\r\n        case types.SEEN_NOTIFY:\r\n            return {\r\n                ...state,\r\n                userNotifies: {\r\n                    ...state.userNotifies,\r\n                    [payload]: {\r\n                        ...state.userNotifies[payload],\r\n                        isSeen: true\r\n                    }\r\n                },\r\n                loaded: true\r\n            };\r\n        case types.DELETE_NOTIFY:\r\n            let parsedNotifies = {};\r\n\r\n            Object.keys(state.userNotifies).map((id) => {\r\n                if (id !== payload) {\r\n                    _.merge(parsedNotifies, { [id]: { ...state.userNotifies[id] } });\r\n                }\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                userNotifies: {\r\n                    ...parsedNotifies\r\n                }\r\n            };\r\n        case types.CLEAR_ALL_DATA_NOTIFY:\r\n            return defaultState;\r\n        default:\r\n            return state;\r\n    }\r\n}",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/reducers/notifyReducer.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 616,
    "kind": "variable",
    "name": "defaultState",
    "memberof": "app/reducers/notifyReducer.jsx",
    "static": true,
    "longname": "app/reducers/notifyReducer.jsx~defaultState",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/reducers/notifyReducer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"userNotifies\": *, \"loaded\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 617,
    "kind": "function",
    "name": "notifyReducer",
    "memberof": "app/reducers/notifyReducer.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/reducers/notifyReducer.jsx~notifyReducer",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/reducers/notifyReducer.jsx",
    "importStyle": "{notifyReducer}",
    "description": "Notify actions",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 618,
    "kind": "file",
    "name": "app/reducers/postReducer.jsx",
    "content": "let uuid = require('uuid');\r\nimport moment from 'moment';\r\nimport _ from 'lodash';\r\n\r\n// - Import action types\r\nimport * as types from 'actionTypes';\r\n\r\n// Default State\r\nlet defaultState = {\r\n    userPosts: {},\r\n    loaded: false\r\n};\r\n\r\n/**\r\n * Post reducer\r\n * @param {object} state \r\n * @param {object} action \r\n */\r\nexport let postReducer = (state = defaultState, action) => {\r\n    const { payload } = action;\r\n    switch (action.type) {\r\n        case types.CLEAR_ALL_DATA_POST:\r\n            return defaultState;\r\n        case types.ADD_IMAGE_POST:\r\n            return {\r\n                ...state,\r\n                userPosts: {\r\n                    ...state.userPosts,\r\n                    [payload.uid]: {\r\n                        ...state.userPosts[payload.uid],\r\n                        [payload.post.id]: { ...payload.post }\r\n                    }\r\n                }\r\n            };\r\n        case types.ADD_POST:\r\n            return {\r\n                ...state,\r\n                userPosts: {\r\n                    ...state.userPosts,\r\n                    [payload.uid]: {\r\n                        ...state.userPosts[payload.uid],\r\n                        [payload.post.id]: { ...payload.post }\r\n                    }\r\n                }\r\n            };\r\n        case types.UPDATE_POST:\r\n            return {\r\n                ...state,\r\n                userPosts: {\r\n                    ...state.userPosts,\r\n                    [payload.uid]: {\r\n                        ...state.userPosts[payload.uid],\r\n                        [payload.post.id]: {\r\n                            ...state.userPosts[payload.uid][payload.post.id],\r\n                            ...payload.post\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        case types.DELETE_POST:\r\n            let filteredPosts = {};\r\n\r\n            Object.keys(state.userPosts[payload.uid]).map((key) => {\r\n                if (key !== payload.id) {\r\n                    return _.merge(filteredPosts, { [key]: { ...state.userPosts[payload.uid][key] } });\r\n                }\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                userPosts: {\r\n                    ...state.userPosts,\r\n                    [payload.uid]: {\r\n                        ...filteredPosts\r\n                    }\r\n                }\r\n            };\r\n        case types.ADD_LIST_POST:\r\n            return {\r\n                ...state,\r\n                userPosts: {\r\n                    ...state.userPosts,\r\n                    [payload.uid]: {\r\n                        ...state.userPosts[payload.uid],\r\n                        ...payload.posts\r\n                    }\r\n                },\r\n                loaded: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/reducers/postReducer.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 619,
    "kind": "variable",
    "name": "uuid",
    "memberof": "app/reducers/postReducer.jsx",
    "static": true,
    "longname": "app/reducers/postReducer.jsx~uuid",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/reducers/postReducer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 620,
    "kind": "variable",
    "name": "defaultState",
    "memberof": "app/reducers/postReducer.jsx",
    "static": true,
    "longname": "app/reducers/postReducer.jsx~defaultState",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/reducers/postReducer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"userPosts\": *, \"loaded\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 621,
    "kind": "function",
    "name": "postReducer",
    "memberof": "app/reducers/postReducer.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/reducers/postReducer.jsx~postReducer",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/reducers/postReducer.jsx",
    "importStyle": "{postReducer}",
    "description": "Post reducer",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 622,
    "kind": "file",
    "name": "app/reducers/userReducer.jsx",
    "content": "// - Import action types\r\nimport * as types from 'actionTypes';\r\n\r\n// Default state for reducer\r\nlet defaultState = {\r\n    info: {},\r\n    loaded: false,\r\n    openEditProfile: false\r\n};\r\n\r\n// User reducer\r\nexport let userReducer = (state = defaultState, action) => {\r\n    const { payload } = action;\r\n    switch (action.type) {\r\n        case types.USER_INFO:\r\n            return {\r\n                ...state,\r\n                info: {\r\n                    ...state.info,\r\n                    [payload.uid]: {\r\n                        ...payload.info\r\n                    }\r\n                }\r\n            };\r\n        case types.ADD_USER_INFO:\r\n            return {\r\n                ...state,\r\n                info: {\r\n                    ...state.info,\r\n                    [payload.uid]: {\r\n                        ...payload.info\r\n                    }\r\n                },\r\n                loaded: true\r\n            };\r\n        case types.ADD_PEOPLE_INFO:\r\n            return {\r\n                ...state,\r\n                info: {\r\n                    ...state.info,\r\n                    ...payload\r\n                }\r\n            };\r\n        case types.UPDATE_USER_INFO:\r\n            return {\r\n                ...state,\r\n                info: {\r\n                    ...state.info,\r\n                    [payload.uid]: {\r\n                        ...state.info[payload.uid],\r\n                        ...payload.info\r\n                    }\r\n                }\r\n            };\r\n        case types.CLEAR_ALL_DATA_USER:\r\n            return defaultState;\r\n        case types.CLOSE_EDIT_PROFILE:\r\n            return {\r\n                ...state,\r\n                openEditProfile: false\r\n            };\r\n        case types.OPEN_EDIT_PROFILE:\r\n            return {\r\n                ...state,\r\n                openEditProfile: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/reducers/userReducer.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 623,
    "kind": "variable",
    "name": "defaultState",
    "memberof": "app/reducers/userReducer.jsx",
    "static": true,
    "longname": "app/reducers/userReducer.jsx~defaultState",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/reducers/userReducer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "{\"info\": *, \"loaded\": *, \"openEditProfile\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 624,
    "kind": "function",
    "name": "userReducer",
    "memberof": "app/reducers/userReducer.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/reducers/userReducer.jsx~userReducer",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/reducers/userReducer.jsx",
    "importStyle": "{userReducer}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "defaultState",
        "defaultValue": "defaultState"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 625,
    "kind": "file",
    "name": "app/reducers/voteReducer.jsx",
    "content": "import moment from 'moment';\r\nimport _ from 'lodash';\r\n\r\n// - Import action types\r\nimport * as types from 'actionTypes';\r\n\r\n//  Default state\r\nlet defaultState = {\r\n    postVotes: {},\r\n    loaded: false\r\n};\r\n\r\n\r\n/**\r\n * Vote actions\r\n * @param {object} state \r\n * @param {object} action \r\n */\r\nexport var voteReducer = (state = defaultState, action) => {\r\n    let { payload } = action;\r\n    switch (action.type) {\r\n        /* _____________ CRUD _____________ */\r\n        case types.ADD_VOTE:\r\n            return {\r\n                ...state,\r\n                postVotes: {\r\n                    ...state.postVotes,\r\n                    [payload.postId]: {\r\n                        ...state.postVotes[payload.postId],\r\n                        [payload.id]: {\r\n                            ...payload.vote\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        case types.ADD_VOTE_LIST:\r\n            return {\r\n                ...state,\r\n                postVotes: {\r\n                    ...payload\r\n                },\r\n                loaded: true\r\n            };\r\n        case types.DELETE_VOTE:\r\n            let parsedVotes = {};\r\n            if (state.postVotes[payload.postId])\r\n                Object.keys(state.postVotes[payload.postId]).map((id) => {\r\n                    if (id !== payload.id) {\r\n                        _.merge(parsedVotes, { [id]: { ...state.postVotes[payload.postId][id] } });\r\n                    }\r\n                });\r\n            return {\r\n                ...state,\r\n                postVotes: {\r\n                    ...state.postVotes,\r\n                    [payload.postId]: {\r\n                        ...parsedVotes\r\n                    }\r\n                }\r\n            };\r\n        case types.CLEAR_ALL_DATA_VOTE:\r\n            return defaultState;\r\n        default:\r\n            return state;\r\n    }\r\n}",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/reducers/voteReducer.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 626,
    "kind": "variable",
    "name": "defaultState",
    "memberof": "app/reducers/voteReducer.jsx",
    "static": true,
    "longname": "app/reducers/voteReducer.jsx~defaultState",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/reducers/voteReducer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"postVotes\": *, \"loaded\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 627,
    "kind": "function",
    "name": "voteReducer",
    "memberof": "app/reducers/voteReducer.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/reducers/voteReducer.jsx~voteReducer",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/reducers/voteReducer.jsx",
    "importStyle": "{voteReducer}",
    "description": "Vote actions",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 628,
    "kind": "file",
    "name": "app/store/configureStore.jsx",
    "content": "import * as redux from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { routerReducer, routerMiddleware } from 'react-router-redux';\r\nimport createHistory from 'history/createBrowserHistory';\r\nimport { createLogger } from 'redux-logger';;\r\n\r\n// - Import reducers\r\nimport { imageGalleryReducer } from 'imageGalleryReducer';\r\nimport { postReducer } from 'postReducer';\r\nimport { commentReducer } from 'commentReducer';\r\nimport { voteReducer } from 'voteReducer';\r\nimport { authorizeReducer } from 'authorizeReducer';\r\nimport { globalReducer } from 'globalReducer';\r\nimport { userReducer } from 'userReducer';\r\nimport { circleReducer } from 'circleReducer';\r\nimport { notifyReducer } from 'notifyReducer';\r\n\r\n// Create a history of your choosing (we're using a browser history in this case)\r\nexport const history = createHistory();\r\n\r\n// - Build the middleware for intercepting and dispatching navigation actions\r\nconst middleware = routerMiddleware(history);\r\nconst logger = createLogger();\r\n\r\n// - Reducers\r\nlet reducer = redux.combineReducers({\r\n    imageGallery: imageGalleryReducer,\r\n    post: postReducer,\r\n    circle: circleReducer,\r\n    comment: commentReducer,\r\n    vote: voteReducer,\r\n    authorize: authorizeReducer,\r\n    router: routerReducer,\r\n    user: userReducer,\r\n    notify: notifyReducer,\r\n    global: globalReducer\r\n});\r\n\r\n// - initial state\r\nlet initialState = {}\r\n\r\n// - Config and create store of redux\r\nlet store = redux.createStore(reducer, initialState, redux.compose(\r\n    redux.applyMiddleware(logger, thunk, middleware),\r\n    window.devToolsExtension ? window.devToolsExtension() : f => f\r\n));\r\n\r\nexport default store",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/store/configureStore.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 629,
    "kind": "variable",
    "name": "history",
    "memberof": "app/store/configureStore.jsx",
    "static": true,
    "longname": "app/store/configureStore.jsx~history",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/store/configureStore.jsx",
    "importStyle": "{history}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 630,
    "kind": "variable",
    "name": "middleware",
    "memberof": "app/store/configureStore.jsx",
    "static": true,
    "longname": "app/store/configureStore.jsx~middleware",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/store/configureStore.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 631,
    "kind": "variable",
    "name": "logger",
    "memberof": "app/store/configureStore.jsx",
    "static": true,
    "longname": "app/store/configureStore.jsx~logger",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/store/configureStore.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 632,
    "kind": "variable",
    "name": "reducer",
    "memberof": "app/store/configureStore.jsx",
    "static": true,
    "longname": "app/store/configureStore.jsx~reducer",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/store/configureStore.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 633,
    "kind": "variable",
    "name": "initialState",
    "memberof": "app/store/configureStore.jsx",
    "static": true,
    "longname": "app/store/configureStore.jsx~initialState",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/store/configureStore.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 634,
    "kind": "variable",
    "name": "store",
    "memberof": "app/store/configureStore.jsx",
    "static": true,
    "longname": "app/store/configureStore.jsx~store",
    "access": "public",
    "export": true,
    "importPath": "peter-test/app/store/configureStore.jsx",
    "importStyle": "store",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 635,
    "kind": "file",
    "name": "app/tests/actions/authorizeActions.test.jsx",
    "content": "// - Import react components\r\nimport configureMockStore from 'redux-mock-store'\r\nimport thunk from 'redux-thunk'\r\nvar expect = require('expect')\r\n\r\nimport firebase, {firebaseRef} from 'app/firebase'\r\nvar authorizeActions = require('authorizeActions')\r\nimport * as types from 'actionTypes'\r\n\r\nvar createMockStore = configureMockStore([thunk])\r\n\r\ndescribe('AuthorizeActions', () => {\r\n  it('should generate login action', () => {\r\n    const uid = 'UID123456'\r\n    var action = {\r\n      type: types.LOGIN,\r\n      authed: true, \r\n      uid\r\n    }\r\n    var res = authorizeActions.login(action.uid)\r\n\r\n    expect(res).toEqual(action);\r\n  })\r\n\r\n  it('should generate logout action', () => {\r\n    var action = {\r\n      type: types.LOGOUT\r\n    }\r\n    var res = authorizeActions.logout()\r\n\r\n    expect(res).toEqual(action)\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/actions/authorizeActions.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 636,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/actions/authorizeActions.test.jsx",
    "static": true,
    "longname": "app/tests/actions/authorizeActions.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/actions/authorizeActions.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 637,
    "kind": "variable",
    "name": "authorizeActions",
    "memberof": "app/tests/actions/authorizeActions.test.jsx",
    "static": true,
    "longname": "app/tests/actions/authorizeActions.test.jsx~authorizeActions",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/actions/authorizeActions.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 638,
    "kind": "variable",
    "name": "createMockStore",
    "memberof": "app/tests/actions/authorizeActions.test.jsx",
    "static": true,
    "longname": "app/tests/actions/authorizeActions.test.jsx~createMockStore",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/actions/authorizeActions.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 639,
    "kind": "file",
    "name": "app/tests/app.test.jsx",
    "content": "var expect = require('expect');\r\n\r\ndescribe('App', () => {\r\n  it('should properly run tests', () => {\r\n    expect(1).toBe(1);\r\n  });\r\n});\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/app.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 640,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/app.test.jsx",
    "static": true,
    "longname": "app/tests/app.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/app.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 641,
    "kind": "file",
    "name": "app/tests/components/Blog.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {Blog} = require('Blog');\r\n\r\ndescribe('Blog', () => {\r\n  it('should exist', () => {\r\n    expect(Blog).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/Blog.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 642,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/Blog.test.jsx",
    "static": true,
    "longname": "app/tests/components/Blog.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Blog.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 643,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/Blog.test.jsx",
    "static": true,
    "longname": "app/tests/components/Blog.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Blog.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 644,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/Blog.test.jsx",
    "static": true,
    "longname": "app/tests/components/Blog.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Blog.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 645,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/Blog.test.jsx",
    "static": true,
    "longname": "app/tests/components/Blog.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Blog.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 646,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/Blog.test.jsx",
    "static": true,
    "longname": "app/tests/components/Blog.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Blog.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 647,
    "kind": "variable",
    "name": "Blog",
    "memberof": "app/tests/components/Blog.test.jsx",
    "static": true,
    "longname": "app/tests/components/Blog.test.jsx~Blog",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Blog.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 648,
    "kind": "file",
    "name": "app/tests/components/Circle.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {Circle} = require('Circle');\r\n\r\ndescribe('Circle', () => {\r\n  it('should exist', () => {\r\n    expect(Circle).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/Circle.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 649,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/Circle.test.jsx",
    "static": true,
    "longname": "app/tests/components/Circle.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Circle.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 650,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/Circle.test.jsx",
    "static": true,
    "longname": "app/tests/components/Circle.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Circle.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 651,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/Circle.test.jsx",
    "static": true,
    "longname": "app/tests/components/Circle.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Circle.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 652,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/Circle.test.jsx",
    "static": true,
    "longname": "app/tests/components/Circle.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Circle.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 653,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/Circle.test.jsx",
    "static": true,
    "longname": "app/tests/components/Circle.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Circle.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 654,
    "kind": "variable",
    "name": "Circle",
    "memberof": "app/tests/components/Circle.test.jsx",
    "static": true,
    "longname": "app/tests/components/Circle.test.jsx~Circle",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Circle.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 655,
    "kind": "file",
    "name": "app/tests/components/Comment.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {Comment} = require('Comment');\r\n\r\ndescribe('Comment', () => {\r\n  it('should exist', () => {\r\n    expect(Comment).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/Comment.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 656,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/Comment.test.jsx",
    "static": true,
    "longname": "app/tests/components/Comment.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Comment.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 657,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/Comment.test.jsx",
    "static": true,
    "longname": "app/tests/components/Comment.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Comment.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 658,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/Comment.test.jsx",
    "static": true,
    "longname": "app/tests/components/Comment.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Comment.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 659,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/Comment.test.jsx",
    "static": true,
    "longname": "app/tests/components/Comment.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Comment.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 660,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/Comment.test.jsx",
    "static": true,
    "longname": "app/tests/components/Comment.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Comment.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 661,
    "kind": "variable",
    "name": "Comment",
    "memberof": "app/tests/components/Comment.test.jsx",
    "static": true,
    "longname": "app/tests/components/Comment.test.jsx~Comment",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Comment.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 662,
    "kind": "file",
    "name": "app/tests/components/CommentWrite.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {CommentWrite} = require('CommentWrite');\r\n\r\ndescribe('CommentWrite', () => {\r\n  it('should exist', () => {\r\n    expect(CommentWrite).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/CommentWrite.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 663,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/CommentWrite.test.jsx",
    "static": true,
    "longname": "app/tests/components/CommentWrite.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/CommentWrite.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 664,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/CommentWrite.test.jsx",
    "static": true,
    "longname": "app/tests/components/CommentWrite.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/CommentWrite.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 665,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/CommentWrite.test.jsx",
    "static": true,
    "longname": "app/tests/components/CommentWrite.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/CommentWrite.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 666,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/CommentWrite.test.jsx",
    "static": true,
    "longname": "app/tests/components/CommentWrite.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/CommentWrite.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 667,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/CommentWrite.test.jsx",
    "static": true,
    "longname": "app/tests/components/CommentWrite.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/CommentWrite.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 668,
    "kind": "variable",
    "name": "CommentWrite",
    "memberof": "app/tests/components/CommentWrite.test.jsx",
    "static": true,
    "longname": "app/tests/components/CommentWrite.test.jsx~CommentWrite",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/CommentWrite.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 669,
    "kind": "file",
    "name": "app/tests/components/CommnetGroup.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {CommentGroup} = require('CommentGroup');\r\n\r\ndescribe('CommentGroup', () => {\r\n  it('should exist', () => {\r\n    expect(CommentGroup).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/CommnetGroup.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 670,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/CommnetGroup.test.jsx",
    "static": true,
    "longname": "app/tests/components/CommnetGroup.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/CommnetGroup.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 671,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/CommnetGroup.test.jsx",
    "static": true,
    "longname": "app/tests/components/CommnetGroup.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/CommnetGroup.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 672,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/CommnetGroup.test.jsx",
    "static": true,
    "longname": "app/tests/components/CommnetGroup.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/CommnetGroup.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 673,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/CommnetGroup.test.jsx",
    "static": true,
    "longname": "app/tests/components/CommnetGroup.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/CommnetGroup.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 674,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/CommnetGroup.test.jsx",
    "static": true,
    "longname": "app/tests/components/CommnetGroup.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/CommnetGroup.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 675,
    "kind": "variable",
    "name": "CommentGroup",
    "memberof": "app/tests/components/CommnetGroup.test.jsx",
    "static": true,
    "longname": "app/tests/components/CommnetGroup.test.jsx~CommentGroup",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/CommnetGroup.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 676,
    "kind": "file",
    "name": "app/tests/components/CommnetList.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {CommentList} = require('CommentList');\r\n\r\ndescribe('CommentList', () => {\r\n  it('should exist', () => {\r\n    expect(CommentList).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/CommnetList.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 677,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/CommnetList.jsx",
    "static": true,
    "longname": "app/tests/components/CommnetList.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/CommnetList.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 678,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/CommnetList.jsx",
    "static": true,
    "longname": "app/tests/components/CommnetList.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/CommnetList.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 679,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/CommnetList.jsx",
    "static": true,
    "longname": "app/tests/components/CommnetList.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/CommnetList.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 680,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/CommnetList.jsx",
    "static": true,
    "longname": "app/tests/components/CommnetList.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/CommnetList.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 681,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/CommnetList.jsx",
    "static": true,
    "longname": "app/tests/components/CommnetList.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/CommnetList.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 682,
    "kind": "variable",
    "name": "CommentList",
    "memberof": "app/tests/components/CommnetList.jsx",
    "static": true,
    "longname": "app/tests/components/CommnetList.jsx~CommentList",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/CommnetList.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 683,
    "kind": "file",
    "name": "app/tests/components/EditProfile.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {EditProfile} = require('EditProfile');\r\n\r\ndescribe('EditProfile', () => {\r\n  it('should exist', () => {\r\n    expect(EditProfile).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/EditProfile.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 684,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/EditProfile.test.jsx",
    "static": true,
    "longname": "app/tests/components/EditProfile.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/EditProfile.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 685,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/EditProfile.test.jsx",
    "static": true,
    "longname": "app/tests/components/EditProfile.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/EditProfile.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 686,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/EditProfile.test.jsx",
    "static": true,
    "longname": "app/tests/components/EditProfile.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/EditProfile.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 687,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/EditProfile.test.jsx",
    "static": true,
    "longname": "app/tests/components/EditProfile.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/EditProfile.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 688,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/EditProfile.test.jsx",
    "static": true,
    "longname": "app/tests/components/EditProfile.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/EditProfile.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 689,
    "kind": "variable",
    "name": "EditProfile",
    "memberof": "app/tests/components/EditProfile.test.jsx",
    "static": true,
    "longname": "app/tests/components/EditProfile.test.jsx~EditProfile",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/EditProfile.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 690,
    "kind": "file",
    "name": "app/tests/components/FindPeople.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {FindPeople} = require('FindPeople');\r\n\r\ndescribe('FindPeople', () => {\r\n  it('should exist', () => {\r\n    expect(FindPeople).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/FindPeople.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 691,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/FindPeople.test.jsx",
    "static": true,
    "longname": "app/tests/components/FindPeople.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/FindPeople.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 692,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/FindPeople.test.jsx",
    "static": true,
    "longname": "app/tests/components/FindPeople.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/FindPeople.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 693,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/FindPeople.test.jsx",
    "static": true,
    "longname": "app/tests/components/FindPeople.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/FindPeople.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 694,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/FindPeople.test.jsx",
    "static": true,
    "longname": "app/tests/components/FindPeople.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/FindPeople.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 695,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/FindPeople.test.jsx",
    "static": true,
    "longname": "app/tests/components/FindPeople.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/FindPeople.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 696,
    "kind": "variable",
    "name": "FindPeople",
    "memberof": "app/tests/components/FindPeople.test.jsx",
    "static": true,
    "longname": "app/tests/components/FindPeople.test.jsx~FindPeople",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/FindPeople.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 697,
    "kind": "file",
    "name": "app/tests/components/Followers.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {Followers} = require('Followers');\r\n\r\ndescribe('Followers', () => {\r\n  it('should exist', () => {\r\n    expect(Followers).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/Followers.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 698,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/Followers.test.jsx",
    "static": true,
    "longname": "app/tests/components/Followers.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Followers.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 699,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/Followers.test.jsx",
    "static": true,
    "longname": "app/tests/components/Followers.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Followers.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 700,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/Followers.test.jsx",
    "static": true,
    "longname": "app/tests/components/Followers.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Followers.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 701,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/Followers.test.jsx",
    "static": true,
    "longname": "app/tests/components/Followers.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Followers.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 702,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/Followers.test.jsx",
    "static": true,
    "longname": "app/tests/components/Followers.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Followers.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 703,
    "kind": "variable",
    "name": "Followers",
    "memberof": "app/tests/components/Followers.test.jsx",
    "static": true,
    "longname": "app/tests/components/Followers.test.jsx~Followers",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Followers.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 704,
    "kind": "file",
    "name": "app/tests/components/Following.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {Following} = require('Following');\r\n\r\ndescribe('Following', () => {\r\n  it('should exist', () => {\r\n    expect(Following).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/Following.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 705,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/Following.test.jsx",
    "static": true,
    "longname": "app/tests/components/Following.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Following.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 706,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/Following.test.jsx",
    "static": true,
    "longname": "app/tests/components/Following.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Following.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 707,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/Following.test.jsx",
    "static": true,
    "longname": "app/tests/components/Following.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Following.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 708,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/Following.test.jsx",
    "static": true,
    "longname": "app/tests/components/Following.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Following.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 709,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/Following.test.jsx",
    "static": true,
    "longname": "app/tests/components/Following.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Following.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 710,
    "kind": "variable",
    "name": "Following",
    "memberof": "app/tests/components/Following.test.jsx",
    "static": true,
    "longname": "app/tests/components/Following.test.jsx~Following",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Following.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 711,
    "kind": "file",
    "name": "app/tests/components/Home.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {Home} = require('Home');\r\n\r\ndescribe('Home', () => {\r\n  it('should exist', () => {\r\n    expect(Home).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/Home.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 712,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/Home.test.jsx",
    "static": true,
    "longname": "app/tests/components/Home.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Home.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 713,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/Home.test.jsx",
    "static": true,
    "longname": "app/tests/components/Home.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Home.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 714,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/Home.test.jsx",
    "static": true,
    "longname": "app/tests/components/Home.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Home.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 715,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/Home.test.jsx",
    "static": true,
    "longname": "app/tests/components/Home.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Home.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 716,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/Home.test.jsx",
    "static": true,
    "longname": "app/tests/components/Home.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Home.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 717,
    "kind": "variable",
    "name": "Home",
    "memberof": "app/tests/components/Home.test.jsx",
    "static": true,
    "longname": "app/tests/components/Home.test.jsx~Home",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Home.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 718,
    "kind": "file",
    "name": "app/tests/components/HomeHeader.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {HomeHeader} = require('HomeHeader');\r\n\r\ndescribe('HomeHeader', () => {\r\n  it('should exist', () => {\r\n    expect(HomeHeader).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/HomeHeader.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 719,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/HomeHeader.test.jsx",
    "static": true,
    "longname": "app/tests/components/HomeHeader.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/HomeHeader.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 720,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/HomeHeader.test.jsx",
    "static": true,
    "longname": "app/tests/components/HomeHeader.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/HomeHeader.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 721,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/HomeHeader.test.jsx",
    "static": true,
    "longname": "app/tests/components/HomeHeader.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/HomeHeader.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 722,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/HomeHeader.test.jsx",
    "static": true,
    "longname": "app/tests/components/HomeHeader.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/HomeHeader.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 723,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/HomeHeader.test.jsx",
    "static": true,
    "longname": "app/tests/components/HomeHeader.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/HomeHeader.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 724,
    "kind": "variable",
    "name": "HomeHeader",
    "memberof": "app/tests/components/HomeHeader.test.jsx",
    "static": true,
    "longname": "app/tests/components/HomeHeader.test.jsx~HomeHeader",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/HomeHeader.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 725,
    "kind": "file",
    "name": "app/tests/components/ImageGallery.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {ImageGallery} = require('ImageGallery');\r\n\r\ndescribe('ImageGallery', () => {\r\n  it('should exist', () => {\r\n    expect(ImageGallery).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/ImageGallery.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 726,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/ImageGallery.test.jsx",
    "static": true,
    "longname": "app/tests/components/ImageGallery.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/ImageGallery.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 727,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/ImageGallery.test.jsx",
    "static": true,
    "longname": "app/tests/components/ImageGallery.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/ImageGallery.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 728,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/ImageGallery.test.jsx",
    "static": true,
    "longname": "app/tests/components/ImageGallery.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/ImageGallery.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 729,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/ImageGallery.test.jsx",
    "static": true,
    "longname": "app/tests/components/ImageGallery.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/ImageGallery.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 730,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/ImageGallery.test.jsx",
    "static": true,
    "longname": "app/tests/components/ImageGallery.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/ImageGallery.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 731,
    "kind": "variable",
    "name": "ImageGallery",
    "memberof": "app/tests/components/ImageGallery.test.jsx",
    "static": true,
    "longname": "app/tests/components/ImageGallery.test.jsx~ImageGallery",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/ImageGallery.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 732,
    "kind": "file",
    "name": "app/tests/components/Img.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {Img} = require('Img');\r\n\r\ndescribe('Img', () => {\r\n  it('should exist', () => {\r\n    expect(Img).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/Img.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 733,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/Img.test.jsx",
    "static": true,
    "longname": "app/tests/components/Img.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Img.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 734,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/Img.test.jsx",
    "static": true,
    "longname": "app/tests/components/Img.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Img.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 735,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/Img.test.jsx",
    "static": true,
    "longname": "app/tests/components/Img.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Img.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 736,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/Img.test.jsx",
    "static": true,
    "longname": "app/tests/components/Img.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Img.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 737,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/Img.test.jsx",
    "static": true,
    "longname": "app/tests/components/Img.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Img.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 738,
    "kind": "variable",
    "name": "Img",
    "memberof": "app/tests/components/Img.test.jsx",
    "static": true,
    "longname": "app/tests/components/Img.test.jsx~Img",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Img.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 739,
    "kind": "file",
    "name": "app/tests/components/ImgCover.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {ImgCover} = require('ImgCover');\r\n\r\ndescribe('ImgCover', () => {\r\n  it('should exist', () => {\r\n    expect(ImgCover).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/ImgCover.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 740,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/ImgCover.test.jsx",
    "static": true,
    "longname": "app/tests/components/ImgCover.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/ImgCover.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 741,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/ImgCover.test.jsx",
    "static": true,
    "longname": "app/tests/components/ImgCover.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/ImgCover.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 742,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/ImgCover.test.jsx",
    "static": true,
    "longname": "app/tests/components/ImgCover.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/ImgCover.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 743,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/ImgCover.test.jsx",
    "static": true,
    "longname": "app/tests/components/ImgCover.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/ImgCover.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 744,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/ImgCover.test.jsx",
    "static": true,
    "longname": "app/tests/components/ImgCover.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/ImgCover.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 745,
    "kind": "variable",
    "name": "ImgCover",
    "memberof": "app/tests/components/ImgCover.test.jsx",
    "static": true,
    "longname": "app/tests/components/ImgCover.test.jsx~ImgCover",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/ImgCover.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 746,
    "kind": "file",
    "name": "app/tests/components/Login.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {Login} = require('Login');\r\n\r\ndescribe('Login', () => {\r\n  it('should exist', () => {\r\n    expect(Login).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/Login.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 747,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/Login.test.jsx",
    "static": true,
    "longname": "app/tests/components/Login.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Login.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 748,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/Login.test.jsx",
    "static": true,
    "longname": "app/tests/components/Login.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Login.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 749,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/Login.test.jsx",
    "static": true,
    "longname": "app/tests/components/Login.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Login.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 750,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/Login.test.jsx",
    "static": true,
    "longname": "app/tests/components/Login.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Login.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 751,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/Login.test.jsx",
    "static": true,
    "longname": "app/tests/components/Login.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Login.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 752,
    "kind": "variable",
    "name": "Login",
    "memberof": "app/tests/components/Login.test.jsx",
    "static": true,
    "longname": "app/tests/components/Login.test.jsx~Login",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Login.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 753,
    "kind": "file",
    "name": "app/tests/components/Master.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {Master} = require('Master');\r\n\r\ndescribe('Master', () => {\r\n  it('should exist', () => {\r\n    expect(Master).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/Master.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 754,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/Master.test.jsx",
    "static": true,
    "longname": "app/tests/components/Master.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Master.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 755,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/Master.test.jsx",
    "static": true,
    "longname": "app/tests/components/Master.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Master.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 756,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/Master.test.jsx",
    "static": true,
    "longname": "app/tests/components/Master.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Master.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 757,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/Master.test.jsx",
    "static": true,
    "longname": "app/tests/components/Master.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Master.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 758,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/Master.test.jsx",
    "static": true,
    "longname": "app/tests/components/Master.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Master.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 759,
    "kind": "variable",
    "name": "Master",
    "memberof": "app/tests/components/Master.test.jsx",
    "static": true,
    "longname": "app/tests/components/Master.test.jsx~Master",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Master.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 760,
    "kind": "file",
    "name": "app/tests/components/NotifyItem.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {NotifyItem} = require('NotifyItem');\r\n\r\ndescribe('NotifyItem', () => {\r\n  it('should exist', () => {\r\n    expect(NotifyItem).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/NotifyItem.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 761,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/NotifyItem.test.jsx",
    "static": true,
    "longname": "app/tests/components/NotifyItem.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/NotifyItem.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 762,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/NotifyItem.test.jsx",
    "static": true,
    "longname": "app/tests/components/NotifyItem.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/NotifyItem.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 763,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/NotifyItem.test.jsx",
    "static": true,
    "longname": "app/tests/components/NotifyItem.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/NotifyItem.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 764,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/NotifyItem.test.jsx",
    "static": true,
    "longname": "app/tests/components/NotifyItem.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/NotifyItem.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 765,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/NotifyItem.test.jsx",
    "static": true,
    "longname": "app/tests/components/NotifyItem.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/NotifyItem.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 766,
    "kind": "variable",
    "name": "NotifyItem",
    "memberof": "app/tests/components/NotifyItem.test.jsx",
    "static": true,
    "longname": "app/tests/components/NotifyItem.test.jsx~NotifyItem",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/NotifyItem.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 767,
    "kind": "file",
    "name": "app/tests/components/Post.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {Post} = require('Post');\r\n\r\ndescribe('Post', () => {\r\n  it('should exist', () => {\r\n    expect(Post).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/Post.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 768,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/Post.test.jsx",
    "static": true,
    "longname": "app/tests/components/Post.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Post.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 769,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/Post.test.jsx",
    "static": true,
    "longname": "app/tests/components/Post.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Post.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 770,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/Post.test.jsx",
    "static": true,
    "longname": "app/tests/components/Post.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Post.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 771,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/Post.test.jsx",
    "static": true,
    "longname": "app/tests/components/Post.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Post.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 772,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/Post.test.jsx",
    "static": true,
    "longname": "app/tests/components/Post.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Post.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 773,
    "kind": "variable",
    "name": "Post",
    "memberof": "app/tests/components/Post.test.jsx",
    "static": true,
    "longname": "app/tests/components/Post.test.jsx~Post",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Post.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 774,
    "kind": "file",
    "name": "app/tests/components/PostWrite.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {PostWrite} = require('PostWrite');\r\n\r\ndescribe('PostWrite', () => {\r\n  it('should exist', () => {\r\n    expect(PostWrite).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/PostWrite.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 775,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/PostWrite.test.jsx",
    "static": true,
    "longname": "app/tests/components/PostWrite.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/PostWrite.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 776,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/PostWrite.test.jsx",
    "static": true,
    "longname": "app/tests/components/PostWrite.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/PostWrite.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 777,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/PostWrite.test.jsx",
    "static": true,
    "longname": "app/tests/components/PostWrite.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/PostWrite.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 778,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/PostWrite.test.jsx",
    "static": true,
    "longname": "app/tests/components/PostWrite.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/PostWrite.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 779,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/PostWrite.test.jsx",
    "static": true,
    "longname": "app/tests/components/PostWrite.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/PostWrite.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 780,
    "kind": "variable",
    "name": "PostWrite",
    "memberof": "app/tests/components/PostWrite.test.jsx",
    "static": true,
    "longname": "app/tests/components/PostWrite.test.jsx~PostWrite",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/PostWrite.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 781,
    "kind": "file",
    "name": "app/tests/components/Settings.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {Settings} = require('Settings');\r\n\r\ndescribe('Settings', () => {\r\n  it('should exist', () => {\r\n    expect(Settings).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/Settings.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 782,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/Settings.test.jsx",
    "static": true,
    "longname": "app/tests/components/Settings.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Settings.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 783,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/Settings.test.jsx",
    "static": true,
    "longname": "app/tests/components/Settings.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Settings.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 784,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/Settings.test.jsx",
    "static": true,
    "longname": "app/tests/components/Settings.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Settings.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 785,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/Settings.test.jsx",
    "static": true,
    "longname": "app/tests/components/Settings.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Settings.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 786,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/Settings.test.jsx",
    "static": true,
    "longname": "app/tests/components/Settings.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Settings.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 787,
    "kind": "variable",
    "name": "Settings",
    "memberof": "app/tests/components/Settings.test.jsx",
    "static": true,
    "longname": "app/tests/components/Settings.test.jsx~Settings",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Settings.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 788,
    "kind": "file",
    "name": "app/tests/components/Sidebar.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {Sidebar} = require('Sidebar');\r\n\r\ndescribe('Sidebar', () => {\r\n  it('should exist', () => {\r\n    expect(Sidebar).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/Sidebar.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 789,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/Sidebar.test.jsx",
    "static": true,
    "longname": "app/tests/components/Sidebar.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Sidebar.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 790,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/Sidebar.test.jsx",
    "static": true,
    "longname": "app/tests/components/Sidebar.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Sidebar.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 791,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/Sidebar.test.jsx",
    "static": true,
    "longname": "app/tests/components/Sidebar.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Sidebar.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 792,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/Sidebar.test.jsx",
    "static": true,
    "longname": "app/tests/components/Sidebar.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Sidebar.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 793,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/Sidebar.test.jsx",
    "static": true,
    "longname": "app/tests/components/Sidebar.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Sidebar.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 794,
    "kind": "variable",
    "name": "Sidebar",
    "memberof": "app/tests/components/Sidebar.test.jsx",
    "static": true,
    "longname": "app/tests/components/Sidebar.test.jsx~Sidebar",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Sidebar.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 795,
    "kind": "file",
    "name": "app/tests/components/Signup.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {Signup} = require('Signup');\r\n\r\ndescribe('Signup', () => {\r\n  it('should exist', () => {\r\n    expect(Signup).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/Signup.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 796,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/Signup.test.jsx",
    "static": true,
    "longname": "app/tests/components/Signup.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Signup.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 797,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/Signup.test.jsx",
    "static": true,
    "longname": "app/tests/components/Signup.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Signup.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 798,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/Signup.test.jsx",
    "static": true,
    "longname": "app/tests/components/Signup.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Signup.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 799,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/Signup.test.jsx",
    "static": true,
    "longname": "app/tests/components/Signup.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Signup.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 800,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/Signup.test.jsx",
    "static": true,
    "longname": "app/tests/components/Signup.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Signup.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 801,
    "kind": "variable",
    "name": "Signup",
    "memberof": "app/tests/components/Signup.test.jsx",
    "static": true,
    "longname": "app/tests/components/Signup.test.jsx~Signup",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/Signup.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 802,
    "kind": "file",
    "name": "app/tests/components/UserBox.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {UserBox} = require('UserBox');\r\n\r\ndescribe('UserBox', () => {\r\n  it('should exist', () => {\r\n    expect(UserBox).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/UserBox.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 803,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/UserBox.test.jsx",
    "static": true,
    "longname": "app/tests/components/UserBox.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/UserBox.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 804,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/UserBox.test.jsx",
    "static": true,
    "longname": "app/tests/components/UserBox.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/UserBox.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 805,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/UserBox.test.jsx",
    "static": true,
    "longname": "app/tests/components/UserBox.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/UserBox.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 806,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/UserBox.test.jsx",
    "static": true,
    "longname": "app/tests/components/UserBox.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/UserBox.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 807,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/UserBox.test.jsx",
    "static": true,
    "longname": "app/tests/components/UserBox.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/UserBox.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 808,
    "kind": "variable",
    "name": "UserBox",
    "memberof": "app/tests/components/UserBox.test.jsx",
    "static": true,
    "longname": "app/tests/components/UserBox.test.jsx~UserBox",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/UserBox.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 809,
    "kind": "file",
    "name": "app/tests/components/UserBoxList.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {UserBoxList} = require('UserBoxList');\r\n\r\ndescribe('UserBoxList', () => {\r\n  it('should exist', () => {\r\n    expect(UserBoxList).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/UserBoxList.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 810,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/UserBoxList.test.jsx",
    "static": true,
    "longname": "app/tests/components/UserBoxList.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/UserBoxList.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 811,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/UserBoxList.test.jsx",
    "static": true,
    "longname": "app/tests/components/UserBoxList.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/UserBoxList.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 812,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/UserBoxList.test.jsx",
    "static": true,
    "longname": "app/tests/components/UserBoxList.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/UserBoxList.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 813,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/UserBoxList.test.jsx",
    "static": true,
    "longname": "app/tests/components/UserBoxList.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/UserBoxList.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 814,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/UserBoxList.test.jsx",
    "static": true,
    "longname": "app/tests/components/UserBoxList.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/UserBoxList.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 815,
    "kind": "variable",
    "name": "UserBoxList",
    "memberof": "app/tests/components/UserBoxList.test.jsx",
    "static": true,
    "longname": "app/tests/components/UserBoxList.test.jsx~UserBoxList",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/UserBoxList.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 816,
    "kind": "file",
    "name": "app/tests/components/YourCircles.test.jsx",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\nvar TestUtils = require('react-dom/test-utils');\r\nvar expect = require('expect');\r\nvar $ = require('jquery');\r\n\r\nvar {YourCircles} = require('YourCircles');\r\n\r\ndescribe('YourCircles', () => {\r\n  it('should exist', () => {\r\n    expect(YourCircles).toExist();\r\n  })\r\n\r\n})",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/components/YourCircles.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 817,
    "kind": "variable",
    "name": "React",
    "memberof": "app/tests/components/YourCircles.test.jsx",
    "static": true,
    "longname": "app/tests/components/YourCircles.test.jsx~React",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/YourCircles.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 818,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "app/tests/components/YourCircles.test.jsx",
    "static": true,
    "longname": "app/tests/components/YourCircles.test.jsx~ReactDOM",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/YourCircles.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 819,
    "kind": "variable",
    "name": "TestUtils",
    "memberof": "app/tests/components/YourCircles.test.jsx",
    "static": true,
    "longname": "app/tests/components/YourCircles.test.jsx~TestUtils",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/YourCircles.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 820,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/components/YourCircles.test.jsx",
    "static": true,
    "longname": "app/tests/components/YourCircles.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/YourCircles.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 821,
    "kind": "variable",
    "name": "$",
    "memberof": "app/tests/components/YourCircles.test.jsx",
    "static": true,
    "longname": "app/tests/components/YourCircles.test.jsx~$",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/YourCircles.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 822,
    "kind": "variable",
    "name": "YourCircles",
    "memberof": "app/tests/components/YourCircles.test.jsx",
    "static": true,
    "longname": "app/tests/components/YourCircles.test.jsx~YourCircles",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/components/YourCircles.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 823,
    "kind": "file",
    "name": "app/tests/reducers/authorizeReducer.test.jsx",
    "content": "// - Import react components\r\nvar expect = require('expect')\r\nvar df = require('deep-freeze-strict')\r\nimport { authorizeReducer } from 'authorizeReducer'\r\n\r\n// - Import action types\r\nimport * as types from 'actionTypes'\r\n\r\n\r\n/**\r\n * Default state\r\n */\r\nvar defaultState = {\r\n    uid: 0,\r\n    authed: false,\r\n    updatePassword: false,\r\n    guest: false\r\n}\r\n\r\ndescribe('authorizeReducer', () => {\r\n    it('should set user in login state', () => {\r\n        var action = {\r\n            type: types.LOGIN,\r\n            uid: 'user12345'\r\n        };\r\n        var res = authorizeReducer(df(defaultState), df(action));\r\n\r\n        expect(res.uid).toEqual(action.uid)\r\n        expect(res.authed).toEqual(true)\r\n        expect(res.guest).toEqual(false)\r\n    })\r\n\r\n    it('should set user in logout state', () => {\r\n        var action = {\r\n            type: types.LOGOUT\r\n        };\r\n        var res = authorizeReducer(df(defaultState), df(action));\r\n\r\n        expect(res.uid).toEqual(0)\r\n        expect(res.authed).toEqual(false)\r\n        expect(res.guest).toEqual(true)\r\n    })\r\n\r\n    it('should set uid in signup', () => {\r\n        var action = {\r\n            type: types.SIGNUP,\r\n            uid: 'user12345'\r\n        };\r\n        var res = authorizeReducer(df(defaultState), df(action));\r\n\r\n        expect(res.uid).toEqual(action.uid)\r\n    })\r\n\r\n        it('should update password', () => {\r\n        var action = {\r\n            type: types.UPDATE_PASSWORD,\r\n            updatePassword: 'p@55w0rd'\r\n        };\r\n        var res = authorizeReducer(df(defaultState), df(action));\r\n\r\n        expect(res.updatePassword).toEqual(action.updatePassword)\r\n    })\r\n\r\n})\r\n",
    "static": true,
    "longname": "F:/Users/kien/kiwi/src/app/tests/reducers/authorizeReducer.test.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 824,
    "kind": "variable",
    "name": "expect",
    "memberof": "app/tests/reducers/authorizeReducer.test.jsx",
    "static": true,
    "longname": "app/tests/reducers/authorizeReducer.test.jsx~expect",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/reducers/authorizeReducer.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 825,
    "kind": "variable",
    "name": "df",
    "memberof": "app/tests/reducers/authorizeReducer.test.jsx",
    "static": true,
    "longname": "app/tests/reducers/authorizeReducer.test.jsx~df",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/reducers/authorizeReducer.test.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 826,
    "kind": "variable",
    "name": "defaultState",
    "memberof": "app/tests/reducers/authorizeReducer.test.jsx",
    "static": true,
    "longname": "app/tests/reducers/authorizeReducer.test.jsx~defaultState",
    "access": "public",
    "export": false,
    "importPath": "peter-test/app/tests/reducers/authorizeReducer.test.jsx",
    "importStyle": null,
    "description": "Default state",
    "lineNumber": 13,
    "type": {
      "types": [
        "{\"uid\": *, \"authed\": *, \"updatePassword\": *, \"guest\": *}"
      ]
    },
    "ignore": true
  },
  {
    "kind": "index",
    "content": "# Team Kiwi's Conveyor Belt Repository\r\n\r\nWelcome to Kiwi's repository for generating a conveyor belt to build software the right way.\r\nWe have included in this repository different approaches to building our conveyor built\r\nin order to compare and contrast the strengths and weaknesses each technology has\r\nagainst the other. We compare React, Angular, Vue, and Web Components in order to determine\r\nwhich technology is most compatible with our team's skills and abilities. We also compare\r\nthese technologies to provide Peter, our client, a clearer understanding on how we reached\r\nour final decision on the technologies we decided upon.\r\n\r\n## Build Pipeline\r\n\r\n![High Level Build Pipeline](README_resources/build_pipeline.png?raw=true \"Optional Title\")\r\n\r\n## Getting Started\r\nTo get started, clone our repository. \r\n\r\n```\r\nTODO: Provide Steps how to run our different conveyor belts.\r\n```\r\n## Documentation Generation\r\nFor document generation, we are using ESDocs.\r\n\r\nFrom ESDocs' Website:\r\n```\r\nESDoc has two goals.\r\n\r\n- To make documentation maintenance comfortable and pleasant\r\n- To create easy-to-understand documentation.\r\n  In order to achieve this two goals, ESDoc produces a practical document, \r\n  measures the coverage, integrates the test code and more.\r\n```\r\nTo find out more about ESDocs, please visit: https://esdoc.org/manual/usage.html\r\n\r\nWe use ESDocs via its basic usage, such as:\r\n```\r\n/**\r\n * this is MyClass.\r\n */\r\nexport default class MyClass {\r\n  /**\r\n   * @param {number} a - this is a value.\r\n   * @param {number} b - this is a value.\r\n   * @return {number} result of the sum value.\r\n   */\r\n  sum(a, b){\r\n    return a + b;\r\n  }\r\n}\r\n```\r\nA list of tags that are available can be found here: https://esdoc.org/manual/tags.html\r\n\r\nNote: Please ensure you have ESDocs installed. If you do not have ESDocs installed,\r\nplease install by running the following commands:\r\n```\r\nnpm install esdoc esdoc-standard-plugin\r\n```\r\n\r\nIn order to view our docs, once you have set up the repository, run the commands\r\n```\r\n./node_modules/.bin/esdoc\r\nopen ./docs/index.html\r\n```\r\nThe documentation to all our different technologies we have compared and contrasted will open\r\nin your browser. There you may browse and read in more detail the code we wrote for each\r\ntechnology.\r\n\r\n# Use of Third Party Integration Tools\r\n\r\n## Codacy\r\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/8569c562e69145308e896348639cf8b7)](https://app.codacy.com/app/kiwi/kiwi?utm_source=github.com&utm_medium=referral&utm_content=aabadill/kiwi&utm_campaign=badger)\r\n\r\nWe use a static code analysis tool called Codacy in order to \r\nkeep our code consistent and as simple as possible.\r\nWe use this in order to track the progress of our code quality\r\nas the project progresses. This tool allows us to set goals\r\nwe can determine within our team and with our client to ensure code quality. Since people have different measures of quality,\r\nwe may dial it to our very own specificcations as to what quality means for us and our client. \r\nSome of the metrics we can fine tune are:\r\n\r\n    - Code Complexity\r\n    - File Structure Complexity\r\n    - Duplication of Code and Files\r\n    - Code Test Coverage\r\n    - Pull Requests, Commits, etc.\r\n    - Security Vulnerablity Analysis\r\n\r\nOnce we have set the standards we are to follow, the dashboard this tool provides will allow our client to visualize the quality of work we are completing with a letter grade rating.\r\n\r\nInternally, we use this to track everyone's contribution and quality of work by viewing what issues are introduced by whom and how often. In this way, we are able to track bugs in our code to avoid future repetitions of the same mistakes,\r\nand thus tune and refine our pipeline if needed.\r\n\r\nTo find out more about how Codacy works, please\r\nvisit the documentation page here: https://support.codacy.com/hc/en-us\r\n\r\n## Travis CI\r\n[![Build Status](https://travis-ci.org/Kien085/kiwi.svg?branch=master)](https://travis-ci.org/Kien085/kiwi)\r\n\r\nWe use Travis CI as our continuous integration tool. It allows us to centralize our builds and deployments. while adding another layer of quality checks through testing and deployment\r\nin a controlled environment, independer of any one's developer's\r\nlocal environment. Since we may control this independent environment the way we want, it allows us to have a separate\r\nenvironment where we may run our build process and incrementally add new features to our project. Not only this,\r\nwe can control what gets into the build in an incremental manner. \r\nWe perform a series of tests that make sure that what we develop will work in the proposed environment we agree\r\nupon with our client. It also allows us to perform code reviews so we can add a human aspect to how our code should\r\nbe in terms of quality, structure, and readability. \r\nLastly, we can automate many tasks that would otherwise require\r\nmuch developer time, saving our client time and money.\r\n\r\n# Testing\r\n\r\nFor testing, we are using Enzyme and Jest.\r\n\r\nSpecifically, we are using Enzyme to test that our\r\ncomponents render as they should. In other words,\r\nwe want to ensure that what we visualize with our client\r\nshows up in the user interface. We also perform a variety\r\nof other tests that which include that our components\r\nbehave as they should. \r\nFor example, when we set a specific color for text, does the\r\ntext actually change color? Does it render to the correct color? Etc.\r\n\r\nFurthermore, we use Jest because of their focus on snapshots for testing purposes. We use snapshots to stay consistent\r\nwith how we want our components to look. These snapshots allow us to optimize the underlying implementation of a component while testing that its appearance has not changed. Jest compares a previous \"snapshot\" of what our code rendered to\r\nand tests that our update does not change the appearance of the component. In this way, we are able to separate implementation tests from the rendering tests.\r\n\r\nWe recognize that performing tests that do not need to be performed is redudant and not time efficient. So, we have\r\nset up our pipeline so that tests only run when they should\r\nand are responsive to the changes made in the code base.\r\nIn other words, we run tests according to the chain of\r\ndependencies that the change will affect.\r\n\r\n# GitHub File Structure\r\n\r\nWe have organized our repository to make it easy to navigate\r\nby anyone who may want to look at our current work by using\r\nfamiliar names that are easy to understand and remember.\r\n\r\nWe have also made our best effort to keep different technologies separate so that they may not interfere with eachother with being run.\r\n\r\nThe following file structure roughly represents how we have organized our repository:\r\n\r\n    /Kiwi\r\n    - this is the topmost directory of our project\r\n    - here you will find configuration files to most of the\r\n      tools we use throughout our repository including TravisCI\r\n      Firebase, ESDocs, etc\r\n\r\n    /_tests_\r\n    - here you will find our React tests, which include our\r\n      Enzyme and Jest tests\r\n\r\n    /dev\r\n    - folder containts components that are currently under\r\n      development\r\n\r\n    /dev/peter-test\r\n    - this folder contains our use of different frameworks\r\n      for the purpose of comparing and contrasting the strengths and weaknesses of each framework\r\n    - Included frameworks: Angular, React, Vue, and \r\n      WebComponents\r\n\r\n    /docs\r\n    - this folder contains teh documentation to the components\r\n      under development as well as components that have reached\r\n      production\r\n    - docs are able to be viewed via a browser\r\n\r\n# License\r\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\r\n\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n",
    "longname": "F:\\Users\\kien\\kiwi\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"peter-test\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"chromeless\": \"^1.5.1\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-jsx-plugin\": \"^1.0.0\",\n    \"esdoc-react-plugin\": \"^1.0.1\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"jest-image-snapshot\": \"^2.4.1\",\n    \"npm\": \"^6.0.0\",\n    \"react\": \"^16.3.2\",\n    \"react-dom\": \"^16.3.2\",\n    \"react-scripts\": \"1.1.4\",\n    \"travis\": \"^0.1.1\",\n    \"webpack\": \"^4.9.1\"\n  },\n  \"jest\": {\n    \"collectCoverage\": true,\n    \"coverageDirectory\": \"<rootDir>/coverage\",\n    \"coverageReporters\": [\n      \"text\",\n      \"html\"\n    ]\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"jest PeterTest.test.js\",\n    \"test:localRegression\": \"jest index.test.js --runInBand\",\n    \"test:localUpdate\": \"jest index.test.js --updateSnapshot --runInBand\",\n    \"test:stagingRegression\": \"jest regressionStaging.test.js --runInBand\",\n    \"test:stagingUpdate\": \"jest regressionStaging.test.js --updateSnapshot --runInBand\",\n    \"test:productionRegression\": \"jest regressionProduction.test.js --runInBand\",\n    \"test:productionUpdate\": \"jest regressionProduction.test.js --updateSnapshot --runInBand\",\n    \"test:headless\": \"jest --runInBand --setupFiles='/Users/Dnutz/Desktop/CSE112/kiwi/jest/setup.headless.js'\",\n    \"eject\": \"react-scripts eject\"\n  },\n  \"devDependencies\": {\n    \"@angular/cli\": \"^1.7.4\",\n    \"babel-cli\": \"^6.26.0\",\n    \"babel-jest\": \"^22.4.3\",\n    \"babel-polyfill\": \"^6.26.0\",\n    \"babel-preset-env\": \"^1.6.1\",\n    \"babel-preset-es2015\": \"^6.24.1\",\n    \"babel-preset-react\": \"^6.24.1\",\n    \"enzyme\": \"^3.3.0\",\n    \"enzyme-adapter-react-16\": \"^1.1.1\",\n    \"jest\": \"^22.4.3\",\n    \"react-addons-test-utils\": \"^15.6.2\",\n    \"react-test-renderer\": \"^16.3.2\"\n  }\n}\n",
    "longname": "F:\\Users\\kien\\kiwi\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]